<?xml version='1.0' encoding='utf-8' ?>

<workbook source-platform='mac' version='8.3' xmlns:user='http://www.tableausoftware.com/xml/user'>
  <!-- build 8200.14.0720.2105                                -->
  <preferences>
  </preferences>
  <style-theme name='modern' />
  <datasources>
    <datasource hasconnection='false' inline='true' name='Parameters' version='8.3'>
      <aliases enabled='yes' />
      <column caption='1' datatype='real' name='[Parameter 1]' param-domain-type='any' role='measure' type='quantitative' value='1.0'>
        <calculation class='tableau' formula='1.0' />
      </column>
      <column alias='Best sellers' caption='Analysis' datatype='string' name='[Parameter 2]' param-domain-type='list' role='measure' type='nominal' value='&quot;best&quot;'>
        <calculation class='tableau' formula='&quot;best&quot;' />
        <aliases>
          <alias key='&quot;best&quot;' value='Best sellers' />
          <alias key='&quot;worst&quot;' value='Poor sellers' />
        </aliases>
        <members>
          <member alias='Best sellers' value='&quot;best&quot;' />
          <member alias='Poor sellers' value='&quot;worst&quot;' />
        </members>
      </column>
      <column caption='Low Stats' datatype='real' name='[Parameter 3]' param-domain-type='range' role='measure' type='quantitative' value='5.0'>
        <calculation class='tableau' formula='5.0' />
        <desc>
          <formatted-text>
            <run>Threshold at which stats are too low to calculate ratio</run>
          </formatted-text>
        </desc>
        <range granularity='1.0' max='10.0' min='1.0' />
      </column>
    </datasource>
    <datasource caption='extremesellers (ds.extremesellers) (demo)' inline='true' name='greenplum.41863.764809224500' version='8.3'>
      <connection class='greenplum' dbname='demo' expected-driver-version='PostgreSQL Unicode' odbc-native-protocol='yes' port='9999' server='localhost' username='gpadmin'>
        <relation name='extremesellers' table='[ds].[extremesellers]' type='table' />
        <metadata-records>
          <metadata-record class='column'>
            <remote-name>json_productkey</remote-name>
            <remote-type>130</remote-type>
            <local-name>[json_productkey]</local-name>
            <parent-name>[extremesellers]</parent-name>
            <remote-alias>json_productkey</remote-alias>
            <ordinal>1</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <width>255</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_WVARCHAR&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_WCHAR&quot;</attribute>
              <attribute datatype='string' name='TypeIsVarchar'>&quot;true&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>latest_batch_date</remote-name>
            <remote-type>7</remote-type>
            <local-name>[latest_batch_date]</local-name>
            <parent-name>[extremesellers]</parent-name>
            <remote-alias>latest_batch_date</remote-alias>
            <ordinal>2</ordinal>
            <local-type>date</local-type>
            <aggregation>Year</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_TYPE_DATE&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_TYPE_DATE&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>category</remote-name>
            <remote-type>130</remote-type>
            <local-name>[category]</local-name>
            <parent-name>[extremesellers]</parent-name>
            <remote-alias>category</remote-alias>
            <ordinal>3</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <width>8190</width>
            <contains-null>true</contains-null>
            <cast-to-local-type>true</cast-to-local-type>
            <collation flag='0' name='LEN_RUS' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_WLONGVARCHAR&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_WCHAR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>subcategory</remote-name>
            <remote-type>130</remote-type>
            <local-name>[subcategory]</local-name>
            <parent-name>[extremesellers]</parent-name>
            <remote-alias>subcategory</remote-alias>
            <ordinal>4</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <width>8190</width>
            <contains-null>true</contains-null>
            <cast-to-local-type>true</cast-to-local-type>
            <collation flag='0' name='LEN_RUS' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_WLONGVARCHAR&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_WCHAR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>retailername</remote-name>
            <remote-type>130</remote-type>
            <local-name>[retailername]</local-name>
            <parent-name>[extremesellers]</parent-name>
            <remote-alias>retailername</remote-alias>
            <ordinal>5</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <width>8190</width>
            <contains-null>true</contains-null>
            <cast-to-local-type>true</cast-to-local-type>
            <collation flag='0' name='LEN_RUS' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_WLONGVARCHAR&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_WCHAR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>facetbrand</remote-name>
            <remote-type>130</remote-type>
            <local-name>[facetbrand]</local-name>
            <parent-name>[extremesellers]</parent-name>
            <remote-alias>facetbrand</remote-alias>
            <ordinal>6</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <width>8190</width>
            <contains-null>true</contains-null>
            <cast-to-local-type>true</cast-to-local-type>
            <collation flag='0' name='LEN_RUS' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_WLONGVARCHAR&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_WCHAR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>taxonomiccolour</remote-name>
            <remote-type>130</remote-type>
            <local-name>[taxonomiccolour]</local-name>
            <parent-name>[extremesellers]</parent-name>
            <remote-alias>taxonomiccolour</remote-alias>
            <ordinal>7</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <width>8190</width>
            <contains-null>true</contains-null>
            <cast-to-local-type>true</cast-to-local-type>
            <collation flag='0' name='LEN_RUS' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_WLONGVARCHAR&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_WCHAR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>country</remote-name>
            <remote-type>130</remote-type>
            <local-name>[country]</local-name>
            <parent-name>[extremesellers]</parent-name>
            <remote-alias>country</remote-alias>
            <ordinal>8</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <width>8190</width>
            <contains-null>true</contains-null>
            <cast-to-local-type>true</cast-to-local-type>
            <collation flag='0' name='LEN_RUS' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_WLONGVARCHAR&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_WCHAR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>price_currentdaymode</remote-name>
            <remote-type>5</remote-type>
            <local-name>[price_currentdaymode]</local-name>
            <parent-name>[extremesellers]</parent-name>
            <remote-alias>price_currentdaymode</remote-alias>
            <ordinal>9</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_FLOAT&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_DOUBLE&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>sellers</remote-name>
            <remote-type>130</remote-type>
            <local-name>[sellers]</local-name>
            <parent-name>[extremesellers]</parent-name>
            <remote-alias>sellers</remote-alias>
            <ordinal>10</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <width>8190</width>
            <contains-null>true</contains-null>
            <cast-to-local-type>true</cast-to-local-type>
            <collation flag='0' name='LEN_RUS' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_WLONGVARCHAR&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_WCHAR&quot;</attribute>
            </attributes>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column caption='NormalisedRatio' datatype='real' name='[Calculation_1730812182851096]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='if ([Calculation_5270812182716952 1]&gt;[Parameters].[Parameter 3]) then [Calculation_8450812182825530]/[Calculation_5270812182716952] else -0.01 end' scope-isolation='false'>
          <table-calc ordering-type='Rows' />
        </calculation>
      </column>
      <column caption='ColourField' datatype='string' name='[Calculation_2730813141847173]' role='measure' type='nominal'>
        <calculation class='tableau' formula='if [Calculation_1730812182851096]&gt;1 then &quot;Over-represented&quot; elseif [Calculation_1730812182851096]&lt;0 then &quot;Stats too low&quot; else &quot;Under-represented&quot; end' scope-isolation='false'>
          <table-calc ordering-type='Rows' />
        </calculation>
      </column>
      <column caption='Count in all' datatype='integer' name='[Calculation_5270812182716952 1 1]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='sum(1)' scope-isolation='false' />
      </column>
      <column caption='Count in extreme sellers' datatype='integer' name='[Calculation_5270812182716952 1]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='sum(if [sellers] = [Parameters].[Parameter 2] then 1 else 0 end)' scope-isolation='false' />
      </column>
      <column caption='Ratio in all' datatype='real' name='[Calculation_5270812182716952]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='[Calculation_5270812182716952 1 1]/Total([Calculation_5270812182716952 1 1])' scope-isolation='false'>
          <table-calc ordering-type='Rows' />
        </calculation>
      </column>
      <column caption='Ratio in extreme sellers' datatype='real' name='[Calculation_8450812182825530]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='[Calculation_5270812182716952 1]/Total([Calculation_5270812182716952 1])' scope-isolation='false'>
          <table-calc ordering-type='Rows' />
        </calculation>
      </column>
      <column datatype='integer' name='[Number of Records]' role='measure' type='quantitative' user:auto-column='numrec'>
        <calculation class='tableau' formula='1' />
      </column>
      <column caption='Category' datatype='string' name='[category]' role='dimension' type='nominal'>
      </column>
      <column caption='Country' datatype='string' name='[country]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal'>
      </column>
      <column caption='Facetbrand' datatype='string' name='[facetbrand]' role='dimension' type='nominal'>
      </column>
      <column caption='Json Productkey' datatype='string' name='[json_productkey]' role='dimension' type='nominal'>
      </column>
      <column caption='Price Currentdaymode' datatype='real' name='[price_currentdaymode]' role='measure' type='quantitative'>
      </column>
      <column caption='Retailername' datatype='string' name='[retailername]' role='dimension' type='nominal'>
      </column>
      <column caption='Sellers' datatype='string' name='[sellers]' role='dimension' type='nominal'>
      </column>
      <column caption='Subcategory' datatype='string' name='[subcategory]' role='dimension' type='nominal'>
      </column>
      <column caption='Taxonomiccolour' datatype='string' name='[taxonomiccolour]' role='dimension' type='nominal'>
      </column>
      <column-instance column='[facetbrand]' derivation='None' name='[none:facetbrand:nk]' pivot='key' type='nominal' />
      <column-instance column='[subcategory]' derivation='None' name='[none:subcategory:nk]' pivot='key' type='nominal' />
      <column-instance column='[Calculation_2730813141847173]' derivation='User' name='[usr:Calculation_2730813141847173:nk:1]' pivot='key' type='nominal'>
        <table-calc ordering-type='Rows' />
        <table-calc field='[greenplum.41863.764809224500].[Calculation_1730812182851096]' ordering-type='Rows' />
        <table-calc field='[greenplum.41863.764809224500].[Calculation_8450812182825530]' ordering-type='Rows' />
        <table-calc field='[greenplum.41863.764809224500].[Calculation_5270812182716952]' ordering-type='Rows' />
      </column-instance>
      <layout dim-ordering='alphabetic' dim-percentage='0.5' measure-ordering='alphabetic' measure-percentage='0.4' show-structure='true' />
      <style>
        <style-rule element='mark'>
          <encoding attr='color' field='[none:subcategory:nk]' type='palette'>
            <map to='#17becf'>
              <bucket>&quot;party dress&quot;</bucket>
            </map>
            <map to='#1f77b4'>
              <bucket>&quot;midi dress&quot;</bucket>
            </map>
            <map to='#1f77b4'>
              <bucket>&quot;unclassified&quot;</bucket>
            </map>
            <map to='#2ca02c'>
              <bucket>&quot;shift dress&quot;</bucket>
            </map>
            <map to='#7f7f7f'>
              <bucket>&quot;mini dress&quot;</bucket>
            </map>
            <map to='#8c564b'>
              <bucket>&quot;prom dress&quot;</bucket>
            </map>
            <map to='#9467bd'>
              <bucket>&quot;sheath dress&quot;</bucket>
            </map>
            <map to='#98df8a'>
              <bucket>&quot;slip dress&quot;</bucket>
            </map>
            <map to='#9edae5'>
              <bucket>&quot;fit &amp; flare dress&quot;</bucket>
            </map>
            <map to='#aec7e8'>
              <bucket>&quot;pinafore dress&quot;</bucket>
            </map>
            <map to='#bcbd22'>
              <bucket>&quot;lace dress&quot;</bucket>
            </map>
            <map to='#c49c94'>
              <bucket>&quot;smock dress&quot;</bucket>
            </map>
            <map to='#c5b0d5'>
              <bucket>&quot;bodycon dress&quot;</bucket>
            </map>
            <map to='#c7c7c7'>
              <bucket>&quot;strapless dress&quot;</bucket>
            </map>
            <map to='#d62728'>
              <bucket>&quot;wrap&quot;</bucket>
            </map>
            <map to='#dbdb8d'>
              <bucket>&quot;maxi dress&quot;</bucket>
            </map>
            <map to='#e377c2'>
              <bucket>&quot;tank dress&quot;</bucket>
            </map>
            <map to='#f7b6d2'>
              <bucket>&quot;skater dress&quot;</bucket>
            </map>
            <map to='#ff7f0e'>
              <bucket>&quot;t-shirt dress&quot;</bucket>
            </map>
            <map to='#ff9896'>
              <bucket>&quot;sweater &amp; jumper dress&quot;</bucket>
            </map>
            <map to='#ffbb78'>
              <bucket>&quot;shirt dress&quot;</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[none:facetbrand:nk]' type='palette'>
            <map to='#17becf'>
              <bucket>&quot;alexander wang&quot;</bucket>
            </map>
            <map to='#17becf'>
              <bucket>&quot;attention&quot;</bucket>
            </map>
            <map to='#17becf'>
              <bucket>&quot;bcbgmaxazria&quot;</bucket>
            </map>
            <map to='#17becf'>
              <bucket>&quot;c&amp;c california&quot;</bucket>
            </map>
            <map to='#17becf'>
              <bucket>&quot;christophe lemaire&quot;</bucket>
            </map>
            <map to='#17becf'>
              <bucket>&quot;club l&quot;</bucket>
            </map>
            <map to='#17becf'>
              <bucket>&quot;dotti&quot;</bucket>
            </map>
            <map to='#17becf'>
              <bucket>&quot;dr denim&quot;</bucket>
            </map>
            <map to='#17becf'>
              <bucket>&quot;esprit&quot;</bucket>
            </map>
            <map to='#17becf'>
              <bucket>&quot;fleur wood&quot;</bucket>
            </map>
            <map to='#17becf'>
              <bucket>&quot;heart n soul&quot;</bucket>
            </map>
            <map to='#17becf'>
              <bucket>&quot;joe&apos;s&quot;</bucket>
            </map>
            <map to='#17becf'>
              <bucket>&quot;love&quot;</bucket>
            </map>
            <map to='#17becf'>
              <bucket>&quot;love zooey&quot;</bucket>
            </map>
            <map to='#17becf'>
              <bucket>&quot;lucca couture&quot;</bucket>
            </map>
            <map to='#17becf'>
              <bucket>&quot;marc jacobs&quot;</bucket>
            </map>
            <map to='#17becf'>
              <bucket>&quot;maxmara&quot;</bucket>
            </map>
            <map to='#17becf'>
              <bucket>&quot;numph&quot;</bucket>
            </map>
            <map to='#17becf'>
              <bucket>&quot;olsenboye&quot;</bucket>
            </map>
            <map to='#17becf'>
              <bucket>&quot;sparkle &amp; fade&quot;</bucket>
            </map>
            <map to='#17becf'>
              <bucket>&quot;splendid&quot;</bucket>
            </map>
            <map to='#17becf'>
              <bucket>&quot;t by alexander wang&quot;</bucket>
            </map>
            <map to='#17becf'>
              <bucket>&quot;topshop&quot;</bucket>
            </map>
            <map to='#17becf'>
              <bucket>&quot;u.s. polo assn.&quot;</bucket>
            </map>
            <map to='#17becf'>
              <bucket>&quot;victoria victoria beckham&quot;</bucket>
            </map>
            <map to='#17becf'>
              <bucket>&quot;weavers&quot;</bucket>
            </map>
            <map to='#1f77b4'>
              <bucket>&quot;12th street by cynthia vincent&quot;</bucket>
            </map>
            <map to='#1f77b4'>
              <bucket>&quot;ali ro&quot;</bucket>
            </map>
            <map to='#1f77b4'>
              <bucket>&quot;bolzoni &amp; walsh&quot;</bucket>
            </map>
            <map to='#1f77b4'>
              <bucket>&quot;carven&quot;</bucket>
            </map>
            <map to='#1f77b4'>
              <bucket>&quot;catherine malandrino&quot;</bucket>
            </map>
            <map to='#1f77b4'>
              <bucket>&quot;city chic&quot;</bucket>
            </map>
            <map to='#1f77b4'>
              <bucket>&quot;creatures of the wind&quot;</bucket>
            </map>
            <map to='#1f77b4'>
              <bucket>&quot;damsel in a dress&quot;</bucket>
            </map>
            <map to='#1f77b4'>
              <bucket>&quot;eileen fisher plus&quot;</bucket>
            </map>
            <map to='#1f77b4'>
              <bucket>&quot;fashion star&quot;</bucket>
            </map>
            <map to='#1f77b4'>
              <bucket>&quot;fred perry&quot;</bucket>
            </map>
            <map to='#1f77b4'>
              <bucket>&quot;greylin&quot;</bucket>
            </map>
            <map to='#1f77b4'>
              <bucket>&quot;josie natori&quot;</bucket>
            </map>
            <map to='#1f77b4'>
              <bucket>&quot;jovonnista&quot;</bucket>
            </map>
            <map to='#1f77b4'>
              <bucket>&quot;kimchi blue&quot;</bucket>
            </map>
            <map to='#1f77b4'>
              <bucket>&quot;luxology&quot;</bucket>
            </map>
            <map to='#1f77b4'>
              <bucket>&quot;magaschoni&quot;</bucket>
            </map>
            <map to='#1f77b4'>
              <bucket>&quot;mih jeans&quot;</bucket>
            </map>
            <map to='#1f77b4'>
              <bucket>&quot;nina ricci&quot;</bucket>
            </map>
            <map to='#1f77b4'>
              <bucket>&quot;oak&quot;</bucket>
            </map>
            <map to='#1f77b4'>
              <bucket>&quot;people tree&quot;</bucket>
            </map>
            <map to='#1f77b4'>
              <bucket>&quot;rachel rachel roy&quot;</bucket>
            </map>
            <map to='#1f77b4'>
              <bucket>&quot;rickie freeman for teri jon&quot;</bucket>
            </map>
            <map to='#1f77b4'>
              <bucket>&quot;stella mccartney&quot;</bucket>
            </map>
            <map to='#1f77b4'>
              <bucket>&quot;tfnc&quot;</bucket>
            </map>
            <map to='#1f77b4'>
              <bucket>&quot;tommy hilfiger&quot;</bucket>
            </map>
            <map to='#1f77b4'>
              <bucket>&quot;vix&quot;</bucket>
            </map>
            <map to='#1f77b4'>
              <bucket>&quot;yumi london&quot;</bucket>
            </map>
            <map to='#2ca02c'>
              <bucket>&quot;a.n.a&quot;</bucket>
            </map>
            <map to='#2ca02c'>
              <bucket>&quot;alice &amp; you&quot;</bucket>
            </map>
            <map to='#2ca02c'>
              <bucket>&quot;ax paris&quot;</bucket>
            </map>
            <map to='#2ca02c'>
              <bucket>&quot;charlotterusse&quot;</bucket>
            </map>
            <map to='#2ca02c'>
              <bucket>&quot;daisy fuentes&quot;</bucket>
            </map>
            <map to='#2ca02c'>
              <bucket>&quot;derek lam&quot;</bucket>
            </map>
            <map to='#2ca02c'>
              <bucket>&quot;french connection&quot;</bucket>
            </map>
            <map to='#2ca02c'>
              <bucket>&quot;gloria vanderbilt&quot;</bucket>
            </map>
            <map to='#2ca02c'>
              <bucket>&quot;goldie&quot;</bucket>
            </map>
            <map to='#2ca02c'>
              <bucket>&quot;iska&quot;</bucket>
            </map>
            <map to='#2ca02c'>
              <bucket>&quot;ivy &amp; blu&quot;</bucket>
            </map>
            <map to='#2ca02c'>
              <bucket>&quot;jessica howard&quot;</bucket>
            </map>
            <map to='#2ca02c'>
              <bucket>&quot;jigsaw&quot;</bucket>
            </map>
            <map to='#2ca02c'>
              <bucket>&quot;johnny was&quot;</bucket>
            </map>
            <map to='#2ca02c'>
              <bucket>&quot;label by five twelve&quot;</bucket>
            </map>
            <map to='#2ca02c'>
              <bucket>&quot;marni&quot;</bucket>
            </map>
            <map to='#2ca02c'>
              <bucket>&quot;martin grant&quot;</bucket>
            </map>
            <map to='#2ca02c'>
              <bucket>&quot;moda&quot;</bucket>
            </map>
            <map to='#2ca02c'>
              <bucket>&quot;ny collection&quot;</bucket>
            </map>
            <map to='#2ca02c'>
              <bucket>&quot;pins and needles&quot;</bucket>
            </map>
            <map to='#2ca02c'>
              <bucket>&quot;rachel roy&quot;</bucket>
            </map>
            <map to='#2ca02c'>
              <bucket>&quot;sacai&quot;</bucket>
            </map>
            <map to='#2ca02c'>
              <bucket>&quot;sharagano&quot;</bucket>
            </map>
            <map to='#2ca02c'>
              <bucket>&quot;sofia by vix&quot;</bucket>
            </map>
            <map to='#2ca02c'>
              <bucket>&quot;tahari by asl&quot;</bucket>
            </map>
            <map to='#2ca02c'>
              <bucket>&quot;the ragged priest&quot;</bucket>
            </map>
            <map to='#2ca02c'>
              <bucket>&quot;traffic people&quot;</bucket>
            </map>
            <map to='#2ca02c'>
              <bucket>&quot;unique&quot;</bucket>
            </map>
            <map to='#2ca02c'>
              <bucket>&quot;xhilaration&quot;</bucket>
            </map>
            <map to='#7f7f7f'>
              <bucket>&quot;10 crosby derek lam&quot;</bucket>
            </map>
            <map to='#7f7f7f'>
              <bucket>&quot;alice &amp; olivia&quot;</bucket>
            </map>
            <map to='#7f7f7f'>
              <bucket>&quot;be bop&quot;</bucket>
            </map>
            <map to='#7f7f7f'>
              <bucket>&quot;beloved&quot;</bucket>
            </map>
            <map to='#7f7f7f'>
              <bucket>&quot;cooperative&quot;</bucket>
            </map>
            <map to='#7f7f7f'>
              <bucket>&quot;cusp by neiman marcus&quot;</bucket>
            </map>
            <map to='#7f7f7f'>
              <bucket>&quot;diesel&quot;</bucket>
            </map>
            <map to='#7f7f7f'>
              <bucket>&quot;eci&quot;</bucket>
            </map>
            <map to='#7f7f7f'>
              <bucket>&quot;escada&quot;</bucket>
            </map>
            <map to='#7f7f7f'>
              <bucket>&quot;foxcroft&quot;</bucket>
            </map>
            <map to='#7f7f7f'>
              <bucket>&quot;jil sander&quot;</bucket>
            </map>
            <map to='#7f7f7f'>
              <bucket>&quot;kamalikulture&quot;</bucket>
            </map>
            <map to='#7f7f7f'>
              <bucket>&quot;lily rose&quot;</bucket>
            </map>
            <map to='#7f7f7f'>
              <bucket>&quot;lipsy&quot;</bucket>
            </map>
            <map to='#7f7f7f'>
              <bucket>&quot;maison jules&quot;</bucket>
            </map>
            <map to='#7f7f7f'>
              <bucket>&quot;maiyet&quot;</bucket>
            </map>
            <map to='#7f7f7f'>
              <bucket>&quot;muse&quot;</bucket>
            </map>
            <map to='#7f7f7f'>
              <bucket>&quot;muubaa&quot;</bucket>
            </map>
            <map to='#7f7f7f'>
              <bucket>&quot;peter pilotto&quot;</bucket>
            </map>
            <map to='#7f7f7f'>
              <bucket>&quot;route 66&quot;</bucket>
            </map>
            <map to='#7f7f7f'>
              <bucket>&quot;see by chloãžã‡ãžâ_&quot;</bucket>
            </map>
            <map to='#7f7f7f'>
              <bucket>&quot;sejour&quot;</bucket>
            </map>
            <map to='#7f7f7f'>
              <bucket>&quot;soft joie&quot;</bucket>
            </map>
            <map to='#7f7f7f'>
              <bucket>&quot;striders edge&quot;</bucket>
            </map>
            <map to='#7f7f7f'>
              <bucket>&quot;sugarhill boutique&quot;</bucket>
            </map>
            <map to='#7f7f7f'>
              <bucket>&quot;vanessa virginia&quot;</bucket>
            </map>
            <map to='#7f7f7f'>
              <bucket>&quot;velvet heartãžâãžâ_&quot;</bucket>
            </map>
            <map to='#8c564b'>
              <bucket>&quot;alternative&quot;</bucket>
            </map>
            <map to='#8c564b'>
              <bucket>&quot;bcbg&quot;</bucket>
            </map>
            <map to='#8c564b'>
              <bucket>&quot;boutique&quot;</bucket>
            </map>
            <map to='#8c564b'>
              <bucket>&quot;by zoãžã‡ãžâ_&quot;</bucket>
            </map>
            <map to='#8c564b'>
              <bucket>&quot;dolan&quot;</bucket>
            </map>
            <map to='#8c564b'>
              <bucket>&quot;ellen tracy&quot;</bucket>
            </map>
            <map to='#8c564b'>
              <bucket>&quot;emilio pucci&quot;</bucket>
            </map>
            <map to='#8c564b'>
              <bucket>&quot;go silk&quot;</bucket>
            </map>
            <map to='#8c564b'>
              <bucket>&quot;helmut lang&quot;</bucket>
            </map>
            <map to='#8c564b'>
              <bucket>&quot;house of holland&quot;</bucket>
            </map>
            <map to='#8c564b'>
              <bucket>&quot;kenzo&quot;</bucket>
            </map>
            <map to='#8c564b'>
              <bucket>&quot;l&apos;amour&quot;</bucket>
            </map>
            <map to='#8c564b'>
              <bucket>&quot;laundry by shelli segal&quot;</bucket>
            </map>
            <map to='#8c564b'>
              <bucket>&quot;lilly pulitzer¨&quot;</bucket>
            </map>
            <map to='#8c564b'>
              <bucket>&quot;miss tina&quot;</bucket>
            </map>
            <map to='#8c564b'>
              <bucket>&quot;missoni&quot;</bucket>
            </map>
            <map to='#8c564b'>
              <bucket>&quot;moschino&quot;</bucket>
            </map>
            <map to='#8c564b'>
              <bucket>&quot;new look&quot;</bucket>
            </map>
            <map to='#8c564b'>
              <bucket>&quot;Not found&quot;</bucket>
            </map>
            <map to='#8c564b'>
              <bucket>&quot;pink tartan&quot;</bucket>
            </map>
            <map to='#8c564b'>
              <bucket>&quot;presley skye&quot;</bucket>
            </map>
            <map to='#8c564b'>
              <bucket>&quot;river island&quot;</bucket>
            </map>
            <map to='#8c564b'>
              <bucket>&quot;the row&quot;</bucket>
            </map>
            <map to='#8c564b'>
              <bucket>&quot;the whitepepper&quot;</bucket>
            </map>
            <map to='#8c564b'>
              <bucket>&quot;three dots plus&quot;</bucket>
            </map>
            <map to='#8c564b'>
              <bucket>&quot;tsumori chisato&quot;</bucket>
            </map>
            <map to='#8c564b'>
              <bucket>&quot;yumi&quot;</bucket>
            </map>
            <map to='#9467bd'>
              <bucket>&quot;3.1 phillip lim&quot;</bucket>
            </map>
            <map to='#9467bd'>
              <bucket>&quot;akris&quot;</bucket>
            </map>
            <map to='#9467bd'>
              <bucket>&quot;as u wish&quot;</bucket>
            </map>
            <map to='#9467bd'>
              <bucket>&quot;bongo&quot;</bucket>
            </map>
            <map to='#9467bd'>
              <bucket>&quot;cope&quot;</bucket>
            </map>
            <map to='#9467bd'>
              <bucket>&quot;diesel¨&quot;</bucket>
            </map>
            <map to='#9467bd'>
              <bucket>&quot;eight sixty&quot;</bucket>
            </map>
            <map to='#9467bd'>
              <bucket>&quot;halo&quot;</bucket>
            </map>
            <map to='#9467bd'>
              <bucket>&quot;heartloom&quot;</bucket>
            </map>
            <map to='#9467bd'>
              <bucket>&quot;joyrich&quot;</bucket>
            </map>
            <map to='#9467bd'>
              <bucket>&quot;kardashian kollection&quot;</bucket>
            </map>
            <map to='#9467bd'>
              <bucket>&quot;la cera&quot;</bucket>
            </map>
            <map to='#9467bd'>
              <bucket>&quot;le ciel&quot;</bucket>
            </map>
            <map to='#9467bd'>
              <bucket>&quot;love21&quot;</bucket>
            </map>
            <map to='#9467bd'>
              <bucket>&quot;lucabella&quot;</bucket>
            </map>
            <map to='#9467bd'>
              <bucket>&quot;maeve&quot;</bucket>
            </map>
            <map to='#9467bd'>
              <bucket>&quot;mango&quot;</bucket>
            </map>
            <map to='#9467bd'>
              <bucket>&quot;michael van der ham&quot;</bucket>
            </map>
            <map to='#9467bd'>
              <bucket>&quot;nonoo&quot;</bucket>
            </map>
            <map to='#9467bd'>
              <bucket>&quot;oasis&quot;</bucket>
            </map>
            <map to='#9467bd'>
              <bucket>&quot;reiss&quot;</bucket>
            </map>
            <map to='#9467bd'>
              <bucket>&quot;rewind&quot;</bucket>
            </map>
            <map to='#9467bd'>
              <bucket>&quot;selected&quot;</bucket>
            </map>
            <map to='#9467bd'>
              <bucket>&quot;simply vera vera wang&quot;</bucket>
            </map>
            <map to='#9467bd'>
              <bucket>&quot;the odells&quot;</bucket>
            </map>
            <map to='#9467bd'>
              <bucket>&quot;troubadour&quot;</bucket>
            </map>
            <map to='#9467bd'>
              <bucket>&quot;won hundred&quot;</bucket>
            </map>
            <map to='#98df8a'>
              <bucket>&quot;acne studios&quot;</bucket>
            </map>
            <map to='#98df8a'>
              <bucket>&quot;band of outsiders&quot;</bucket>
            </map>
            <map to='#98df8a'>
              <bucket>&quot;collective concepts&quot;</bucket>
            </map>
            <map to='#98df8a'>
              <bucket>&quot;comme des garons&quot;</bucket>
            </map>
            <map to='#98df8a'>
              <bucket>&quot;dieselãžâãžâ_å â€”â¾â€™_&quot;</bucket>
            </map>
            <map to='#98df8a'>
              <bucket>&quot;dream out loud by selena gomez&quot;</bucket>
            </map>
            <map to='#98df8a'>
              <bucket>&quot;ganni&quot;</bucket>
            </map>
            <map to='#98df8a'>
              <bucket>&quot;gottex&quot;</bucket>
            </map>
            <map to='#98df8a'>
              <bucket>&quot;jessica simpson&quot;</bucket>
            </map>
            <map to='#98df8a'>
              <bucket>&quot;jonathan simkhai&quot;</bucket>
            </map>
            <map to='#98df8a'>
              <bucket>&quot;jovonista&quot;</bucket>
            </map>
            <map to='#98df8a'>
              <bucket>&quot;kaliko&quot;</bucket>
            </map>
            <map to='#98df8a'>
              <bucket>&quot;lacoste&quot;</bucket>
            </map>
            <map to='#98df8a'>
              <bucket>&quot;maison scotch&quot;</bucket>
            </map>
            <map to='#98df8a'>
              <bucket>&quot;mcginn&quot;</bucket>
            </map>
            <map to='#98df8a'>
              <bucket>&quot;mcq alexander mcqueen&quot;</bucket>
            </map>
            <map to='#98df8a'>
              <bucket>&quot;michael kors&quot;</bucket>
            </map>
            <map to='#98df8a'>
              <bucket>&quot;nanette lepore&quot;</bucket>
            </map>
            <map to='#98df8a'>
              <bucket>&quot;opening ceremony&quot;</bucket>
            </map>
            <map to='#98df8a'>
              <bucket>&quot;paige&quot;</bucket>
            </map>
            <map to='#98df8a'>
              <bucket>&quot;rachel zoe&quot;</bucket>
            </map>
            <map to='#98df8a'>
              <bucket>&quot;robert rodriguez&quot;</bucket>
            </map>
            <map to='#98df8a'>
              <bucket>&quot;speechless&quot;</bucket>
            </map>
            <map to='#98df8a'>
              <bucket>&quot;tamara mellon&quot;</bucket>
            </map>
            <map to='#98df8a'>
              <bucket>&quot;theory&quot;</bucket>
            </map>
            <map to='#98df8a'>
              <bucket>&quot;thom browne&quot;</bucket>
            </map>
            <map to='#98df8a'>
              <bucket>&quot;tylho&quot;</bucket>
            </map>
            <map to='#98df8a'>
              <bucket>&quot;volume one&quot;</bucket>
            </map>
            <map to='#9edae5'>
              <bucket>&quot;212 collection&quot;</bucket>
            </map>
            <map to='#9edae5'>
              <bucket>&quot;antipodium&quot;</bucket>
            </map>
            <map to='#9edae5'>
              <bucket>&quot;bcx&quot;</bucket>
            </map>
            <map to='#9edae5'>
              <bucket>&quot;bisou bisou&quot;</bucket>
            </map>
            <map to='#9edae5'>
              <bucket>&quot;christopher kane&quot;</bucket>
            </map>
            <map to='#9edae5'>
              <bucket>&quot;cluny&quot;</bucket>
            </map>
            <map to='#9edae5'>
              <bucket>&quot;eileen fisher&quot;</bucket>
            </map>
            <map to='#9edae5'>
              <bucket>&quot;evil twin&quot;</bucket>
            </map>
            <map to='#9edae5'>
              <bucket>&quot;f21&quot;</bucket>
            </map>
            <map to='#9edae5'>
              <bucket>&quot;g-star&quot;</bucket>
            </map>
            <map to='#9edae5'>
              <bucket>&quot;hurley&quot;</bucket>
            </map>
            <map to='#9edae5'>
              <bucket>&quot;jones new york collection&quot;</bucket>
            </map>
            <map to='#9edae5'>
              <bucket>&quot;lucky brand&quot;</bucket>
            </map>
            <map to='#9edae5'>
              <bucket>&quot;madison leigh&quot;</bucket>
            </map>
            <map to='#9edae5'>
              <bucket>&quot;mara hoffman&quot;</bucket>
            </map>
            <map to='#9edae5'>
              <bucket>&quot;michael michael kors plus&quot;</bucket>
            </map>
            <map to='#9edae5'>
              <bucket>&quot;no boundaries&quot;</bucket>
            </map>
            <map to='#9edae5'>
              <bucket>&quot;paul &amp; joe&quot;</bucket>
            </map>
            <map to='#9edae5'>
              <bucket>&quot;see by chloe&quot;</bucket>
            </map>
            <map to='#9edae5'>
              <bucket>&quot;staring at stars&quot;</bucket>
            </map>
            <map to='#9edae5'>
              <bucket>&quot;tahari&quot;</bucket>
            </map>
            <map to='#9edae5'>
              <bucket>&quot;tahari by asl petite&quot;</bucket>
            </map>
            <map to='#9edae5'>
              <bucket>&quot;tory burch&quot;</bucket>
            </map>
            <map to='#9edae5'>
              <bucket>&quot;valentino&quot;</bucket>
            </map>
            <map to='#9edae5'>
              <bucket>&quot;vivienne westwood&quot;</bucket>
            </map>
            <map to='#9edae5'>
              <bucket>&quot;weekend max mara&quot;</bucket>
            </map>
            <map to='#aec7e8'>
              <bucket>&quot;18 and east&quot;</bucket>
            </map>
            <map to='#aec7e8'>
              <bucket>&quot;3.1 phillip lim for target&quot;</bucket>
            </map>
            <map to='#aec7e8'>
              <bucket>&quot;amanda lane&quot;</bucket>
            </map>
            <map to='#aec7e8'>
              <bucket>&quot;bzr&quot;</bucket>
            </map>
            <map to='#aec7e8'>
              <bucket>&quot;calvin klein&quot;</bucket>
            </map>
            <map to='#aec7e8'>
              <bucket>&quot;cloth &amp; stone&quot;</bucket>
            </map>
            <map to='#aec7e8'>
              <bucket>&quot;current elliott&quot;</bucket>
            </map>
            <map to='#aec7e8'>
              <bucket>&quot;d.ra&quot;</bucket>
            </map>
            <map to='#aec7e8'>
              <bucket>&quot;daniel rainn&quot;</bucket>
            </map>
            <map to='#aec7e8'>
              <bucket>&quot;east&quot;</bucket>
            </map>
            <map to='#aec7e8'>
              <bucket>&quot;gucci&quot;</bucket>
            </map>
            <map to='#aec7e8'>
              <bucket>&quot;holding horses&quot;</bucket>
            </map>
            <map to='#aec7e8'>
              <bucket>&quot;iro&quot;</bucket>
            </map>
            <map to='#aec7e8'>
              <bucket>&quot;james perse&quot;</bucket>
            </map>
            <map to='#aec7e8'>
              <bucket>&quot;jones new york sport&quot;</bucket>
            </map>
            <map to='#aec7e8'>
              <bucket>&quot;lowie&quot;</bucket>
            </map>
            <map to='#aec7e8'>
              <bucket>&quot;maggy london&quot;</bucket>
            </map>
            <map to='#aec7e8'>
              <bucket>&quot;michael stars&quot;</bucket>
            </map>
            <map to='#aec7e8'>
              <bucket>&quot;mink pink&quot;</bucket>
            </map>
            <map to='#aec7e8'>
              <bucket>&quot;oh my love&quot;</bucket>
            </map>
            <map to='#aec7e8'>
              <bucket>&quot;olive &amp; oak&quot;</bucket>
            </map>
            <map to='#aec7e8'>
              <bucket>&quot;philosophy&quot;</bucket>
            </map>
            <map to='#aec7e8'>
              <bucket>&quot;ralph lauren&quot;</bucket>
            </map>
            <map to='#aec7e8'>
              <bucket>&quot;rebecca taylor&quot;</bucket>
            </map>
            <map to='#aec7e8'>
              <bucket>&quot;steven alan&quot;</bucket>
            </map>
            <map to='#aec7e8'>
              <bucket>&quot;studio m&quot;</bucket>
            </map>
            <map to='#aec7e8'>
              <bucket>&quot;the addison story&quot;</bucket>
            </map>
            <map to='#aec7e8'>
              <bucket>&quot;the portland collection by pendleton&quot;</bucket>
            </map>
            <map to='#bcbd22'>
              <bucket>&quot;alfani&quot;</bucket>
            </map>
            <map to='#bcbd22'>
              <bucket>&quot;apt. 9&quot;</bucket>
            </map>
            <map to='#bcbd22'>
              <bucket>&quot;boutique by jaeger&quot;</bucket>
            </map>
            <map to='#bcbd22'>
              <bucket>&quot;chandi and lia&quot;</bucket>
            </map>
            <map to='#bcbd22'>
              <bucket>&quot;dieselîî_š—¾’_&quot;</bucket>
            </map>
            <map to='#bcbd22'>
              <bucket>&quot;donna karan&quot;</bucket>
            </map>
            <map to='#bcbd22'>
              <bucket>&quot;faded glory&quot;</bucket>
            </map>
            <map to='#bcbd22'>
              <bucket>&quot;hatley&quot;</bucket>
            </map>
            <map to='#bcbd22'>
              <bucket>&quot;i.madeline&quot;</bucket>
            </map>
            <map to='#bcbd22'>
              <bucket>&quot;indication by eci&quot;</bucket>
            </map>
            <map to='#bcbd22'>
              <bucket>&quot;j.crew&quot;</bucket>
            </map>
            <map to='#bcbd22'>
              <bucket>&quot;just female&quot;</bucket>
            </map>
            <map to='#bcbd22'>
              <bucket>&quot;karen millen&quot;</bucket>
            </map>
            <map to='#bcbd22'>
              <bucket>&quot;liz claiborne&quot;</bucket>
            </map>
            <map to='#bcbd22'>
              <bucket>&quot;loro piana&quot;</bucket>
            </map>
            <map to='#bcbd22'>
              <bucket>&quot;lucy love&quot;</bucket>
            </map>
            <map to='#bcbd22'>
              <bucket>&quot;nicole miller&quot;</bucket>
            </map>
            <map to='#bcbd22'>
              <bucket>&quot;nine &amp; co&quot;</bucket>
            </map>
            <map to='#bcbd22'>
              <bucket>&quot;rebecca minkoff&quot;</bucket>
            </map>
            <map to='#bcbd22'>
              <bucket>&quot;shoshanna&quot;</bucket>
            </map>
            <map to='#bcbd22'>
              <bucket>&quot;sister jane&quot;</bucket>
            </map>
            <map to='#bcbd22'>
              <bucket>&quot;sl fashions&quot;</bucket>
            </map>
            <map to='#bcbd22'>
              <bucket>&quot;studio one&quot;</bucket>
            </map>
            <map to='#bcbd22'>
              <bucket>&quot;vince&quot;</bucket>
            </map>
            <map to='#bcbd22'>
              <bucket>&quot;vince camuto&quot;</bucket>
            </map>
            <map to='#bcbd22'>
              <bucket>&quot;wal g&quot;</bucket>
            </map>
            <map to='#c49c94'>
              <bucket>&quot;a wear&quot;</bucket>
            </map>
            <map to='#c49c94'>
              <bucket>&quot;allen allen&quot;</bucket>
            </map>
            <map to='#c49c94'>
              <bucket>&quot;anglomania&quot;</bucket>
            </map>
            <map to='#c49c94'>
              <bucket>&quot;bdg&quot;</bucket>
            </map>
            <map to='#c49c94'>
              <bucket>&quot;carhartt&quot;</bucket>
            </map>
            <map to='#c49c94'>
              <bucket>&quot;costa blanca&quot;</bucket>
            </map>
            <map to='#c49c94'>
              <bucket>&quot;dolce vita&quot;</bucket>
            </map>
            <map to='#c49c94'>
              <bucket>&quot;emma cook&quot;</bucket>
            </map>
            <map to='#c49c94'>
              <bucket>&quot;equipment&quot;</bucket>
            </map>
            <map to='#c49c94'>
              <bucket>&quot;hilfiger denim&quot;</bucket>
            </map>
            <map to='#c49c94'>
              <bucket>&quot;jag jeans&quot;</bucket>
            </map>
            <map to='#c49c94'>
              <bucket>&quot;l&apos;wren scott&quot;</bucket>
            </map>
            <map to='#c49c94'>
              <bucket>&quot;lbk&quot;</bucket>
            </map>
            <map to='#c49c94'>
              <bucket>&quot;line &amp; dot&quot;</bucket>
            </map>
            <map to='#c49c94'>
              <bucket>&quot;missoni mare&quot;</bucket>
            </map>
            <map to='#c49c94'>
              <bucket>&quot;motel&quot;</bucket>
            </map>
            <map to='#c49c94'>
              <bucket>&quot;only@macys&quot;</bucket>
            </map>
            <map to='#c49c94'>
              <bucket>&quot;phase eight&quot;</bucket>
            </map>
            <map to='#c49c94'>
              <bucket>&quot;proenza schouler&quot;</bucket>
            </map>
            <map to='#c49c94'>
              <bucket>&quot;religion&quot;</bucket>
            </map>
            <map to='#c49c94'>
              <bucket>&quot;rochas&quot;</bucket>
            </map>
            <map to='#c49c94'>
              <bucket>&quot;sachin + babi&quot;</bucket>
            </map>
            <map to='#c49c94'>
              <bucket>&quot;thakoon&quot;</bucket>
            </map>
            <map to='#c49c94'>
              <bucket>&quot;tommy bahama&quot;</bucket>
            </map>
            <map to='#c49c94'>
              <bucket>&quot;two by vince camuto&quot;</bucket>
            </map>
            <map to='#c49c94'>
              <bucket>&quot;urban renewal&quot;</bucket>
            </map>
            <map to='#c49c94'>
              <bucket>&quot;y.a.s&quot;</bucket>
            </map>
            <map to='#c5b0d5'>
              <bucket>&quot;4.collective&quot;</bucket>
            </map>
            <map to='#c5b0d5'>
              <bucket>&quot;alexander mcqueen&quot;</bucket>
            </map>
            <map to='#c5b0d5'>
              <bucket>&quot;band of gypsies&quot;</bucket>
            </map>
            <map to='#c5b0d5'>
              <bucket>&quot;boss hugo boss&quot;</bucket>
            </map>
            <map to='#c5b0d5'>
              <bucket>&quot;burberry&quot;</bucket>
            </map>
            <map to='#c5b0d5'>
              <bucket>&quot;charter club&quot;</bucket>
            </map>
            <map to='#c5b0d5'>
              <bucket>&quot;cheap monday&quot;</bucket>
            </map>
            <map to='#c5b0d5'>
              <bucket>&quot;darian group&quot;</bucket>
            </map>
            <map to='#c5b0d5'>
              <bucket>&quot;eliza j&quot;</bucket>
            </map>
            <map to='#c5b0d5'>
              <bucket>&quot;haute hippie&quot;</bucket>
            </map>
            <map to='#c5b0d5'>
              <bucket>&quot;kate spade new york&quot;</bucket>
            </map>
            <map to='#c5b0d5'>
              <bucket>&quot;kenneth cole new york&quot;</bucket>
            </map>
            <map to='#c5b0d5'>
              <bucket>&quot;lazy oaf&quot;</bucket>
            </map>
            <map to='#c5b0d5'>
              <bucket>&quot;made&quot;</bucket>
            </map>
            <map to='#c5b0d5'>
              <bucket>&quot;mademoiselle tara&quot;</bucket>
            </map>
            <map to='#c5b0d5'>
              <bucket>&quot;minkpink&quot;</bucket>
            </map>
            <map to='#c5b0d5'>
              <bucket>&quot;mint velvet&quot;</bucket>
            </map>
            <map to='#c5b0d5'>
              <bucket>&quot;monki&quot;</bucket>
            </map>
            <map to='#c5b0d5'>
              <bucket>&quot;o&apos;neill&quot;</bucket>
            </map>
            <map to='#c5b0d5'>
              <bucket>&quot;oscar de la renta&quot;</bucket>
            </map>
            <map to='#c5b0d5'>
              <bucket>&quot;planet gold&quot;</bucket>
            </map>
            <map to='#c5b0d5'>
              <bucket>&quot;rick owens&quot;</bucket>
            </map>
            <map to='#c5b0d5'>
              <bucket>&quot;t tahari&quot;</bucket>
            </map>
            <map to='#c5b0d5'>
              <bucket>&quot;the podolls&quot;</bucket>
            </map>
            <map to='#c5b0d5'>
              <bucket>&quot;true decadence&quot;</bucket>
            </map>
            <map to='#c5b0d5'>
              <bucket>&quot;wood wood&quot;</bucket>
            </map>
            <map to='#c5b0d5'>
              <bucket>&quot;xoxo&quot;</bucket>
            </map>
            <map to='#c7c7c7'>
              <bucket>&quot;agb&quot;</bucket>
            </map>
            <map to='#c7c7c7'>
              <bucket>&quot;alice &amp; trixie&quot;</bucket>
            </map>
            <map to='#c7c7c7'>
              <bucket>&quot;bottega veneta&quot;</bucket>
            </map>
            <map to='#c7c7c7'>
              <bucket>&quot;carmakoma&quot;</bucket>
            </map>
            <map to='#c7c7c7'>
              <bucket>&quot;crimson coast&quot;</bucket>
            </map>
            <map to='#c7c7c7'>
              <bucket>&quot;denim &amp; supply - ralph lauren&quot;</bucket>
            </map>
            <map to='#c7c7c7'>
              <bucket>&quot;evan picone&quot;</bucket>
            </map>
            <map to='#c7c7c7'>
              <bucket>&quot;freak of nature&quot;</bucket>
            </map>
            <map to='#c7c7c7'>
              <bucket>&quot;glamorous&quot;</bucket>
            </map>
            <map to='#c7c7c7'>
              <bucket>&quot;i heart ronson&quot;</bucket>
            </map>
            <map to='#c7c7c7'>
              <bucket>&quot;j brand&quot;</bucket>
            </map>
            <map to='#c7c7c7'>
              <bucket>&quot;joe fresh&quot;</bucket>
            </map>
            <map to='#c7c7c7'>
              <bucket>&quot;lira&quot;</bucket>
            </map>
            <map to='#c7c7c7'>
              <bucket>&quot;lisa marie fernandez&quot;</bucket>
            </map>
            <map to='#c7c7c7'>
              <bucket>&quot;lucky brand jeans&quot;</bucket>
            </map>
            <map to='#c7c7c7'>
              <bucket>&quot;my michelle&quot;</bucket>
            </map>
            <map to='#c7c7c7'>
              <bucket>&quot;neon rose&quot;</bucket>
            </map>
            <map to='#c7c7c7'>
              <bucket>&quot;rag &amp; bone&quot;</bucket>
            </map>
            <map to='#c7c7c7'>
              <bucket>&quot;ruby rocks&quot;</bucket>
            </map>
            <map to='#c7c7c7'>
              <bucket>&quot;see by chlož&quot;</bucket>
            </map>
            <map to='#c7c7c7'>
              <bucket>&quot;simone rocha&quot;</bucket>
            </map>
            <map to='#c7c7c7'>
              <bucket>&quot;stetson&quot;</bucket>
            </map>
            <map to='#c7c7c7'>
              <bucket>&quot;toast&quot;</bucket>
            </map>
            <map to='#c7c7c7'>
              <bucket>&quot;ultra flirt&quot;</bucket>
            </map>
            <map to='#c7c7c7'>
              <bucket>&quot;versace collection&quot;</bucket>
            </map>
            <map to='#c7c7c7'>
              <bucket>&quot;wrapper&quot;</bucket>
            </map>
            <map to='#d62728'>
              <bucket>&quot;a.l.c.&quot;</bucket>
            </map>
            <map to='#d62728'>
              <bucket>&quot;addison&quot;</bucket>
            </map>
            <map to='#d62728'>
              <bucket>&quot;ann demeulemeester&quot;</bucket>
            </map>
            <map to='#d62728'>
              <bucket>&quot;baum und pferdgarten&quot;</bucket>
            </map>
            <map to='#d62728'>
              <bucket>&quot;bcbgeneration&quot;</bucket>
            </map>
            <map to='#d62728'>
              <bucket>&quot;dana buchman&quot;</bucket>
            </map>
            <map to='#d62728'>
              <bucket>&quot;dieselï‘&quot;</bucket>
            </map>
            <map to='#d62728'>
              <bucket>&quot;dknyc&quot;</bucket>
            </map>
            <map to='#d62728'>
              <bucket>&quot;echo design&quot;</bucket>
            </map>
            <map to='#d62728'>
              <bucket>&quot;edun&quot;</bucket>
            </map>
            <map to='#d62728'>
              <bucket>&quot;grace elements&quot;</bucket>
            </map>
            <map to='#d62728'>
              <bucket>&quot;guess&quot;</bucket>
            </map>
            <map to='#d62728'>
              <bucket>&quot;jnby&quot;</bucket>
            </map>
            <map to='#d62728'>
              <bucket>&quot;jones new york&quot;</bucket>
            </map>
            <map to='#d62728'>
              <bucket>&quot;kin by john lewis&quot;</bucket>
            </map>
            <map to='#d62728'>
              <bucket>&quot;kut from the kloth&quot;</bucket>
            </map>
            <map to='#d62728'>
              <bucket>&quot;larry levine&quot;</bucket>
            </map>
            <map to='#d62728'>
              <bucket>&quot;maison martin margiela&quot;</bucket>
            </map>
            <map to='#d62728'>
              <bucket>&quot;melissa masse&quot;</bucket>
            </map>
            <map to='#d62728'>
              <bucket>&quot;melissa masse plus&quot;</bucket>
            </map>
            <map to='#d62728'>
              <bucket>&quot;merona&quot;</bucket>
            </map>
            <map to='#d62728'>
              <bucket>&quot;nicki minaj&quot;</bucket>
            </map>
            <map to='#d62728'>
              <bucket>&quot;rag &amp; bone/jean&quot;</bucket>
            </map>
            <map to='#d62728'>
              <bucket>&quot;rsvp&quot;</bucket>
            </map>
            <map to='#d62728'>
              <bucket>&quot;topshop unique&quot;</bucket>
            </map>
            <map to='#d62728'>
              <bucket>&quot;vero moda&quot;</bucket>
            </map>
            <map to='#d62728'>
              <bucket>&quot;wetseal&quot;</bucket>
            </map>
            <map to='#d62728'>
              <bucket>&quot;whit&quot;</bucket>
            </map>
            <map to='#d62728'>
              <bucket>&quot;zadig &amp; voltaire&quot;</bucket>
            </map>
            <map to='#dbdb8d'>
              <bucket>&quot;armani&quot;</bucket>
            </map>
            <map to='#dbdb8d'>
              <bucket>&quot;back by ann sofie back&quot;</bucket>
            </map>
            <map to='#dbdb8d'>
              <bucket>&quot;c &amp; c california&quot;</bucket>
            </map>
            <map to='#dbdb8d'>
              <bucket>&quot;chalayan grey line&quot;</bucket>
            </map>
            <map to='#dbdb8d'>
              <bucket>&quot;christin michaels&quot;</bucket>
            </map>
            <map to='#dbdb8d'>
              <bucket>&quot;dknyc plus&quot;</bucket>
            </map>
            <map to='#dbdb8d'>
              <bucket>&quot;donna morgan&quot;</bucket>
            </map>
            <map to='#dbdb8d'>
              <bucket>&quot;eskandar&quot;</bucket>
            </map>
            <map to='#dbdb8d'>
              <bucket>&quot;finders keepers&quot;</bucket>
            </map>
            <map to='#dbdb8d'>
              <bucket>&quot;halston heritage&quot;</bucket>
            </map>
            <map to='#dbdb8d'>
              <bucket>&quot;jaclyn smith&quot;</bucket>
            </map>
            <map to='#dbdb8d'>
              <bucket>&quot;karen kane&quot;</bucket>
            </map>
            <map to='#dbdb8d'>
              <bucket>&quot;lauren ralph lauren&quot;</bucket>
            </map>
            <map to='#dbdb8d'>
              <bucket>&quot;louise amstrup&quot;</bucket>
            </map>
            <map to='#dbdb8d'>
              <bucket>&quot;love reigns&quot;</bucket>
            </map>
            <map to='#dbdb8d'>
              <bucket>&quot;maje&quot;</bucket>
            </map>
            <map to='#dbdb8d'>
              <bucket>&quot;no. 21&quot;</bucket>
            </map>
            <map to='#dbdb8d'>
              <bucket>&quot;nw3&quot;</bucket>
            </map>
            <map to='#dbdb8d'>
              <bucket>&quot;sonia rykiel&quot;</bucket>
            </map>
            <map to='#dbdb8d'>
              <bucket>&quot;sophie hulme&quot;</bucket>
            </map>
            <map to='#dbdb8d'>
              <bucket>&quot;suno&quot;</bucket>
            </map>
            <map to='#dbdb8d'>
              <bucket>&quot;tibi&quot;</bucket>
            </map>
            <map to='#dbdb8d'>
              <bucket>&quot;unconditional&quot;</bucket>
            </map>
            <map to='#dbdb8d'>
              <bucket>&quot;warehouse&quot;</bucket>
            </map>
            <map to='#dbdb8d'>
              <bucket>&quot;worthington&quot;</bucket>
            </map>
            <map to='#e377c2'>
              <bucket>&quot;a. byer&quot;</bucket>
            </map>
            <map to='#e377c2'>
              <bucket>&quot;aryn k&quot;</bucket>
            </map>
            <map to='#e377c2'>
              <bucket>&quot;bb dakota&quot;</bucket>
            </map>
            <map to='#e377c2'>
              <bucket>&quot;belstaff&quot;</bucket>
            </map>
            <map to='#e377c2'>
              <bucket>&quot;carmen marc valvo&quot;</bucket>
            </map>
            <map to='#e377c2'>
              <bucket>&quot;dex&quot;</bucket>
            </map>
            <map to='#e377c2'>
              <bucket>&quot;double d ranchwear&quot;</bucket>
            </map>
            <map to='#e377c2'>
              <bucket>&quot;erdem&quot;</bucket>
            </map>
            <map to='#e377c2'>
              <bucket>&quot;hive &amp; honey&quot;</bucket>
            </map>
            <map to='#e377c2'>
              <bucket>&quot;jarlo&quot;</bucket>
            </map>
            <map to='#e377c2'>
              <bucket>&quot;jason wu&quot;</bucket>
            </map>
            <map to='#e377c2'>
              <bucket>&quot;lafayette 148 new york&quot;</bucket>
            </map>
            <map to='#e377c2'>
              <bucket>&quot;lela rose&quot;</bucket>
            </map>
            <map to='#e377c2'>
              <bucket>&quot;lennie&quot;</bucket>
            </map>
            <map to='#e377c2'>
              <bucket>&quot;little mistress&quot;</bucket>
            </map>
            <map to='#e377c2'>
              <bucket>&quot;madison marcus&quot;</bucket>
            </map>
            <map to='#e377c2'>
              <bucket>&quot;moulinette soeurs&quot;</bucket>
            </map>
            <map to='#e377c2'>
              <bucket>&quot;paul smith&quot;</bucket>
            </map>
            <map to='#e377c2'>
              <bucket>&quot;planet&quot;</bucket>
            </map>
            <map to='#e377c2'>
              <bucket>&quot;qmack&quot;</bucket>
            </map>
            <map to='#e377c2'>
              <bucket>&quot;rare&quot;</bucket>
            </map>
            <map to='#e377c2'>
              <bucket>&quot;roberto cavalli&quot;</bucket>
            </map>
            <map to='#e377c2'>
              <bucket>&quot;saks fifth avenue&quot;</bucket>
            </map>
            <map to='#e377c2'>
              <bucket>&quot;three dots&quot;</bucket>
            </map>
            <map to='#e377c2'>
              <bucket>&quot;twenty8twelve&quot;</bucket>
            </map>
            <map to='#e377c2'>
              <bucket>&quot;velvet&quot;</bucket>
            </map>
            <map to='#e377c2'>
              <bucket>&quot;y&apos;s by yohji yamamoto&quot;</bucket>
            </map>
            <map to='#f7b6d2'>
              <bucket>&quot;adrianna papell&quot;</bucket>
            </map>
            <map to='#f7b6d2'>
              <bucket>&quot;bella dahl&quot;</bucket>
            </map>
            <map to='#f7b6d2'>
              <bucket>&quot;betsey johnson&quot;</bucket>
            </map>
            <map to='#f7b6d2'>
              <bucket>&quot;canyon river blues&quot;</bucket>
            </map>
            <map to='#f7b6d2'>
              <bucket>&quot;catherine malandrino for designation&quot;</bucket>
            </map>
            <map to='#f7b6d2'>
              <bucket>&quot;croft &amp; barrow&quot;</bucket>
            </map>
            <map to='#f7b6d2'>
              <bucket>&quot;dusen dusen&quot;</bucket>
            </map>
            <map to='#f7b6d2'>
              <bucket>&quot;eric and lani&quot;</bucket>
            </map>
            <map to='#f7b6d2'>
              <bucket>&quot;j.w. anderson&quot;</bucket>
            </map>
            <map to='#f7b6d2'>
              <bucket>&quot;jennifer lopez&quot;</bucket>
            </map>
            <map to='#f7b6d2'>
              <bucket>&quot;lc lauren conrad&quot;</bucket>
            </map>
            <map to='#f7b6d2'>
              <bucket>&quot;lida baday&quot;</bucket>
            </map>
            <map to='#f7b6d2'>
              <bucket>&quot;lili&apos;s closet&quot;</bucket>
            </map>
            <map to='#f7b6d2'>
              <bucket>&quot;little white lies&quot;</bucket>
            </map>
            <map to='#f7b6d2'>
              <bucket>&quot;msgm&quot;</bucket>
            </map>
            <map to='#f7b6d2'>
              <bucket>&quot;pepe&quot;</bucket>
            </map>
            <map to='#f7b6d2'>
              <bucket>&quot;plus moda&quot;</bucket>
            </map>
            <map to='#f7b6d2'>
              <bucket>&quot;r13&quot;</bucket>
            </map>
            <map to='#f7b6d2'>
              <bucket>&quot;rock &amp; republic&quot;</bucket>
            </map>
            <map to='#f7b6d2'>
              <bucket>&quot;saloni&quot;</bucket>
            </map>
            <map to='#f7b6d2'>
              <bucket>&quot;sam &amp; lavi&quot;</bucket>
            </map>
            <map to='#f7b6d2'>
              <bucket>&quot;velvet by graham and spencer&quot;</bucket>
            </map>
            <map to='#f7b6d2'>
              <bucket>&quot;viva vena&quot;</bucket>
            </map>
            <map to='#f7b6d2'>
              <bucket>&quot;weekend by maxmara&quot;</bucket>
            </map>
            <map to='#f7b6d2'>
              <bucket>&quot;ymc&quot;</bucket>
            </map>
            <map to='#f7b6d2'>
              <bucket>&quot;z spoke zac posen&quot;</bucket>
            </map>
            <map to='#ff7f0e'>
              <bucket>&quot;2nd day&quot;</bucket>
            </map>
            <map to='#ff7f0e'>
              <bucket>&quot;ab studio&quot;</bucket>
            </map>
            <map to='#ff7f0e'>
              <bucket>&quot;amanda uprichard&quot;</bucket>
            </map>
            <map to='#ff7f0e'>
              <bucket>&quot;american rag&quot;</bucket>
            </map>
            <map to='#ff7f0e'>
              <bucket>&quot;anne klein&quot;</bucket>
            </map>
            <map to='#ff7f0e'>
              <bucket>&quot;carolina herrera&quot;</bucket>
            </map>
            <map to='#ff7f0e'>
              <bucket>&quot;cherokee&quot;</bucket>
            </map>
            <map to='#ff7f0e'>
              <bucket>&quot;cut25&quot;</bucket>
            </map>
            <map to='#ff7f0e'>
              <bucket>&quot;dagmar&quot;</bucket>
            </map>
            <map to='#ff7f0e'>
              <bucket>&quot;danny &amp; nicole&quot;</bucket>
            </map>
            <map to='#ff7f0e'>
              <bucket>&quot;derek lam for designation&quot;</bucket>
            </map>
            <map to='#ff7f0e'>
              <bucket>&quot;diane von furstenberg&quot;</bucket>
            </map>
            <map to='#ff7f0e'>
              <bucket>&quot;elie tahari&quot;</bucket>
            </map>
            <map to='#ff7f0e'>
              <bucket>&quot;freya&quot;</bucket>
            </map>
            <map to='#ff7f0e'>
              <bucket>&quot;hobbs&quot;</bucket>
            </map>
            <map to='#ff7f0e'>
              <bucket>&quot;inc&quot;</bucket>
            </map>
            <map to='#ff7f0e'>
              <bucket>&quot;indikka&quot;</bucket>
            </map>
            <map to='#ff7f0e'>
              <bucket>&quot;kelly wearstler&quot;</bucket>
            </map>
            <map to='#ff7f0e'>
              <bucket>&quot;maid in love&quot;</bucket>
            </map>
            <map to='#ff7f0e'>
              <bucket>&quot;marchesa voyage&quot;</bucket>
            </map>
            <map to='#ff7f0e'>
              <bucket>&quot;milly&quot;</bucket>
            </map>
            <map to='#ff7f0e'>
              <bucket>&quot;ostwald helgason&quot;</bucket>
            </map>
            <map to='#ff7f0e'>
              <bucket>&quot;plenty by tracy reese&quot;</bucket>
            </map>
            <map to='#ff7f0e'>
              <bucket>&quot;robbie bee&quot;</bucket>
            </map>
            <map to='#ff7f0e'>
              <bucket>&quot;royal robbins&quot;</bucket>
            </map>
            <map to='#ff7f0e'>
              <bucket>&quot;studio 1&quot;</bucket>
            </map>
            <map to='#ff7f0e'>
              <bucket>&quot;stylestalker&quot;</bucket>
            </map>
            <map to='#ff7f0e'>
              <bucket>&quot;tiny&quot;</bucket>
            </map>
            <map to='#ff9896'>
              <bucket>&quot;aeo&quot;</bucket>
            </map>
            <map to='#ff9896'>
              <bucket>&quot;ariat&quot;</bucket>
            </map>
            <map to='#ff9896'>
              <bucket>&quot;bobeau&quot;</bucket>
            </map>
            <map to='#ff9896'>
              <bucket>&quot;edme &amp; esyllte&quot;</bucket>
            </map>
            <map to='#ff9896'>
              <bucket>&quot;etro&quot;</bucket>
            </map>
            <map to='#ff9896'>
              <bucket>&quot;hale bob&quot;</bucket>
            </map>
            <map to='#ff9896'>
              <bucket>&quot;iz byer california&quot;</bucket>
            </map>
            <map to='#ff9896'>
              <bucket>&quot;joie&quot;</bucket>
            </map>
            <map to='#ff9896'>
              <bucket>&quot;jovonna&quot;</bucket>
            </map>
            <map to='#ff9896'>
              <bucket>&quot;juicy couture&quot;</bucket>
            </map>
            <map to='#ff9896'>
              <bucket>&quot;karen kane plus&quot;</bucket>
            </map>
            <map to='#ff9896'>
              <bucket>&quot;kensie&quot;</bucket>
            </map>
            <map to='#ff9896'>
              <bucket>&quot;lands&apos; end&quot;</bucket>
            </map>
            <map to='#ff9896'>
              <bucket>&quot;lavish alice&quot;</bucket>
            </map>
            <map to='#ff9896'>
              <bucket>&quot;mary katrantzou&quot;</bucket>
            </map>
            <map to='#ff9896'>
              <bucket>&quot;metaphor&quot;</bucket>
            </map>
            <map to='#ff9896'>
              <bucket>&quot;mossimo&quot;</bucket>
            </map>
            <map to='#ff9896'>
              <bucket>&quot;noisy may&quot;</bucket>
            </map>
            <map to='#ff9896'>
              <bucket>&quot;parker&quot;</bucket>
            </map>
            <map to='#ff9896'>
              <bucket>&quot;r&amp;k originals&quot;</bucket>
            </map>
            <map to='#ff9896'>
              <bucket>&quot;raoul&quot;</bucket>
            </map>
            <map to='#ff9896'>
              <bucket>&quot;sanctuary&quot;</bucket>
            </map>
            <map to='#ff9896'>
              <bucket>&quot;teri jon&quot;</bucket>
            </map>
            <map to='#ff9896'>
              <bucket>&quot;tracy reese&quot;</bucket>
            </map>
            <map to='#ff9896'>
              <bucket>&quot;vicky tiel&quot;</bucket>
            </map>
            <map to='#ff9896'>
              <bucket>&quot;whistles&quot;</bucket>
            </map>
            <map to='#ff9896'>
              <bucket>&quot;zero + maria cornejo&quot;</bucket>
            </map>
            <map to='#ffbb78'>
              <bucket>&quot;7 for all mankind&quot;</bucket>
            </map>
            <map to='#ffbb78'>
              <bucket>&quot;adam lippes&quot;</bucket>
            </map>
            <map to='#ffbb78'>
              <bucket>&quot;aqua&quot;</bucket>
            </map>
            <map to='#ffbb78'>
              <bucket>&quot;bar iii&quot;</bucket>
            </map>
            <map to='#ffbb78'>
              <bucket>&quot;chicos&quot;</bucket>
            </map>
            <map to='#ffbb78'>
              <bucket>&quot;cynthia steffe&quot;</bucket>
            </map>
            <map to='#ffbb78'>
              <bucket>&quot;day birger et mikkelsen&quot;</bucket>
            </map>
            <map to='#ffbb78'>
              <bucket>&quot;dkny&quot;</bucket>
            </map>
            <map to='#ffbb78'>
              <bucket>&quot;donna ricco&quot;</bucket>
            </map>
            <map to='#ffbb78'>
              <bucket>&quot;free people&quot;</bucket>
            </map>
            <map to='#ffbb78'>
              <bucket>&quot;givenchy&quot;</bucket>
            </map>
            <map to='#ffbb78'>
              <bucket>&quot;insight&quot;</bucket>
            </map>
            <map to='#ffbb78'>
              <bucket>&quot;isaac mizrahi new york&quot;</bucket>
            </map>
            <map to='#ffbb78'>
              <bucket>&quot;jaeger&quot;</bucket>
            </map>
            <map to='#ffbb78'>
              <bucket>&quot;la made&quot;</bucket>
            </map>
            <map to='#ffbb78'>
              <bucket>&quot;love your style, love your size&quot;</bucket>
            </map>
            <map to='#ffbb78'>
              <bucket>&quot;markus lupfer&quot;</bucket>
            </map>
            <map to='#ffbb78'>
              <bucket>&quot;mimi chica&quot;</bucket>
            </map>
            <map to='#ffbb78'>
              <bucket>&quot;pendleton&quot;</bucket>
            </map>
            <map to='#ffbb78'>
              <bucket>&quot;peter jensen&quot;</bucket>
            </map>
            <map to='#ffbb78'>
              <bucket>&quot;rabbit rabbit&quot;</bucket>
            </map>
            <map to='#ffbb78'>
              <bucket>&quot;ronni nicole&quot;</bucket>
            </map>
            <map to='#ffbb78'>
              <bucket>&quot;sandro&quot;</bucket>
            </map>
            <map to='#ffbb78'>
              <bucket>&quot;see u soon&quot;</bucket>
            </map>
            <map to='#ffbb78'>
              <bucket>&quot;sonoma life + style&quot;</bucket>
            </map>
            <map to='#ffbb78'>
              <bucket>&quot;superdry&quot;</bucket>
            </map>
            <map to='#ffbb78'>
              <bucket>&quot;ted baker london&quot;</bucket>
            </map>
            <map to='#ffbb78'>
              <bucket>&quot;trina turk&quot;</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[usr:Calculation_2730813141847173:nk:1]' type='palette'>
            <map to='#09622a'>
              <bucket>&quot;over&quot;</bucket>
            </map>
            <map to='#1e1e1e'>
              <bucket>&quot;nostats&quot;</bucket>
            </map>
            <map to='#1e1e1e'>
              <bucket>&quot;Stats too low&quot;</bucket>
            </map>
            <map to='#1f83b4'>
              <bucket>&quot;Over-represented&quot;</bucket>
            </map>
            <map to='#9c0824'>
              <bucket>&quot;under&quot;</bucket>
            </map>
            <map to='#c94d8c'>
              <bucket>&quot;Under-represented&quot;</bucket>
            </map>
          </encoding>
        </style-rule>
      </style>
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;Reino Unido&quot;' />
      </semantic-values>
      <date-options start-of-week='monday' />
      <datasource-dependencies datasource='Parameters'>
        <column alias='Best sellers' caption='Analysis' datatype='string' name='[Parameter 2]' param-domain-type='list' role='measure' type='nominal' value='&quot;best&quot;'>
          <calculation class='tableau' formula='&quot;best&quot;' />
          <aliases>
            <alias key='&quot;best&quot;' value='Best sellers' />
            <alias key='&quot;worst&quot;' value='Poor sellers' />
          </aliases>
          <members>
            <member alias='Best sellers' value='&quot;best&quot;' />
            <member alias='Poor sellers' value='&quot;worst&quot;' />
          </members>
        </column>
        <column caption='Low Stats' datatype='real' name='[Parameter 3]' param-domain-type='range' role='measure' type='quantitative' value='5.0'>
          <calculation class='tableau' formula='5.0' />
          <desc>
            <formatted-text>
              <run>Threshold at which stats are too low to calculate ratio</run>
            </formatted-text>
          </desc>
          <range granularity='1.0' max='10.0' min='1.0' />
        </column>
      </datasource-dependencies>
    </datasource>
    <datasource caption='extremesellers_lastweek (ds.extremesellers_lastweek) (demo)' inline='true' name='greenplum.41871.617679803200' version='8.3'>
      <connection class='greenplum' dbname='demo' expected-driver-version='PostgreSQL Unicode' odbc-native-protocol='yes' port='9999' server='localhost' username='gpadmin'>
        <relation name='extremesellers_lastweek' table='[ds].[extremesellers_lastweek]' type='table' />
        <metadata-records>
          <metadata-record class='column'>
            <remote-name>json_productkey</remote-name>
            <remote-type>130</remote-type>
            <local-name>[json_productkey]</local-name>
            <parent-name>[extremesellers_lastweek]</parent-name>
            <remote-alias>json_productkey</remote-alias>
            <ordinal>1</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <width>255</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_WVARCHAR&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_WCHAR&quot;</attribute>
              <attribute datatype='string' name='TypeIsVarchar'>&quot;true&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>latest_batch_date</remote-name>
            <remote-type>7</remote-type>
            <local-name>[latest_batch_date]</local-name>
            <parent-name>[extremesellers_lastweek]</parent-name>
            <remote-alias>latest_batch_date</remote-alias>
            <ordinal>2</ordinal>
            <local-type>date</local-type>
            <aggregation>Year</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_TYPE_DATE&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_TYPE_DATE&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>category</remote-name>
            <remote-type>130</remote-type>
            <local-name>[category]</local-name>
            <parent-name>[extremesellers_lastweek]</parent-name>
            <remote-alias>category</remote-alias>
            <ordinal>3</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <width>8190</width>
            <contains-null>true</contains-null>
            <cast-to-local-type>true</cast-to-local-type>
            <collation flag='0' name='LEN_RUS' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_WLONGVARCHAR&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_WCHAR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>subcategory</remote-name>
            <remote-type>130</remote-type>
            <local-name>[subcategory]</local-name>
            <parent-name>[extremesellers_lastweek]</parent-name>
            <remote-alias>subcategory</remote-alias>
            <ordinal>4</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <width>8190</width>
            <contains-null>true</contains-null>
            <cast-to-local-type>true</cast-to-local-type>
            <collation flag='0' name='LEN_RUS' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_WLONGVARCHAR&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_WCHAR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>retailername</remote-name>
            <remote-type>130</remote-type>
            <local-name>[retailername]</local-name>
            <parent-name>[extremesellers_lastweek]</parent-name>
            <remote-alias>retailername</remote-alias>
            <ordinal>5</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <width>8190</width>
            <contains-null>true</contains-null>
            <cast-to-local-type>true</cast-to-local-type>
            <collation flag='0' name='LEN_RUS' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_WLONGVARCHAR&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_WCHAR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>facetbrand</remote-name>
            <remote-type>130</remote-type>
            <local-name>[facetbrand]</local-name>
            <parent-name>[extremesellers_lastweek]</parent-name>
            <remote-alias>facetbrand</remote-alias>
            <ordinal>6</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <width>8190</width>
            <contains-null>true</contains-null>
            <cast-to-local-type>true</cast-to-local-type>
            <collation flag='0' name='LEN_RUS' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_WLONGVARCHAR&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_WCHAR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>taxonomiccolour</remote-name>
            <remote-type>130</remote-type>
            <local-name>[taxonomiccolour]</local-name>
            <parent-name>[extremesellers_lastweek]</parent-name>
            <remote-alias>taxonomiccolour</remote-alias>
            <ordinal>7</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <width>8190</width>
            <contains-null>true</contains-null>
            <cast-to-local-type>true</cast-to-local-type>
            <collation flag='0' name='LEN_RUS' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_WLONGVARCHAR&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_WCHAR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>country</remote-name>
            <remote-type>130</remote-type>
            <local-name>[country]</local-name>
            <parent-name>[extremesellers_lastweek]</parent-name>
            <remote-alias>country</remote-alias>
            <ordinal>8</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <width>8190</width>
            <contains-null>true</contains-null>
            <cast-to-local-type>true</cast-to-local-type>
            <collation flag='0' name='LEN_RUS' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_WLONGVARCHAR&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_WCHAR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>price_currentdaymode</remote-name>
            <remote-type>5</remote-type>
            <local-name>[price_currentdaymode]</local-name>
            <parent-name>[extremesellers_lastweek]</parent-name>
            <remote-alias>price_currentdaymode</remote-alias>
            <ordinal>9</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_FLOAT&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_DOUBLE&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>sellers</remote-name>
            <remote-type>130</remote-type>
            <local-name>[sellers]</local-name>
            <parent-name>[extremesellers_lastweek]</parent-name>
            <remote-alias>sellers</remote-alias>
            <ordinal>10</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <width>8190</width>
            <contains-null>true</contains-null>
            <cast-to-local-type>true</cast-to-local-type>
            <collation flag='0' name='LEN_RUS' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_WLONGVARCHAR&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_WCHAR&quot;</attribute>
            </attributes>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column caption='NormalisedRatio' datatype='real' name='[Calculation_1730812182851096]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='if ([Calculation_5270812182716952 1]&gt;[Parameters].[Parameter 3]) then [Calculation_8450812182825530]/[Calculation_5270812182716952] else -0.01 end' scope-isolation='false'>
          <table-calc ordering-type='Rows' />
        </calculation>
      </column>
      <column caption='ColourField' datatype='string' name='[Calculation_2730813141847173]' role='measure' type='nominal'>
        <calculation class='tableau' formula='if [Calculation_1730812182851096]&gt;1 then &quot;Over-represented&quot; elseif [Calculation_1730812182851096]&lt;0 then &quot;Stats too low&quot; else &quot;Under-represented&quot; end' scope-isolation='false'>
          <table-calc ordering-type='Rows' />
        </calculation>
      </column>
      <column caption='Count in all' datatype='integer' name='[Calculation_5270812182716952 1 1]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='sum(1)' scope-isolation='false' />
      </column>
      <column caption='Count in extreme sellers' datatype='integer' name='[Calculation_5270812182716952 1]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='sum(if [sellers] = [Parameters].[Parameter 2] then 1 else 0 end)' scope-isolation='false' />
      </column>
      <column caption='Ratio in all' datatype='real' name='[Calculation_5270812182716952]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='[Calculation_5270812182716952 1 1]/Total([Calculation_5270812182716952 1 1])' scope-isolation='false'>
          <table-calc ordering-type='Rows' />
        </calculation>
      </column>
      <column caption='Ratio in extreme sellers' datatype='real' name='[Calculation_8450812182825530]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='[Calculation_5270812182716952 1]/Total([Calculation_5270812182716952 1])' scope-isolation='false'>
          <table-calc ordering-type='Rows' />
        </calculation>
      </column>
      <column datatype='integer' name='[Number of Records]' role='measure' type='quantitative' user:auto-column='numrec'>
        <calculation class='tableau' formula='1' />
      </column>
      <column caption='Category' datatype='string' name='[category]' role='dimension' type='nominal'>
      </column>
      <column caption='Country' datatype='string' name='[country]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal'>
      </column>
      <column caption='Facetbrand' datatype='string' name='[facetbrand]' role='dimension' type='nominal'>
      </column>
      <column caption='Json Productkey' datatype='string' name='[json_productkey]' role='dimension' type='nominal'>
      </column>
      <column caption='Price Currentdaymode' datatype='real' name='[price_currentdaymode]' role='measure' type='quantitative'>
      </column>
      <column caption='Retailername' datatype='string' name='[retailername]' role='dimension' type='nominal'>
      </column>
      <column caption='Sellers' datatype='string' name='[sellers]' role='dimension' type='nominal'>
      </column>
      <column caption='Subcategory' datatype='string' name='[subcategory]' role='dimension' type='nominal'>
      </column>
      <column caption='Taxonomiccolour' datatype='string' name='[taxonomiccolour]' role='dimension' type='nominal'>
      </column>
      <column-instance column='[Calculation_2730813141847173]' derivation='User' name='[usr:Calculation_2730813141847173:nk:1]' pivot='key' type='nominal'>
        <table-calc ordering-type='Rows' />
        <table-calc field='[greenplum.41871.617679803200].[Calculation_5270812182716952]' ordering-type='Rows' />
        <table-calc field='[greenplum.41871.617679803200].[Calculation_1730812182851096]' ordering-type='Rows' />
        <table-calc field='[greenplum.41871.617679803200].[Calculation_8450812182825530]' ordering-type='Rows' />
      </column-instance>
      <extract count='-1' enabled='true' units='records'>
        <connection class='dataengine' dbname='/Users/elliedobson/Documents/Work/Customers/TRG/Code/ExtractedData/extremesellers_lastweek (ds.extremesellers_lastweek) (demo).tde' schema='Extract' tablename='Extract' update-time='09/03/2014 04:00:49 PM'>
          <relation name='Extract' table='[Extract].[Extract]' type='table' />
          <calculations>
            <calculation column='[Number of Records]' formula='1' />
          </calculations>
          <refresh>
            <refresh-event add-from-file-path='' increment-value='%null%' refresh-type='create' rows-inserted='1571954' timestamp-start='2014-09-03 16:00:49.640' />
          </refresh>
          <metadata-records>
            <metadata-record class='column'>
              <remote-name>Number of Records</remote-name>
              <remote-type>16</remote-type>
              <local-name>[Number of Records]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Number of Records</remote-alias>
              <ordinal>0</ordinal>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>1</approx-count>
              <contains-null>false</contains-null>
              <statistics>
                <statistic aggregation='Min' datatype='integer'>1</statistic>
                <statistic aggregation='Max' datatype='integer'>1</statistic>
              </statistics>
              <attributes>
                <attribute datatype='string' name='DebugRemoteMetadata (ordered)'>&quot;asc&quot;</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>1</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;sint8&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>category</remote-name>
              <remote-type>129</remote-type>
              <local-name>[category]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>category</remote-alias>
              <ordinal>1</ordinal>
              <family>extremesellers_lastweek</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>30</approx-count>
              <scale>1</scale>
              <width>100</width>
              <contains-null>false</contains-null>
              <collation flag='0' name='LEN_RUS' />
              <statistics>
                <statistic aggregation='Min' datatype='string'>&quot;bags&quot;</statistic>
                <statistic aggregation='Max' datatype='string'>&quot;watches&quot;</statistic>
              </statistics>
              <attributes>
                <attribute datatype='string' name='DebugRemoteCollation'>&quot;en_US&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;heap&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>400</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (sort-position)'>4</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (sort-sense)'>&quot;asc&quot;</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>2</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;str&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>country</remote-name>
              <remote-type>129</remote-type>
              <local-name>[country]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>country</remote-alias>
              <ordinal>2</ordinal>
              <family>extremesellers_lastweek</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>3</approx-count>
              <scale>1</scale>
              <width>100</width>
              <contains-null>false</contains-null>
              <collation flag='0' name='LEN_RUS' />
              <statistics>
                <statistic aggregation='Min' datatype='string'>&quot;au&quot;</statistic>
                <statistic aggregation='Max' datatype='string'>&quot;us&quot;</statistic>
              </statistics>
              <attributes>
                <attribute datatype='string' name='DebugRemoteCollation'>&quot;en_US&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;heap&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>400</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (sort-position)'>1</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (sort-sense)'>&quot;asc&quot;</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>1</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;str&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>facetbrand</remote-name>
              <remote-type>129</remote-type>
              <local-name>[facetbrand]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>facetbrand</remote-alias>
              <ordinal>3</ordinal>
              <family>extremesellers_lastweek</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>4873</approx-count>
              <scale>1</scale>
              <width>100</width>
              <contains-null>false</contains-null>
              <collation flag='0' name='LEN_RUS' />
              <statistics>
                <statistic aggregation='Min' datatype='string'>&quot;0039 italy&quot;</statistic>
                <statistic aggregation='Max' datatype='string'>&quot;zumba&quot;</statistic>
              </statistics>
              <attributes>
                <attribute datatype='string' name='DebugRemoteCollation'>&quot;en_US&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;heap&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>400</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (sort-position)'>7</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (sort-sense)'>&quot;asc&quot;</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>2</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;str&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>json_productkey</remote-name>
              <remote-type>129</remote-type>
              <local-name>[json_productkey]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>json_productkey</remote-alias>
              <ordinal>4</ordinal>
              <family>extremesellers_lastweek</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>766487</approx-count>
              <scale>1</scale>
              <width>255</width>
              <contains-null>false</contains-null>
              <collation flag='0' name='LEN_RUS' />
              <statistics>
                <statistic aggregation='Min' datatype='string'>&quot;00001309-1934-35dc-80d8-c7f7799d8ba5&quot;</statistic>
                <statistic aggregation='Max' datatype='string'>&quot;fffff486-13b2-3c32-b34b-2508d73781c8&quot;</statistic>
              </statistics>
              <attributes>
                <attribute datatype='string' name='DebugRemoteCollation'>&quot;en_US&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;heap&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>1020</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (sort-position)'>8</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (sort-sense)'>&quot;asc&quot;</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>4</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;str&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>latest_batch_date</remote-name>
              <remote-type>133</remote-type>
              <local-name>[latest_batch_date]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>latest_batch_date</remote-alias>
              <ordinal>5</ordinal>
              <family>extremesellers_lastweek</family>
              <local-type>date</local-type>
              <aggregation>Year</aggregation>
              <approx-count>7</approx-count>
              <contains-null>false</contains-null>
              <statistics>
                <statistic aggregation='Min' datatype='date'>#2014-07-17#</statistic>
                <statistic aggregation='Max' datatype='date'>#2014-07-23#</statistic>
              </statistics>
              <attributes>
                <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;array&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (ordered)'>&quot;asc&quot;</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (sort-position)'>0</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (sort-sense)'>&quot;asc&quot;</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>1</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;date&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>price_currentdaymode</remote-name>
              <remote-type>5</remote-type>
              <local-name>[price_currentdaymode]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>price_currentdaymode</remote-alias>
              <ordinal>6</ordinal>
              <family>extremesellers_lastweek</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>10087</approx-count>
              <contains-null>true</contains-null>
              <statistics>
                <statistic aggregation='Min' datatype='real'>0.5</statistic>
                <statistic aggregation='Max' datatype='real'>49375.0</statistic>
              </statistics>
              <attributes>
                <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;array&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (sort-position)'>9</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (sort-sense)'>&quot;asc&quot;</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>2</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;double&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>retailername</remote-name>
              <remote-type>129</remote-type>
              <local-name>[retailername]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>retailername</remote-alias>
              <ordinal>7</ordinal>
              <family>extremesellers_lastweek</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>82</approx-count>
              <scale>1</scale>
              <width>100</width>
              <contains-null>false</contains-null>
              <collation flag='0' name='LEN_RUS' />
              <statistics>
                <statistic aggregation='Min' datatype='string'>&quot;abercrombie &amp; fitch&quot;</statistic>
                <statistic aggregation='Max' datatype='string'>&quot;zara&quot;</statistic>
              </statistics>
              <attributes>
                <attribute datatype='string' name='DebugRemoteCollation'>&quot;en_US&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;heap&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>400</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (sort-position)'>5</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (sort-sense)'>&quot;asc&quot;</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>2</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;str&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>sellers</remote-name>
              <remote-type>129</remote-type>
              <local-name>[sellers]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>sellers</remote-alias>
              <ordinal>8</ordinal>
              <family>extremesellers_lastweek</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>3</approx-count>
              <scale>1</scale>
              <width>100</width>
              <contains-null>false</contains-null>
              <collation flag='0' name='LEN_RUS' />
              <statistics>
                <statistic aggregation='Min' datatype='string'>&quot;best&quot;</statistic>
                <statistic aggregation='Max' datatype='string'>&quot;worst&quot;</statistic>
              </statistics>
              <attributes>
                <attribute datatype='string' name='DebugRemoteCollation'>&quot;en_US&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;heap&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>400</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (sort-position)'>2</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (sort-sense)'>&quot;asc&quot;</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>1</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;str&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>subcategory</remote-name>
              <remote-type>129</remote-type>
              <local-name>[subcategory]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>subcategory</remote-alias>
              <ordinal>9</ordinal>
              <family>extremesellers_lastweek</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>320</approx-count>
              <scale>1</scale>
              <width>100</width>
              <contains-null>false</contains-null>
              <collation flag='0' name='LEN_RUS' />
              <statistics>
                <statistic aggregation='Min' datatype='string'>&quot;3/4 lengths&quot;</statistic>
                <statistic aggregation='Max' datatype='string'>&quot;wreath &amp; crown&quot;</statistic>
              </statistics>
              <attributes>
                <attribute datatype='string' name='DebugRemoteCollation'>&quot;en_US&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;heap&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>400</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (sort-position)'>6</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (sort-sense)'>&quot;asc&quot;</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>2</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;str&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>taxonomiccolour</remote-name>
              <remote-type>129</remote-type>
              <local-name>[taxonomiccolour]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>taxonomiccolour</remote-alias>
              <ordinal>10</ordinal>
              <family>extremesellers_lastweek</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>16</approx-count>
              <scale>1</scale>
              <width>100</width>
              <contains-null>false</contains-null>
              <collation flag='0' name='LEN_RUS' />
              <statistics>
                <statistic aggregation='Min' datatype='string'>&quot;black&quot;</statistic>
                <statistic aggregation='Max' datatype='string'>&quot;yellow&quot;</statistic>
              </statistics>
              <attributes>
                <attribute datatype='string' name='DebugRemoteCollation'>&quot;en_US&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;heap&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>400</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (sort-position)'>3</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (sort-sense)'>&quot;asc&quot;</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>1</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;str&quot;</attribute>
              </attributes>
            </metadata-record>
          </metadata-records>
        </connection>
      </extract>
      <layout dim-ordering='alphabetic' dim-percentage='0.5' measure-ordering='alphabetic' measure-percentage='0.4' show-structure='true' />
      <style>
        <style-rule element='mark'>
          <encoding attr='color' field='[usr:Calculation_2730813141847173:nk:1]' type='palette'>
            <map to='#1e1e1e'>
              <bucket>&quot;Stats too low&quot;</bucket>
            </map>
            <map to='#2ca02c'>
              <bucket>&quot;Over-represented&quot;</bucket>
            </map>
            <map to='#d62728'>
              <bucket>&quot;Under-represented&quot;</bucket>
            </map>
          </encoding>
        </style-rule>
      </style>
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;Reino Unido&quot;' />
      </semantic-values>
      <date-options start-of-week='monday' />
      <datasource-dependencies datasource='Parameters'>
        <column alias='Best sellers' caption='Analysis' datatype='string' name='[Parameter 2]' param-domain-type='list' role='measure' type='nominal' value='&quot;best&quot;'>
          <calculation class='tableau' formula='&quot;best&quot;' />
          <aliases>
            <alias key='&quot;best&quot;' value='Best sellers' />
            <alias key='&quot;worst&quot;' value='Poor sellers' />
          </aliases>
          <members>
            <member alias='Best sellers' value='&quot;best&quot;' />
            <member alias='Poor sellers' value='&quot;worst&quot;' />
          </members>
        </column>
        <column caption='Low Stats' datatype='real' name='[Parameter 3]' param-domain-type='range' role='measure' type='quantitative' value='5.0'>
          <calculation class='tableau' formula='5.0' />
          <desc>
            <formatted-text>
              <run>Threshold at which stats are too low to calculate ratio</run>
            </formatted-text>
          </desc>
          <range granularity='1.0' max='10.0' min='1.0' />
        </column>
      </datasource-dependencies>
    </datasource>
  </datasources>
  <worksheets>
    <worksheet name='CompareRetailers_cat'>
      <layout-options>
        <title>
          <formatted-text>
            <run>&lt;</run>
            <run>[Parameters].[Parameter 2]</run>
            <run>&gt;</run>
            <run> by subcategory and retailer</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='extremesellers_lastweek (ds.extremesellers_lastweek) (demo)' name='greenplum.41871.617679803200' />
            <datasource name='Parameters' />
          </datasources>
          <datasource-dependencies datasource='greenplum.41871.617679803200'>
            <column caption='NormalisedRatio' datatype='real' name='[Calculation_1730812182851096]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='if ([Calculation_5270812182716952 1]&gt;[Parameters].[Parameter 3]) then [Calculation_8450812182825530]/[Calculation_5270812182716952] else -0.01 end' scope-isolation='false'>
                <table-calc ordering-type='Rows' />
              </calculation>
            </column>
            <column caption='ColourField' datatype='string' name='[Calculation_2730813141847173]' role='measure' type='nominal'>
              <calculation class='tableau' formula='if [Calculation_1730812182851096]&gt;1 then &quot;Over-represented&quot; elseif [Calculation_1730812182851096]&lt;0 then &quot;Stats too low&quot; else &quot;Under-represented&quot; end' scope-isolation='false'>
                <table-calc ordering-type='Rows' />
              </calculation>
            </column>
            <column caption='Count in extreme sellers' datatype='integer' name='[Calculation_5270812182716952 1]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='sum(if [sellers] = [Parameters].[Parameter 2] then 1 else 0 end)' scope-isolation='false' />
            </column>
            <column caption='Category' datatype='string' name='[category]' role='dimension' type='nominal'>
            </column>
            <column caption='Country' datatype='string' name='[country]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal'>
            </column>
            <column caption='Facetbrand' datatype='string' name='[facetbrand]' role='dimension' type='nominal'>
            </column>
            <column-instance column='[category]' derivation='None' name='[none:category:nk]' pivot='key' type='nominal' />
            <column-instance column='[country]' derivation='None' name='[none:country:nk]' pivot='key' type='nominal' />
            <column-instance column='[facetbrand]' derivation='None' name='[none:facetbrand:nk]' pivot='key' type='nominal' />
            <column-instance column='[price_currentdaymode]' derivation='None' name='[none:price_currentdaymode:qk]' pivot='key' type='quantitative' />
            <column-instance column='[retailername]' derivation='None' name='[none:retailername:nk]' pivot='key' type='nominal' />
            <column-instance column='[taxonomiccolour]' derivation='None' name='[none:taxonomiccolour:nk]' pivot='key' type='nominal' />
            <column caption='Price Currentdaymode' datatype='real' name='[price_currentdaymode]' role='measure' type='quantitative'>
            </column>
            <column caption='Retailername' datatype='string' name='[retailername]' role='dimension' type='nominal'>
            </column>
            <column caption='Taxonomiccolour' datatype='string' name='[taxonomiccolour]' role='dimension' type='nominal'>
            </column>
            <column-instance column='[Calculation_1730812182851096]' derivation='User' name='[usr:Calculation_1730812182851096:qk:2]' pivot='key' type='quantitative'>
              <table-calc ordering-type='Rows' />
              <table-calc field='[greenplum.41871.617679803200].[Calculation_5270812182716952]' ordering-type='Rows' />
              <table-calc field='[greenplum.41871.617679803200].[Calculation_8450812182825530]' ordering-type='Rows' />
            </column-instance>
            <column-instance column='[Calculation_2730813141847173]' derivation='User' name='[usr:Calculation_2730813141847173:nk:1]' pivot='key' type='nominal'>
              <table-calc ordering-type='Rows' />
              <table-calc field='[greenplum.41871.617679803200].[Calculation_5270812182716952]' ordering-type='Rows' />
              <table-calc field='[greenplum.41871.617679803200].[Calculation_1730812182851096]' ordering-type='Rows' />
              <table-calc field='[greenplum.41871.617679803200].[Calculation_8450812182825530]' ordering-type='Rows' />
            </column-instance>
            <column-instance column='[Calculation_5270812182716952 1]' derivation='User' name='[usr:Calculation_5270812182716952 1:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[greenplum.41871.617679803200].[none:country:nk]' filter-group='10'>
            <groupfilter function='member' level='[none:country:nk]' member='&quot;us&quot;' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[greenplum.41871.617679803200].[none:facetbrand:nk]'>
            <groupfilter function='level-members' level='[none:facetbrand:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='quantitative' column='[greenplum.41871.617679803200].[none:price_currentdaymode:qk]' filter-group='5' included-values='in-range-or-null'>
            <min>2.0</min>
            <max>107.0</max>
          </filter>
          <filter class='categorical' column='[greenplum.41871.617679803200].[none:retailername:nk]' filter-group='8'>
            <groupfilter function='level-members' level='[none:retailername:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[greenplum.41871.617679803200].[none:taxonomiccolour:nk]' filter-group='4'>
            <groupfilter function='level-members' level='[none:taxonomiccolour:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='quantitative' column='[greenplum.41871.617679803200].[usr:Calculation_5270812182716952 1:qk]' included-values='in-range'>
            <min>1</min>
          </filter>
          <slices>
            <column>[greenplum.41871.617679803200].[none:country:nk]</column>
            <column>[greenplum.41871.617679803200].[none:taxonomiccolour:nk]</column>
            <column>[greenplum.41871.617679803200].[none:facetbrand:nk]</column>
            <column>[greenplum.41871.617679803200].[usr:Calculation_5270812182716952 1:qk]</column>
            <column>[greenplum.41871.617679803200].[none:retailername:nk]</column>
            <column>[greenplum.41871.617679803200].[none:price_currentdaymode:qk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='height' field='[greenplum.41871.617679803200].[none:retailername:nk]' value='25' />
            <format attr='width' field='[greenplum.41871.617679803200].[none:category:nk]' value='47' />
          </style-rule>
          <style-rule element='header'>
            <format attr='height' field='[greenplum.41871.617679803200].[none:category:nk]' value='112' />
          </style-rule>
          <style-rule element='label'>
            <format attr='text-orientation' field='[greenplum.41871.617679803200].[none:category:nk]' value='-90' />
          </style-rule>
          <style-rule element='mark'>
            <encoding attr='size' field='[greenplum.41871.617679803200].[usr:Calculation_1730812182851096:qk:2]' field-type='quantitative' max-size='1' min-size='0.005' type='quantsize' />
          </style-rule>
          <style-rule element='worksheet'>
            <format attr='display-field-labels' scope='cols' value='false' />
            <format attr='display-field-labels' scope='rows' value='false' />
          </style-rule>
          <style-rule element='refline'>
            <format attr='fill-above' id='refline0' value='#dbf0cc' />
            <format attr='fill-below' id='refline0' value='#f2e6e6' />
            <format attr='stroke-color' id='refline0' value='#000000' />
            <format attr='line-pattern' id='refline0' value='dashed' />
          </style-rule>
        </style>
        <panes>
          <pane id='2'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[greenplum.41871.617679803200].[usr:Calculation_2730813141847173:nk:1]' />
              <size column='[greenplum.41871.617679803200].[usr:Calculation_1730812182851096:qk:2]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='size' value='2' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='minheight' value='-1' />
                <format attr='maxheight' value='-1' />
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[greenplum.41871.617679803200].[none:retailername:nk]</rows>
        <cols>[greenplum.41871.617679803200].[none:category:nk]</cols>
      </table>
    </worksheet>
    <worksheet name='CompareRetailers_subcat'>
      <layout-options>
        <title>
          <formatted-text>
            <run>&lt;</run>
            <run>[Parameters].[Parameter 2]</run>
            <run>&gt;</run>
            <run> by subcategory and retailer</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='extremesellers_lastweek (ds.extremesellers_lastweek) (demo)' name='greenplum.41871.617679803200' />
            <datasource name='Parameters' />
          </datasources>
          <datasource-dependencies datasource='greenplum.41871.617679803200'>
            <column caption='NormalisedRatio' datatype='real' name='[Calculation_1730812182851096]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='if ([Calculation_5270812182716952 1]&gt;[Parameters].[Parameter 3]) then [Calculation_8450812182825530]/[Calculation_5270812182716952] else -0.01 end' scope-isolation='false'>
                <table-calc ordering-type='Rows' />
              </calculation>
            </column>
            <column caption='ColourField' datatype='string' name='[Calculation_2730813141847173]' role='measure' type='nominal'>
              <calculation class='tableau' formula='if [Calculation_1730812182851096]&gt;1 then &quot;Over-represented&quot; elseif [Calculation_1730812182851096]&lt;0 then &quot;Stats too low&quot; else &quot;Under-represented&quot; end' scope-isolation='false'>
                <table-calc ordering-type='Rows' />
              </calculation>
            </column>
            <column caption='Count in extreme sellers' datatype='integer' name='[Calculation_5270812182716952 1]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='sum(if [sellers] = [Parameters].[Parameter 2] then 1 else 0 end)' scope-isolation='false' />
            </column>
            <column caption='Category' datatype='string' name='[category]' role='dimension' type='nominal'>
            </column>
            <column caption='Country' datatype='string' name='[country]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal'>
            </column>
            <column caption='Facetbrand' datatype='string' name='[facetbrand]' role='dimension' type='nominal'>
            </column>
            <column-instance column='[category]' derivation='None' name='[none:category:nk]' pivot='key' type='nominal' />
            <column-instance column='[country]' derivation='None' name='[none:country:nk]' pivot='key' type='nominal' />
            <column-instance column='[facetbrand]' derivation='None' name='[none:facetbrand:nk]' pivot='key' type='nominal' />
            <column-instance column='[price_currentdaymode]' derivation='None' name='[none:price_currentdaymode:qk]' pivot='key' type='quantitative' />
            <column-instance column='[retailername]' derivation='None' name='[none:retailername:nk]' pivot='key' type='nominal' />
            <column-instance column='[subcategory]' derivation='None' name='[none:subcategory:nk]' pivot='key' type='nominal' />
            <column-instance column='[taxonomiccolour]' derivation='None' name='[none:taxonomiccolour:nk]' pivot='key' type='nominal' />
            <column caption='Price Currentdaymode' datatype='real' name='[price_currentdaymode]' role='measure' type='quantitative'>
            </column>
            <column caption='Retailername' datatype='string' name='[retailername]' role='dimension' type='nominal'>
            </column>
            <column caption='Subcategory' datatype='string' name='[subcategory]' role='dimension' type='nominal'>
            </column>
            <column caption='Taxonomiccolour' datatype='string' name='[taxonomiccolour]' role='dimension' type='nominal'>
            </column>
            <column-instance column='[Calculation_1730812182851096]' derivation='User' name='[usr:Calculation_1730812182851096:qk:2]' pivot='key' type='quantitative'>
              <table-calc ordering-type='Rows' />
              <table-calc field='[greenplum.41871.617679803200].[Calculation_5270812182716952]' ordering-type='Rows' />
              <table-calc field='[greenplum.41871.617679803200].[Calculation_8450812182825530]' ordering-type='Rows' />
            </column-instance>
            <column-instance column='[Calculation_2730813141847173]' derivation='User' name='[usr:Calculation_2730813141847173:nk:1]' pivot='key' type='nominal'>
              <table-calc ordering-type='Rows' />
              <table-calc field='[greenplum.41871.617679803200].[Calculation_5270812182716952]' ordering-type='Rows' />
              <table-calc field='[greenplum.41871.617679803200].[Calculation_1730812182851096]' ordering-type='Rows' />
              <table-calc field='[greenplum.41871.617679803200].[Calculation_8450812182825530]' ordering-type='Rows' />
            </column-instance>
            <column-instance column='[Calculation_5270812182716952 1]' derivation='User' name='[usr:Calculation_5270812182716952 1:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[greenplum.41871.617679803200].[none:category:nk]' filter-group='9'>
            <groupfilter function='member' level='[none:category:nk]' member='&quot;jeans&quot;' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[greenplum.41871.617679803200].[none:country:nk]' filter-group='10'>
            <groupfilter function='member' level='[none:country:nk]' member='&quot;us&quot;' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[greenplum.41871.617679803200].[none:facetbrand:nk]' filter-group='6'>
            <groupfilter function='level-members' level='[none:facetbrand:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='quantitative' column='[greenplum.41871.617679803200].[none:price_currentdaymode:qk]' filter-group='5' included-values='in-range-or-null'>
            <min>2.0</min>
            <max>107.0</max>
          </filter>
          <filter class='categorical' column='[greenplum.41871.617679803200].[none:retailername:nk]' filter-group='8'>
            <groupfilter function='level-members' level='[none:retailername:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[greenplum.41871.617679803200].[none:taxonomiccolour:nk]' filter-group='4'>
            <groupfilter function='level-members' level='[none:taxonomiccolour:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='quantitative' column='[greenplum.41871.617679803200].[usr:Calculation_5270812182716952 1:qk]' included-values='in-range'>
            <min>1</min>
          </filter>
          <slices>
            <column>[greenplum.41871.617679803200].[none:country:nk]</column>
            <column>[greenplum.41871.617679803200].[none:taxonomiccolour:nk]</column>
            <column>[greenplum.41871.617679803200].[none:facetbrand:nk]</column>
            <column>[greenplum.41871.617679803200].[none:category:nk]</column>
            <column>[greenplum.41871.617679803200].[usr:Calculation_5270812182716952 1:qk]</column>
            <column>[greenplum.41871.617679803200].[none:retailername:nk]</column>
            <column>[greenplum.41871.617679803200].[none:price_currentdaymode:qk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='height' field='[greenplum.41871.617679803200].[none:retailername:nk]' value='39' />
            <format attr='width' field='[greenplum.41871.617679803200].[none:subcategory:nk]' value='161' />
          </style-rule>
          <style-rule element='header'>
            <format attr='height' field='[greenplum.41871.617679803200].[none:subcategory:nk]' value='96' />
            <format attr='width' field='[greenplum.41871.617679803200].[none:retailername:nk]' value='200' />
          </style-rule>
          <style-rule element='label'>
            <format attr='text-orientation' field='[greenplum.41871.617679803200].[none:subcategory:nk]' value='-90' />
          </style-rule>
          <style-rule element='mark'>
            <encoding attr='size' field='[greenplum.41871.617679803200].[usr:Calculation_1730812182851096:qk:2]' field-type='quantitative' max-size='1' min-size='0.005' type='quantsize' />
          </style-rule>
          <style-rule element='worksheet'>
            <format attr='display-field-labels' scope='cols' value='false' />
            <format attr='display-field-labels' scope='rows' value='false' />
          </style-rule>
          <style-rule element='refline'>
            <format attr='fill-above' id='refline0' value='#dbf0cc' />
            <format attr='fill-below' id='refline0' value='#f2e6e6' />
            <format attr='stroke-color' id='refline0' value='#000000' />
            <format attr='line-pattern' id='refline0' value='dashed' />
          </style-rule>
        </style>
        <panes>
          <pane id='2'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[greenplum.41871.617679803200].[usr:Calculation_2730813141847173:nk:1]' />
              <size column='[greenplum.41871.617679803200].[usr:Calculation_1730812182851096:qk:2]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='size' value='2' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='minheight' value='-1' />
                <format attr='maxheight' value='-1' />
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[greenplum.41871.617679803200].[none:retailername:nk]</rows>
        <cols>[greenplum.41871.617679803200].[none:subcategory:nk]</cols>
      </table>
    </worksheet>
    <worksheet name='Count vs Brand'>
      <layout-options>
        <title>
          <formatted-text>
            <run>Product counts in </run>
            <run>&lt;</run>
            <run>[Parameters].[Parameter 2]</run>
            <run>&gt;</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='extremesellers_lastweek (ds.extremesellers_lastweek) (demo)' name='greenplum.41871.617679803200' />
            <datasource name='Parameters' />
          </datasources>
          <datasource-dependencies datasource='greenplum.41871.617679803200'>
            <column caption='ColourField' datatype='string' name='[Calculation_2730813141847173]' role='measure' type='nominal'>
              <calculation class='tableau' formula='if [Calculation_1730812182851096]&gt;1 then &quot;Over-represented&quot; elseif [Calculation_1730812182851096]&lt;0 then &quot;Stats too low&quot; else &quot;Under-represented&quot; end' scope-isolation='false'>
                <table-calc ordering-type='Rows' />
              </calculation>
            </column>
            <column caption='Count in extreme sellers' datatype='integer' name='[Calculation_5270812182716952 1]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='sum(if [sellers] = [Parameters].[Parameter 2] then 1 else 0 end)' scope-isolation='false' />
            </column>
            <column caption='Category' datatype='string' name='[category]' role='dimension' type='nominal'>
            </column>
            <column caption='Country' datatype='string' name='[country]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal'>
            </column>
            <column caption='Facetbrand' datatype='string' name='[facetbrand]' role='dimension' type='nominal'>
            </column>
            <column-instance column='[category]' derivation='None' name='[none:category:nk]' pivot='key' type='nominal' />
            <column-instance column='[country]' derivation='None' name='[none:country:nk]' pivot='key' type='nominal' />
            <column-instance column='[facetbrand]' derivation='None' name='[none:facetbrand:nk]' pivot='key' type='nominal' />
            <column-instance column='[price_currentdaymode]' derivation='None' name='[none:price_currentdaymode:qk]' pivot='key' type='quantitative' />
            <column-instance column='[retailername]' derivation='None' name='[none:retailername:nk]' pivot='key' type='nominal' />
            <column-instance column='[subcategory]' derivation='None' name='[none:subcategory:nk]' pivot='key' type='nominal' />
            <column-instance column='[taxonomiccolour]' derivation='None' name='[none:taxonomiccolour:nk]' pivot='key' type='nominal' />
            <column caption='Price Currentdaymode' datatype='real' name='[price_currentdaymode]' role='measure' type='quantitative'>
            </column>
            <column caption='Retailername' datatype='string' name='[retailername]' role='dimension' type='nominal'>
            </column>
            <column caption='Subcategory' datatype='string' name='[subcategory]' role='dimension' type='nominal'>
            </column>
            <column caption='Taxonomiccolour' datatype='string' name='[taxonomiccolour]' role='dimension' type='nominal'>
            </column>
            <column-instance column='[Calculation_2730813141847173]' derivation='User' name='[usr:Calculation_2730813141847173:nk:1]' pivot='key' type='nominal'>
              <table-calc ordering-type='Rows' />
              <table-calc field='[greenplum.41871.617679803200].[Calculation_5270812182716952]' ordering-type='Rows' />
              <table-calc field='[greenplum.41871.617679803200].[Calculation_1730812182851096]' ordering-type='Rows' />
              <table-calc field='[greenplum.41871.617679803200].[Calculation_8450812182825530]' ordering-type='Rows' />
            </column-instance>
            <column-instance column='[Calculation_5270812182716952 1]' derivation='User' name='[usr:Calculation_5270812182716952 1:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[greenplum.41871.617679803200].[none:category:nk]' filter-group='9'>
            <groupfilter function='member' level='[none:category:nk]' member='&quot;jeans&quot;' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[greenplum.41871.617679803200].[none:country:nk]' filter-group='10'>
            <groupfilter function='member' level='[none:country:nk]' member='&quot;us&quot;' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[greenplum.41871.617679803200].[none:facetbrand:nk]'>
            <groupfilter function='except' user:ui-domain='relevant' user:ui-enumeration='exclusive' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[none:facetbrand:nk]' />
              <groupfilter function='member' level='[none:facetbrand:nk]' member='&quot;Not found&quot;' />
            </groupfilter>
          </filter>
          <sort class='alphabetic' column='[greenplum.41871.617679803200].[none:facetbrand:nk]' direction='ASC' />
          <filter class='quantitative' column='[greenplum.41871.617679803200].[none:price_currentdaymode:qk]' filter-group='5' included-values='in-range-or-null'>
            <min>2.0</min>
            <max>107.0</max>
          </filter>
          <filter class='categorical' column='[greenplum.41871.617679803200].[none:retailername:nk]' filter-group='8'>
            <groupfilter function='level-members' level='[none:retailername:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[greenplum.41871.617679803200].[none:subcategory:nk]' filter-group='7'>
            <groupfilter function='level-members' level='[none:subcategory:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[greenplum.41871.617679803200].[none:taxonomiccolour:nk]' filter-group='4'>
            <groupfilter function='level-members' level='[none:taxonomiccolour:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='quantitative' column='[greenplum.41871.617679803200].[usr:Calculation_5270812182716952 1:qk]' included-values='in-range'>
            <min>1</min>
          </filter>
          <slices>
            <column>[greenplum.41871.617679803200].[none:category:nk]</column>
            <column>[greenplum.41871.617679803200].[none:subcategory:nk]</column>
            <column>[greenplum.41871.617679803200].[none:retailername:nk]</column>
            <column>[greenplum.41871.617679803200].[none:taxonomiccolour:nk]</column>
            <column>[greenplum.41871.617679803200].[none:price_currentdaymode:qk]</column>
            <column>[greenplum.41871.617679803200].[usr:Calculation_5270812182716952 1:qk]</column>
            <column>[greenplum.41871.617679803200].[none:facetbrand:nk]</column>
            <column>[greenplum.41871.617679803200].[none:country:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <format attr='title' class='0' field='[greenplum.41871.617679803200].[usr:Calculation_5270812182716952 1:qk]' scope='rows' value='Product counts' />
            <format attr='subtitle' class='0' field='[greenplum.41871.617679803200].[usr:Calculation_5270812182716952 1:qk]' scope='rows' value='' />
            <format attr='auto-subtitle' class='0' field='[greenplum.41871.617679803200].[usr:Calculation_5270812182716952 1:qk]' scope='rows' value='true' />
          </style-rule>
          <style-rule element='label'>
            <format attr='text-orientation' field='[greenplum.41871.617679803200].[none:facetbrand:nk]' value='-90' />
          </style-rule>
          <style-rule element='worksheet'>
            <format attr='display-field-labels' scope='cols' value='false' />
          </style-rule>
        </style>
        <panes>
          <pane>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[greenplum.41871.617679803200].[usr:Calculation_2730813141847173:nk:1]' />
            </encodings>
          </pane>
        </panes>
        <rows>[greenplum.41871.617679803200].[usr:Calculation_5270812182716952 1:qk]</rows>
        <cols>[greenplum.41871.617679803200].[none:facetbrand:nk]</cols>
      </table>
    </worksheet>
    <worksheet name='Count vs SubCategory'>
      <layout-options>
        <title>
          <formatted-text>
            <run>Product counts in </run>
            <run>&lt;</run>
            <run>[Parameters].[Parameter 2]</run>
            <run>&gt;</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='extremesellers_lastweek (ds.extremesellers_lastweek) (demo)' name='greenplum.41871.617679803200' />
            <datasource name='Parameters' />
          </datasources>
          <datasource-dependencies datasource='greenplum.41871.617679803200'>
            <column caption='ColourField' datatype='string' name='[Calculation_2730813141847173]' role='measure' type='nominal'>
              <calculation class='tableau' formula='if [Calculation_1730812182851096]&gt;1 then &quot;Over-represented&quot; elseif [Calculation_1730812182851096]&lt;0 then &quot;Stats too low&quot; else &quot;Under-represented&quot; end' scope-isolation='false'>
                <table-calc ordering-type='Rows' />
              </calculation>
            </column>
            <column caption='Count in extreme sellers' datatype='integer' name='[Calculation_5270812182716952 1]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='sum(if [sellers] = [Parameters].[Parameter 2] then 1 else 0 end)' scope-isolation='false' />
            </column>
            <column caption='Category' datatype='string' name='[category]' role='dimension' type='nominal'>
            </column>
            <column caption='Country' datatype='string' name='[country]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal'>
            </column>
            <column caption='Facetbrand' datatype='string' name='[facetbrand]' role='dimension' type='nominal'>
            </column>
            <column-instance column='[category]' derivation='None' name='[none:category:nk]' pivot='key' type='nominal' />
            <column-instance column='[country]' derivation='None' name='[none:country:nk]' pivot='key' type='nominal' />
            <column-instance column='[facetbrand]' derivation='None' name='[none:facetbrand:nk]' pivot='key' type='nominal' />
            <column-instance column='[price_currentdaymode]' derivation='None' name='[none:price_currentdaymode:qk]' pivot='key' type='quantitative' />
            <column-instance column='[retailername]' derivation='None' name='[none:retailername:nk]' pivot='key' type='nominal' />
            <column-instance column='[subcategory]' derivation='None' name='[none:subcategory:nk]' pivot='key' type='nominal' />
            <column-instance column='[taxonomiccolour]' derivation='None' name='[none:taxonomiccolour:nk]' pivot='key' type='nominal' />
            <column caption='Price Currentdaymode' datatype='real' name='[price_currentdaymode]' role='measure' type='quantitative'>
            </column>
            <column caption='Retailername' datatype='string' name='[retailername]' role='dimension' type='nominal'>
            </column>
            <column caption='Subcategory' datatype='string' name='[subcategory]' role='dimension' type='nominal'>
            </column>
            <column caption='Taxonomiccolour' datatype='string' name='[taxonomiccolour]' role='dimension' type='nominal'>
            </column>
            <column-instance column='[Calculation_2730813141847173]' derivation='User' name='[usr:Calculation_2730813141847173:nk:1]' pivot='key' type='nominal'>
              <table-calc ordering-type='Rows' />
              <table-calc field='[greenplum.41871.617679803200].[Calculation_5270812182716952]' ordering-type='Rows' />
              <table-calc field='[greenplum.41871.617679803200].[Calculation_1730812182851096]' ordering-type='Rows' />
              <table-calc field='[greenplum.41871.617679803200].[Calculation_8450812182825530]' ordering-type='Rows' />
            </column-instance>
            <column-instance column='[Calculation_5270812182716952 1]' derivation='User' name='[usr:Calculation_5270812182716952 1:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[greenplum.41871.617679803200].[none:category:nk]' filter-group='9'>
            <groupfilter function='member' level='[none:category:nk]' member='&quot;jeans&quot;' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[greenplum.41871.617679803200].[none:country:nk]' filter-group='10'>
            <groupfilter function='member' level='[none:country:nk]' member='&quot;us&quot;' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[greenplum.41871.617679803200].[none:facetbrand:nk]' filter-group='6'>
            <groupfilter function='level-members' level='[none:facetbrand:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='quantitative' column='[greenplum.41871.617679803200].[none:price_currentdaymode:qk]' filter-group='5' included-values='in-range-or-null'>
            <min>2.0</min>
            <max>107.0</max>
          </filter>
          <filter class='categorical' column='[greenplum.41871.617679803200].[none:retailername:nk]' filter-group='8'>
            <groupfilter function='level-members' level='[none:retailername:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[greenplum.41871.617679803200].[none:subcategory:nk]'>
            <groupfilter function='except' user:ui-domain='relevant' user:ui-enumeration='exclusive' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[none:subcategory:nk]' />
              <groupfilter function='member' level='[none:subcategory:nk]' member='&quot;unclassified&quot;' />
            </groupfilter>
          </filter>
          <sort class='alphabetic' column='[greenplum.41871.617679803200].[none:subcategory:nk]' direction='ASC' />
          <filter class='categorical' column='[greenplum.41871.617679803200].[none:taxonomiccolour:nk]' filter-group='4'>
            <groupfilter function='level-members' level='[none:taxonomiccolour:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <sort class='manual' column='[greenplum.41871.617679803200].[usr:Calculation_2730813141847173:nk:1]' direction='ASC'>
            <dictionary>
              <bucket>&quot;Over-represented&quot;</bucket>
              <bucket>&quot;Under-represented&quot;</bucket>
              <bucket>&quot;Stats too low&quot;</bucket>
              <bucket>%all%</bucket>
            </dictionary>
          </sort>
          <filter class='quantitative' column='[greenplum.41871.617679803200].[usr:Calculation_5270812182716952 1:qk]' included-values='in-range'>
            <min>1</min>
          </filter>
          <slices>
            <column>[greenplum.41871.617679803200].[none:country:nk]</column>
            <column>[greenplum.41871.617679803200].[none:category:nk]</column>
            <column>[greenplum.41871.617679803200].[none:facetbrand:nk]</column>
            <column>[greenplum.41871.617679803200].[none:retailername:nk]</column>
            <column>[greenplum.41871.617679803200].[none:taxonomiccolour:nk]</column>
            <column>[greenplum.41871.617679803200].[none:price_currentdaymode:qk]</column>
            <column>[greenplum.41871.617679803200].[usr:Calculation_5270812182716952 1:qk]</column>
            <column>[greenplum.41871.617679803200].[none:subcategory:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <format attr='title' class='0' field='[greenplum.41871.617679803200].[usr:Calculation_5270812182716952 1:qk]' scope='rows' value='Product counts' />
            <format attr='subtitle' class='0' field='[greenplum.41871.617679803200].[usr:Calculation_5270812182716952 1:qk]' scope='rows' value='' />
            <format attr='auto-subtitle' class='0' field='[greenplum.41871.617679803200].[usr:Calculation_5270812182716952 1:qk]' scope='rows' value='true' />
          </style-rule>
          <style-rule element='worksheet'>
            <format attr='display-field-labels' scope='cols' value='false' />
          </style-rule>
          <style-rule element='legend-title-text'>
            <format attr='color' field='[greenplum.41871.617679803200].[usr:Calculation_2730813141847173:nk:1]' value='Colour legend&#10;'>
              <formatted-text>
                <run>Colour legend&#10;</run>
              </formatted-text>
            </format>
          </style-rule>
          <style-rule element='quick-filter'>
            <format attr='title' field='[greenplum.41871.617679803200].[none:price_currentdaymode:qk]' value='Price'>
              <formatted-text>
                <run>Price</run>
              </formatted-text>
            </format>
            <format attr='title' field='[greenplum.41871.617679803200].[none:retailername:nk]' value='Retailer&#10;'>
              <formatted-text>
                <run>Retailer&#10;</run>
              </formatted-text>
            </format>
            <format attr='title' field='[greenplum.41871.617679803200].[none:facetbrand:nk]' value='Brand&#10;'>
              <formatted-text>
                <run>Brand&#10;</run>
              </formatted-text>
            </format>
            <format attr='title' field='[greenplum.41871.617679803200].[none:taxonomiccolour:nk]' value='Colour'>
              <formatted-text>
                <run>Colour</run>
              </formatted-text>
            </format>
          </style-rule>
        </style>
        <panes>
          <pane>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[greenplum.41871.617679803200].[usr:Calculation_2730813141847173:nk:1]' />
            </encodings>
          </pane>
        </panes>
        <rows>[greenplum.41871.617679803200].[usr:Calculation_5270812182716952 1:qk]</rows>
        <cols>[greenplum.41871.617679803200].[none:subcategory:nk]</cols>
      </table>
    </worksheet>
    <worksheet name='Ratio vs Brand'>
      <layout-options>
        <title>
          <formatted-text>
            <run>&lt;</run>
            <run>[Parameters].[Parameter 2]</run>
            <run>&gt;</run>
            <run> by brand</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='extremesellers_lastweek (ds.extremesellers_lastweek) (demo)' name='greenplum.41871.617679803200' />
            <datasource name='Parameters' />
          </datasources>
          <datasource-dependencies datasource='greenplum.41871.617679803200'>
            <column caption='NormalisedRatio' datatype='real' name='[Calculation_1730812182851096]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='if ([Calculation_5270812182716952 1]&gt;[Parameters].[Parameter 3]) then [Calculation_8450812182825530]/[Calculation_5270812182716952] else -0.01 end' scope-isolation='false'>
                <table-calc ordering-type='Rows' />
              </calculation>
            </column>
            <column caption='ColourField' datatype='string' name='[Calculation_2730813141847173]' role='measure' type='nominal'>
              <calculation class='tableau' formula='if [Calculation_1730812182851096]&gt;1 then &quot;Over-represented&quot; elseif [Calculation_1730812182851096]&lt;0 then &quot;Stats too low&quot; else &quot;Under-represented&quot; end' scope-isolation='false'>
                <table-calc ordering-type='Rows' />
              </calculation>
            </column>
            <column caption='Count in extreme sellers' datatype='integer' name='[Calculation_5270812182716952 1]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='sum(if [sellers] = [Parameters].[Parameter 2] then 1 else 0 end)' scope-isolation='false' />
            </column>
            <column caption='Category' datatype='string' name='[category]' role='dimension' type='nominal'>
            </column>
            <column caption='Country' datatype='string' name='[country]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal'>
            </column>
            <column caption='Facetbrand' datatype='string' name='[facetbrand]' role='dimension' type='nominal'>
            </column>
            <column-instance column='[category]' derivation='None' name='[none:category:nk]' pivot='key' type='nominal' />
            <column-instance column='[country]' derivation='None' name='[none:country:nk]' pivot='key' type='nominal' />
            <column-instance column='[facetbrand]' derivation='None' name='[none:facetbrand:nk]' pivot='key' type='nominal' />
            <column-instance column='[price_currentdaymode]' derivation='None' name='[none:price_currentdaymode:qk]' pivot='key' type='quantitative' />
            <column-instance column='[retailername]' derivation='None' name='[none:retailername:nk]' pivot='key' type='nominal' />
            <column-instance column='[subcategory]' derivation='None' name='[none:subcategory:nk]' pivot='key' type='nominal' />
            <column-instance column='[taxonomiccolour]' derivation='None' name='[none:taxonomiccolour:nk]' pivot='key' type='nominal' />
            <column caption='Price Currentdaymode' datatype='real' name='[price_currentdaymode]' role='measure' type='quantitative'>
            </column>
            <column caption='Retailername' datatype='string' name='[retailername]' role='dimension' type='nominal'>
            </column>
            <column caption='Subcategory' datatype='string' name='[subcategory]' role='dimension' type='nominal'>
            </column>
            <column caption='Taxonomiccolour' datatype='string' name='[taxonomiccolour]' role='dimension' type='nominal'>
            </column>
            <column-instance column='[Calculation_1730812182851096]' derivation='User' name='[usr:Calculation_1730812182851096:qk:2]' pivot='key' type='quantitative'>
              <table-calc ordering-type='Rows' />
              <table-calc field='[greenplum.41871.617679803200].[Calculation_5270812182716952]' ordering-type='Rows' />
              <table-calc field='[greenplum.41871.617679803200].[Calculation_8450812182825530]' ordering-type='Rows' />
            </column-instance>
            <column-instance column='[Calculation_2730813141847173]' derivation='User' name='[usr:Calculation_2730813141847173:nk:1]' pivot='key' type='nominal'>
              <table-calc ordering-type='Rows' />
              <table-calc field='[greenplum.41871.617679803200].[Calculation_5270812182716952]' ordering-type='Rows' />
              <table-calc field='[greenplum.41871.617679803200].[Calculation_1730812182851096]' ordering-type='Rows' />
              <table-calc field='[greenplum.41871.617679803200].[Calculation_8450812182825530]' ordering-type='Rows' />
            </column-instance>
            <column-instance column='[Calculation_5270812182716952 1]' derivation='User' name='[usr:Calculation_5270812182716952 1:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[greenplum.41871.617679803200].[none:category:nk]' filter-group='9'>
            <groupfilter function='member' level='[none:category:nk]' member='&quot;jeans&quot;' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[greenplum.41871.617679803200].[none:country:nk]' filter-group='10'>
            <groupfilter function='member' level='[none:country:nk]' member='&quot;us&quot;' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[greenplum.41871.617679803200].[none:facetbrand:nk]'>
            <groupfilter function='except' user:ui-domain='relevant' user:ui-enumeration='exclusive' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[none:facetbrand:nk]' />
              <groupfilter function='member' level='[none:facetbrand:nk]' member='&quot;Not found&quot;' />
            </groupfilter>
          </filter>
          <sort class='alphabetic' column='[greenplum.41871.617679803200].[none:facetbrand:nk]' direction='ASC' />
          <filter class='quantitative' column='[greenplum.41871.617679803200].[none:price_currentdaymode:qk]' filter-group='5' included-values='in-range-or-null'>
            <min>2.0</min>
            <max>107.0</max>
          </filter>
          <filter class='categorical' column='[greenplum.41871.617679803200].[none:retailername:nk]' filter-group='8'>
            <groupfilter function='level-members' level='[none:retailername:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[greenplum.41871.617679803200].[none:subcategory:nk]' filter-group='7'>
            <groupfilter function='level-members' level='[none:subcategory:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[greenplum.41871.617679803200].[none:taxonomiccolour:nk]' filter-group='4'>
            <groupfilter function='level-members' level='[none:taxonomiccolour:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='quantitative' column='[greenplum.41871.617679803200].[usr:Calculation_5270812182716952 1:qk]' included-values='in-range'>
            <min>1</min>
          </filter>
          <slices>
            <column>[greenplum.41871.617679803200].[none:country:nk]</column>
            <column>[greenplum.41871.617679803200].[none:category:nk]</column>
            <column>[greenplum.41871.617679803200].[none:subcategory:nk]</column>
            <column>[greenplum.41871.617679803200].[none:retailername:nk]</column>
            <column>[greenplum.41871.617679803200].[none:taxonomiccolour:nk]</column>
            <column>[greenplum.41871.617679803200].[none:facetbrand:nk]</column>
            <column>[greenplum.41871.617679803200].[usr:Calculation_5270812182716952 1:qk]</column>
            <column>[greenplum.41871.617679803200].[none:price_currentdaymode:qk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <format attr='title' class='0' field='[greenplum.41871.617679803200].[usr:Calculation_1730812182851096:qk:2]' scope='rows' value='Observed/Expected' />
            <format attr='subtitle' class='0' field='[greenplum.41871.617679803200].[usr:Calculation_1730812182851096:qk:2]' scope='rows' value='' />
            <format attr='auto-subtitle' class='0' field='[greenplum.41871.617679803200].[usr:Calculation_1730812182851096:qk:2]' scope='rows' value='true' />
          </style-rule>
          <style-rule element='label'>
            <format attr='text-orientation' field='[greenplum.41871.617679803200].[none:facetbrand:nk]' value='-90' />
          </style-rule>
          <style-rule element='mark'>
            <encoding attr='color' center='1.0' field='[greenplum.41871.617679803200].[usr:Calculation_1730812182851096:qk:2]' palette='tableau-red-green' symmetric='false' type='interpolated' />
          </style-rule>
          <style-rule element='worksheet'>
            <format attr='display-field-labels' scope='cols' value='false' />
          </style-rule>
          <style-rule element='refline'>
            <format attr='fill-above' id='refline0' value='#00000000' />
            <format attr='fill-below' id='refline0' value='#00000000' />
            <format attr='stroke-color' id='refline0' value='#000000' />
            <format attr='line-pattern' id='refline0' value='dashed' />
          </style-rule>
        </style>
        <panes>
          <pane id='3'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[greenplum.41871.617679803200].[usr:Calculation_2730813141847173:nk:1]' />
            </encodings>
          </pane>
        </panes>
        <rows>[greenplum.41871.617679803200].[usr:Calculation_1730812182851096:qk:2]</rows>
        <cols>[greenplum.41871.617679803200].[none:facetbrand:nk]</cols>
      </table>
    </worksheet>
    <worksheet name='Ratio vs SubCategory'>
      <layout-options>
        <title>
          <formatted-text>
            <run>&lt;</run>
            <run>[Parameters].[Parameter 2]</run>
            <run>&gt;</run>
            <run> by subcategory</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='extremesellers_lastweek (ds.extremesellers_lastweek) (demo)' name='greenplum.41871.617679803200' />
            <datasource name='Parameters' />
          </datasources>
          <datasource-dependencies datasource='Parameters'>
            <column caption='1' datatype='real' name='[Parameter 1]' param-domain-type='any' role='measure' type='quantitative' value='1.0'>
              <calculation class='tableau' formula='1.0' />
            </column>
          </datasource-dependencies>
          <datasource-dependencies datasource='greenplum.41871.617679803200'>
            <column caption='NormalisedRatio' datatype='real' name='[Calculation_1730812182851096]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='if ([Calculation_5270812182716952 1]&gt;[Parameters].[Parameter 3]) then [Calculation_8450812182825530]/[Calculation_5270812182716952] else -0.01 end' scope-isolation='false'>
                <table-calc ordering-type='Rows' />
              </calculation>
            </column>
            <column caption='ColourField' datatype='string' name='[Calculation_2730813141847173]' role='measure' type='nominal'>
              <calculation class='tableau' formula='if [Calculation_1730812182851096]&gt;1 then &quot;Over-represented&quot; elseif [Calculation_1730812182851096]&lt;0 then &quot;Stats too low&quot; else &quot;Under-represented&quot; end' scope-isolation='false'>
                <table-calc ordering-type='Rows' />
              </calculation>
            </column>
            <column caption='Count in extreme sellers' datatype='integer' name='[Calculation_5270812182716952 1]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='sum(if [sellers] = [Parameters].[Parameter 2] then 1 else 0 end)' scope-isolation='false' />
            </column>
            <column caption='Category' datatype='string' name='[category]' role='dimension' type='nominal'>
            </column>
            <column caption='Country' datatype='string' name='[country]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal'>
            </column>
            <column caption='Facetbrand' datatype='string' name='[facetbrand]' role='dimension' type='nominal'>
            </column>
            <column-instance column='[category]' derivation='None' name='[none:category:nk]' pivot='key' type='nominal' />
            <column-instance column='[country]' derivation='None' name='[none:country:nk]' pivot='key' type='nominal' />
            <column-instance column='[facetbrand]' derivation='None' name='[none:facetbrand:nk]' pivot='key' type='nominal' />
            <column-instance column='[price_currentdaymode]' derivation='None' name='[none:price_currentdaymode:qk]' pivot='key' type='quantitative' />
            <column-instance column='[retailername]' derivation='None' name='[none:retailername:nk]' pivot='key' type='nominal' />
            <column-instance column='[subcategory]' derivation='None' name='[none:subcategory:nk]' pivot='key' type='nominal' />
            <column-instance column='[taxonomiccolour]' derivation='None' name='[none:taxonomiccolour:nk]' pivot='key' type='nominal' />
            <column caption='Price Currentdaymode' datatype='real' name='[price_currentdaymode]' role='measure' type='quantitative'>
            </column>
            <column caption='Retailername' datatype='string' name='[retailername]' role='dimension' type='nominal'>
            </column>
            <column caption='Subcategory' datatype='string' name='[subcategory]' role='dimension' type='nominal'>
            </column>
            <column caption='Taxonomiccolour' datatype='string' name='[taxonomiccolour]' role='dimension' type='nominal'>
            </column>
            <column-instance column='[Calculation_1730812182851096]' derivation='User' name='[usr:Calculation_1730812182851096:qk:2]' pivot='key' type='quantitative'>
              <table-calc ordering-type='Rows' />
              <table-calc field='[greenplum.41871.617679803200].[Calculation_5270812182716952]' ordering-type='Rows' />
              <table-calc field='[greenplum.41871.617679803200].[Calculation_8450812182825530]' ordering-type='Rows' />
            </column-instance>
            <column-instance column='[Calculation_2730813141847173]' derivation='User' name='[usr:Calculation_2730813141847173:nk:1]' pivot='key' type='nominal'>
              <table-calc ordering-type='Rows' />
              <table-calc field='[greenplum.41871.617679803200].[Calculation_5270812182716952]' ordering-type='Rows' />
              <table-calc field='[greenplum.41871.617679803200].[Calculation_1730812182851096]' ordering-type='Rows' />
              <table-calc field='[greenplum.41871.617679803200].[Calculation_8450812182825530]' ordering-type='Rows' />
            </column-instance>
            <column-instance column='[Calculation_5270812182716952 1]' derivation='User' name='[usr:Calculation_5270812182716952 1:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[greenplum.41871.617679803200].[none:category:nk]' filter-group='9'>
            <groupfilter function='member' level='[none:category:nk]' member='&quot;jeans&quot;' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[greenplum.41871.617679803200].[none:country:nk]' filter-group='10'>
            <groupfilter function='member' level='[none:country:nk]' member='&quot;us&quot;' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[greenplum.41871.617679803200].[none:facetbrand:nk]' filter-group='6'>
            <groupfilter function='level-members' level='[none:facetbrand:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='quantitative' column='[greenplum.41871.617679803200].[none:price_currentdaymode:qk]' filter-group='5' included-values='in-range-or-null'>
            <min>2.0</min>
            <max>107.0</max>
          </filter>
          <filter class='categorical' column='[greenplum.41871.617679803200].[none:retailername:nk]' filter-group='8'>
            <groupfilter function='level-members' level='[none:retailername:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[greenplum.41871.617679803200].[none:subcategory:nk]'>
            <groupfilter function='except' user:ui-domain='relevant' user:ui-enumeration='exclusive' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[none:subcategory:nk]' />
              <groupfilter function='member' level='[none:subcategory:nk]' member='&quot;unclassified&quot;' />
            </groupfilter>
          </filter>
          <sort class='alphabetic' column='[greenplum.41871.617679803200].[none:subcategory:nk]' direction='ASC' />
          <filter class='categorical' column='[greenplum.41871.617679803200].[none:taxonomiccolour:nk]' filter-group='4'>
            <groupfilter function='level-members' level='[none:taxonomiccolour:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='quantitative' column='[greenplum.41871.617679803200].[usr:Calculation_5270812182716952 1:qk]' included-values='in-range'>
            <min>1</min>
          </filter>
          <slices>
            <column>[greenplum.41871.617679803200].[none:country:nk]</column>
            <column>[greenplum.41871.617679803200].[none:category:nk]</column>
            <column>[greenplum.41871.617679803200].[none:retailername:nk]</column>
            <column>[greenplum.41871.617679803200].[none:taxonomiccolour:nk]</column>
            <column>[greenplum.41871.617679803200].[none:facetbrand:nk]</column>
            <column>[greenplum.41871.617679803200].[none:price_currentdaymode:qk]</column>
            <column>[greenplum.41871.617679803200].[usr:Calculation_5270812182716952 1:qk]</column>
            <column>[greenplum.41871.617679803200].[none:subcategory:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <format attr='title' class='0' field='[greenplum.41871.617679803200].[usr:Calculation_1730812182851096:qk:2]' scope='rows' value='Observed/Expected' />
            <format attr='subtitle' class='0' field='[greenplum.41871.617679803200].[usr:Calculation_1730812182851096:qk:2]' scope='rows' value='' />
            <format attr='auto-subtitle' class='0' field='[greenplum.41871.617679803200].[usr:Calculation_1730812182851096:qk:2]' scope='rows' value='true' />
          </style-rule>
          <style-rule element='mark'>
            <encoding attr='color' center='1.0' field='[greenplum.41871.617679803200].[usr:Calculation_1730812182851096:qk:2]' palette='tableau-red-green' type='interpolated' />
          </style-rule>
          <style-rule element='worksheet'>
            <format attr='display-field-labels' scope='cols' value='false' />
          </style-rule>
          <style-rule element='refline'>
            <format attr='fill-above' id='refline0' value='#00000000' />
            <format attr='fill-below' id='refline0' value='#00000000' />
            <format attr='stroke-color' id='refline0' value='#000000' />
            <format attr='line-pattern' id='refline0' value='dashed' />
          </style-rule>
        </style>
        <panes>
          <pane id='2'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[greenplum.41871.617679803200].[usr:Calculation_2730813141847173:nk:1]' />
            </encodings>
            <reference-line axis-column='[greenplum.41871.617679803200].[usr:Calculation_1730812182851096:qk:2]' formula='average' id='refline0' label='Expected' label-type='custom' scope='per-pane' value-column='[Parameters].[Parameter 1]' z-order='1' />
          </pane>
        </panes>
        <rows>[greenplum.41871.617679803200].[usr:Calculation_1730812182851096:qk:2]</rows>
        <cols>[greenplum.41871.617679803200].[none:subcategory:nk]</cols>
      </table>
    </worksheet>
  </worksheets>
  <dashboards>
    <dashboard name='Competitive view'>
      <style>
        <style-rule element='dash-container'>
          <format attr='border-style' id='dash-zone_38' value='solid' />
          <format attr='border-width' id='dash-zone_38' value='3' />
          <format attr='border-width' id='dash-zone_39' value='3' />
          <format attr='border-style' id='dash-zone_39' value='solid' />
          <format attr='border-color' id='dash-zone_38' value='#898989' />
          <format attr='border-color' id='dash-zone_39' value='#898989' />
        </style-rule>
        <style-rule element='parameter-ctrl'>
          <format attr='font-family' value='Arial' />
          <format attr='border-width' value='4' />
          <format attr='background-color' value='#ffffff' />
          <format attr='border-color' value='#000000' />
          <format attr='color' value='#000000' />
          <format attr='border-style' value='none' />
          <format attr='font-size' value='8' />
        </style-rule>
        <style-rule element='parameter-ctrl-title'>
          <format attr='color' value='#000000' />
          <format attr='font-size' value='8' />
        </style-rule>
      </style>
      <zones>
        <zone h='100000' id='2' type='layout-basic' w='100000' x='0' y='0'>
          <zone h='55314' id='22' param='horz' type='layout-flow' w='15223' x='0' y='0'>
            <zone h='55314' id='20' param='horz' type='layout-flow' w='15223' x='0' y='0'>
              <zone h='55314' id='18' param='horz' type='layout-flow' w='15223' x='0' y='0'>
                <zone h='55314' id='16' param='horz' type='layout-flow' w='15223' x='0' y='0'>
                  <zone h='55314' id='14' param='horz' type='layout-flow' w='15223' x='0' y='0'>
                    <zone h='55314' id='7' param='horz' type='layout-flow' w='15223' x='0' y='0'>
                      <zone h='55314' id='5' param='horz' type='layout-flow' w='15223' x='0' y='0'>
                        <zone h='55314' id='3' type='layout-basic' w='15223' x='0' y='0'>
                          <zone h='7246' id='8' mode='dropdown' name='CompareRetailers_subcat' param='[greenplum.41871.617679803200].[none:category:nk]' type='filter' w='15223' x='0' y='10580'>
                          </zone>
                          <zone h='10580' id='9' mode='radiolist' name='CompareRetailers_cat' param='[greenplum.41871.617679803200].[none:country:nk]' show-all='false' type='filter' w='15223' x='0' y='0'>
                          </zone>
                          <zone h='7102' id='25' mode='checkdropdown' name='CompareRetailers_cat' param='[greenplum.41871.617679803200].[none:retailername:nk]' type='filter' values='relevant' w='15223' x='0' y='17826'>
                          </zone>
                          <zone h='8405' id='26' mode='checkdropdown' name='CompareRetailers_cat' param='[greenplum.41871.617679803200].[none:taxonomiccolour:nk]' type='filter' values='relevant' w='15223' x='0' y='24928'>
                          </zone>
                          <zone h='10145' id='24' name='CompareRetailers_cat' param='[greenplum.41871.617679803200].[none:price_currentdaymode:qk]' show-null-ctrls='false' type='filter' values='relevant' w='15223' x='0' y='33333'>
                          </zone>
                          <zone custom-title='true' h='11836' id='32' mode='slider' param='[Parameters].[Parameter 3]' type='paramctrl' w='15223' x='0' y='43478'>
                            <formatted-text>
                              <run>Low stats threshold</run>
                            </formatted-text>
                          </zone>
                        </zone>
                      </zone>
                    </zone>
                  </zone>
                </zone>
              </zone>
            </zone>
          </zone>
          <zone h='44686' id='36' name='CompareRetailers_subcat' w='100000' x='0' y='55314'>
          </zone>
          <zone h='55314' id='37' name='CompareRetailers_cat' w='84777' x='15223' y='0'>
          </zone>
        </zone>
      </zones>
    </dashboard>
    <dashboard lock-updates='true' name='Retailer view'>
      <style>
        <style-rule element='dash-container'>
          <format attr='border-style' id='dash-zone_38' value='solid' />
          <format attr='border-width' id='dash-zone_38' value='3' />
          <format attr='border-width' id='dash-zone_39' value='3' />
          <format attr='border-style' id='dash-zone_39' value='solid' />
          <format attr='border-color' id='dash-zone_38' value='#898989' />
          <format attr='border-color' id='dash-zone_39' value='#898989' />
        </style-rule>
        <style-rule element='parameter-ctrl'>
          <format attr='font-family' value='Arial' />
          <format attr='border-width' value='4' />
          <format attr='background-color' value='#ffffff' />
          <format attr='border-color' value='#000000' />
          <format attr='color' value='#000000' />
          <format attr='border-style' value='none' />
          <format attr='font-size' value='8' />
        </style-rule>
        <style-rule element='parameter-ctrl-title'>
          <format attr='color' value='#000000' />
          <format attr='font-size' value='8' />
        </style-rule>
      </style>
      <zones>
        <zone h='100000' id='2' type='layout-basic' w='100000' x='0' y='0'>
          <zone h='100000' id='22' param='horz' type='layout-flow' w='100000' x='0' y='0'>
            <zone h='100000' id='20' param='horz' type='layout-flow' w='99700' x='0' y='0'>
              <zone h='100000' id='18' param='horz' type='layout-flow' w='99700' x='0' y='0'>
                <zone h='100000' id='16' param='horz' type='layout-flow' w='99700' x='0' y='0'>
                  <zone h='100000' id='14' param='horz' type='layout-flow' w='99700' x='0' y='0'>
                    <zone h='100000' id='7' param='horz' type='layout-flow' w='99700' x='0' y='0'>
                      <zone h='100000' id='5' param='horz' type='layout-flow' w='99700' x='0' y='0'>
                        <zone h='100000' id='3' type='layout-basic' w='99700' x='0' y='0'>
                          <zone h='8448' id='8' name='Count vs SubCategory' param='[greenplum.41871.617679803200].[none:category:nk]' type='filter' w='17628' x='0' y='19071'>
                          </zone>
                          <zone h='19071' id='9' name='Count vs SubCategory' param='[greenplum.41871.617679803200].[none:country:nk]' type='filter' w='17628' x='0' y='0'>
                          </zone>
                          <zone h='10374' id='25' name='Count vs SubCategory' param='[greenplum.41871.617679803200].[none:retailername:nk]' type='filter' w='17628' x='0' y='27519'>
                          </zone>
                          <zone h='10373' id='26' name='Count vs SubCategory' param='[greenplum.41871.617679803200].[none:taxonomiccolour:nk]' type='filter' w='17628' x='0' y='37893'>
                          </zone>
                          <zone h='11854' id='24' name='Count vs SubCategory' param='[greenplum.41871.617679803200].[none:price_currentdaymode:qk]' type='filter' w='17628' x='0' y='48266'>
                          </zone>
                          <zone h='14493' id='31' name='Count vs SubCategory' pane-specification-id='0' param='[greenplum.41871.617679803200].[usr:Calculation_2730813141847173:nk:1]' type='color' w='17628' x='0' y='85507'>
                          </zone>
                          <zone h='25387' id='32' param='[Parameters].[Parameter 3]' type='paramctrl' w='17628' x='0' y='60120'>
                            <formatted-text>
                              <run>Low stats threshold</run>
                            </formatted-text>
                          </zone>
                          <zone h='100000' id='39' param='vert' type='layout-flow' w='82072' x='17628' y='0'>
                            <zone h='7556' id='23' name='Count vs SubCategory' param='[greenplum.41871.617679803200].[none:facetbrand:nk]' type='filter' w='81472' x='17928' y='1186'>
                            </zone>
                            <zone h='45036' id='28' name='Ratio vs SubCategory' w='81472' x='17928' y='8742'>
                              <layout-cache minheight='141' type-h='scalable' type-w='cell' />
                            </zone>
                            <zone h='45036' id='11' name='Count vs SubCategory' w='81472' x='17928' y='53778'>
                              <layout-cache minheight='141' type-h='scalable' type-w='cell' />
                            </zone>
                          </zone>
                        </zone>
                      </zone>
                    </zone>
                  </zone>
                </zone>
              </zone>
            </zone>
          </zone>
        </zone>
      </zones>
    </dashboard>
  </dashboards>
  <windows show-side-pane='false'>
    <window class='schema' source-height='-1' />
    <window auto-hidden='0' class='worksheet' maximized='0' name='Count vs Brand'>
      <cards>
        <edge name='left'>
          <strip size='300'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='31'>
            <card type='columns' />
          </strip>
          <strip size='31'>
            <card type='rows' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card mode='compact' param='[Parameters].[Parameter 2]' type='parameter' />
            <card param='[greenplum.41871.617679803200].[usr:Calculation_5270812182716952 1:qk]' show-null-ctrls='false' type='filter' />
          </strip>
        </edge>
      </cards>
      <highlight>
        <color-one-way>
          <field>[greenplum.41857.610422361100].[none:taxonomiccolour:nk]</field>
          <field>[greenplum.41858.803400914400].[none:facetbrand:nk]</field>
          <field>[greenplum.41858.803400914400].[none:sellers:nk]</field>
          <field>[greenplum.41863.764809224500].[none:facetbrand:nk]</field>
          <field>[greenplum.41863.764809224500].[none:price_currentdaymode:qk]</field>
          <field>[greenplum.41863.764809224500].[none:sellers:nk]</field>
          <field>[greenplum.41863.764809224500].[pcto:cnt:Number of Records:qk]</field>
          <field>[greenplum.41863.764809224500].[pcto:usr:Calculation_1730812182851096:qk]</field>
          <field>[greenplum.41871.617679803200].[usr:Calculation_2730813141847173:nk:1]</field>
          <field>[postgres.41855.511457280100].[none:category:nk]</field>
          <field>[postgres.41855.511457280100].[none:country:nk]</field>
          <field>[postgres.41855.511457280100].[none:price_currentdaymode:qk]</field>
          <field>[postgres.41855.511457280100].[none:retailername:nk]</field>
          <field>[postgres.41855.511457280100].[none:subcategory:nk]</field>
        </color-one-way>
      </highlight>
      <viewpoint>
      </viewpoint>
    </window>
    <window auto-hidden='0' class='worksheet' maximized='0' name='Ratio vs Brand'>
      <cards>
        <edge name='left'>
          <strip size='300'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='31'>
            <card type='columns' />
          </strip>
          <strip size='31'>
            <card type='rows' />
          </strip>
        </edge>
      </cards>
      <highlight>
        <color-one-way>
          <field>[greenplum.41858.803400914400].[none:subcategory:nk]</field>
          <field>[greenplum.41863.764809224500].[none:facetbrand:nk]</field>
          <field>[greenplum.41863.764809224500].[none:subcategory:nk]</field>
          <field>[greenplum.41863.764809224500].[usr:Calculation_1730812182851096:qk]</field>
          <field>[greenplum.41863.764809224500].[usr:Calculation_2730813141847173:nk:1]</field>
          <field>[greenplum.41871.617679803200].[none:price_currentdaymode:qk]</field>
        </color-one-way>
      </highlight>
      <viewpoint>
        <floating-toolbar-visibility value='1' />
      </viewpoint>
    </window>
    <window auto-hidden='0' class='worksheet' maximized='0' name='Count vs SubCategory'>
      <cards>
        <edge name='left'>
          <strip size='253'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='31'>
            <card type='columns' />
          </strip>
          <strip size='31'>
            <card type='rows' />
          </strip>
        </edge>
      </cards>
      <highlight>
        <color-one-way>
          <field>[greenplum.41857.610422361100].[none:taxonomiccolour:nk]</field>
          <field>[greenplum.41858.803400914400].[none:sellers:nk]</field>
          <field>[greenplum.41863.764809224500].[none:facetbrand:nk]</field>
          <field>[greenplum.41863.764809224500].[none:subcategory:nk]</field>
          <field>[greenplum.41863.764809224500].[none:taxonomiccolour:nk]</field>
          <field>[greenplum.41863.764809224500].[usr:Calculation_2730813141847173:nk:1]</field>
          <field>[postgres.41855.511457280100].[none:category:nk]</field>
          <field>[postgres.41855.511457280100].[none:country:nk]</field>
          <field>[postgres.41855.511457280100].[none:facetbrand:nk]</field>
          <field>[postgres.41855.511457280100].[none:price_currentdaymode:qk]</field>
          <field>[postgres.41855.511457280100].[none:retailername:nk]</field>
        </color-one-way>
      </highlight>
      <viewpoint>
      </viewpoint>
    </window>
    <window auto-hidden='0' class='worksheet' maximized='0' name='Ratio vs SubCategory'>
      <cards>
        <edge name='left'>
          <strip size='300'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='31'>
            <card type='columns' />
          </strip>
          <strip size='31'>
            <card type='rows' />
          </strip>
        </edge>
      </cards>
      <highlight>
        <color-one-way>
          <field>[greenplum.41858.803400914400].[none:subcategory:nk]</field>
          <field>[greenplum.41863.764809224500].[none:facetbrand:nk]</field>
          <field>[greenplum.41863.764809224500].[usr:Calculation_2730813141847173:nk:1]</field>
          <field>[greenplum.41871.617679803200].[usr:Calculation_2730813141847173:nk:1]</field>
        </color-one-way>
      </highlight>
      <viewpoint>
        <floating-toolbar-visibility value='1' />
      </viewpoint>
    </window>
    <window auto-hidden='0' class='worksheet' maximized='0' name='CompareRetailers_subcat'>
      <cards>
        <edge name='left'>
          <strip size='300'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card pane-specification-id='2' param='[greenplum.41871.617679803200].[usr:Calculation_2730813141847173:nk:1]' type='color' />
            <card pane-specification-id='2' param='[greenplum.41871.617679803200].[usr:Calculation_1730812182851096:qk:2]' type='size' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='31'>
            <card type='columns' />
          </strip>
          <strip size='31'>
            <card type='rows' />
          </strip>
        </edge>
      </cards>
      <highlight>
        <color-one-way>
          <field>[greenplum.41858.803400914400].[none:subcategory:nk]</field>
          <field>[greenplum.41863.764809224500 (copy)].[none:retailername:nk]</field>
          <field>[greenplum.41863.764809224500 (copy)].[none:subcategory:nk]</field>
          <field>[greenplum.41863.764809224500 (copy)].[none:taxonomiccolour:nk]</field>
          <field>[greenplum.41863.764809224500].[none:facetbrand:nk]</field>
          <field>[greenplum.41871.617679803200 (copy)].[none:category:nk]</field>
          <field>[greenplum.41871.617679803200 (copy)].[none:retailername:nk]</field>
          <field>[greenplum.41871.617679803200 (copy)].[none:subcategory:nk]</field>
          <field>[greenplum.41871.617679803200].[usr:Calculation_2730813141847173:nk:1]</field>
        </color-one-way>
      </highlight>
      <viewpoint>
        <floating-toolbar-visibility value='1' />
      </viewpoint>
    </window>
    <window auto-hidden='0' class='worksheet' maximized='0' name='CompareRetailers_cat'>
      <cards>
        <edge name='left'>
          <strip size='300'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card pane-specification-id='2' param='[greenplum.41871.617679803200].[usr:Calculation_2730813141847173:nk:1]' type='color' />
            <card pane-specification-id='2' param='[greenplum.41871.617679803200].[usr:Calculation_1730812182851096:qk:2]' type='size' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='31'>
            <card type='columns' />
          </strip>
          <strip size='31'>
            <card type='rows' />
          </strip>
        </edge>
      </cards>
      <highlight>
        <color-one-way>
          <field>[greenplum.41858.803400914400].[none:subcategory:nk]</field>
          <field>[greenplum.41863.764809224500 (copy 2)].[none:category:nk]</field>
          <field>[greenplum.41863.764809224500 (copy 2)].[none:retailername:nk]</field>
          <field>[greenplum.41863.764809224500 (copy 2)].[none:subcategory:nk]</field>
          <field>[greenplum.41863.764809224500].[none:category:nk]</field>
          <field>[greenplum.41863.764809224500].[none:facetbrand:nk]</field>
          <field>[greenplum.41863.764809224500].[none:price_currentdaymode:qk]</field>
          <field>[greenplum.41863.764809224500].[none:retailername:nk]</field>
          <field>[greenplum.41863.764809224500].[none:taxonomiccolour:nk]</field>
          <field>[greenplum.41871.617679803200 (copy)].[none:category:nk]</field>
          <field>[greenplum.41871.617679803200 (copy)].[none:retailername:nk]</field>
          <field>[greenplum.41871.617679803200 (copy)].[none:subcategory:nk]</field>
          <field>[greenplum.41871.617679803200].[usr:Calculation_2730813141847173:nk:1]</field>
        </color-one-way>
      </highlight>
      <viewpoint>
        <floating-toolbar-visibility value='1' />
      </viewpoint>
    </window>
    <window auto-hidden='0' class='dashboard' maximized='1' name='Retailer view'>
      <active id='9' />
      <zones>
        <zone mode='dropdown' name='Count vs SubCategory' param='[greenplum.41871.617679803200].[none:category:nk]' type='filter' />
        <zone mode='radiolist' name='Count vs SubCategory' param='[greenplum.41871.617679803200].[none:country:nk]' show-all='false' type='filter' />
        <zone mode='checkdropdown' name='Count vs SubCategory' param='[greenplum.41871.617679803200].[none:retailername:nk]' type='filter' values='relevant' />
        <zone mode='checkdropdown' name='Count vs SubCategory' param='[greenplum.41871.617679803200].[none:taxonomiccolour:nk]' type='filter' values='relevant' />
        <zone name='Count vs SubCategory' param='[greenplum.41871.617679803200].[none:price_currentdaymode:qk]' show-null-ctrls='false' type='filter' values='relevant' />
        <zone name='Count vs SubCategory' pane-specification-id='0' param='[greenplum.41871.617679803200].[usr:Calculation_2730813141847173:nk:1]' type='color' />
        <zone custom-title='true' mode='slider' name='' param='[Parameters].[Parameter 3]' type='paramctrl' />
        <zone mode='checkdropdown' name='Count vs SubCategory' param='[greenplum.41871.617679803200].[none:facetbrand:nk]' type='filter' values='relevant' />
        <zone name='Ratio vs SubCategory'>
          <viewpoint>
            <zoom type='entire-view' />
          </viewpoint>
        </zone>
        <zone name='Count vs SubCategory'>
          <viewpoint>
            <zoom type='entire-view' />
          </viewpoint>
          <highlight>
            <color-one-way>
              <field>[greenplum.41863.764809224500 (copy)].[usr:Calculation_2730813141847173:nk:1]</field>
            </color-one-way>
          </highlight>
        </zone>
      </zones>
    </window>
    <window auto-hidden='0' class='dashboard' maximized='0' name='Competitive view'>
      <active id='37' />
      <zones>
        <zone mode='dropdown' name='CompareRetailers_subcat' param='[greenplum.41871.617679803200].[none:category:nk]' type='filter' />
        <zone mode='radiolist' name='CompareRetailers_cat' param='[greenplum.41871.617679803200].[none:country:nk]' show-all='false' type='filter' />
        <zone mode='checkdropdown' name='CompareRetailers_cat' param='[greenplum.41871.617679803200].[none:retailername:nk]' type='filter' values='relevant' />
        <zone mode='checkdropdown' name='CompareRetailers_cat' param='[greenplum.41871.617679803200].[none:taxonomiccolour:nk]' type='filter' values='relevant' />
        <zone name='CompareRetailers_cat' param='[greenplum.41871.617679803200].[none:price_currentdaymode:qk]' show-null-ctrls='false' type='filter' values='relevant' />
        <zone custom-title='true' mode='slider' name='' param='[Parameters].[Parameter 3]' type='paramctrl' />
      </zones>
    </window>
  </windows>
  <thumbnails>
    <thumbnail height='384' name='Count vs Brand' width='384'>
      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
      g/Ov/wAAAABJRU5ErkJggg==
    </thumbnail>
    <thumbnail height='384' name='Ratio vs Brand' width='384'>
      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
      rkJggg==
    </thumbnail>
    <thumbnail height='384' name='Count vs SubCategory' width='384'>
      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
    </thumbnail>
    <thumbnail height='384' name='Ratio vs SubCategory' width='384'>
      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
      ATgSgOqKavUecL32FlUHzvMV5+uzYxfo9oEp2lu+S4vX5cg/vKO++9C7bds2vfDCC7Vua9as
      WerWrZvy8vI0e/ZsSZK/qkKV+krTp7+hJ598UuHh4dq4caMWLVpU67rt27fXgw8+KMuytGTJ
      Eq1bt67W+IABA3TjjTdKkh599FFlZWXVGr/22ms1ePBgSdK0adPqbOcDDzyghIQEZWVl6dFH
      H6015nK59Oyzz0qS1q1bpyVLltQa79y5s377299KkhYvXqwNGzbUGh82bJgmTpwoSZozZ44O
      HjxYa/zXv/61UlNTVVFRoRkzZtRZ25w5cxQfH6/MzEw98cQTtcYGDhyoG264QZL0yCOPaN++
      fbXGr7vuOg0aNEi2beu222477Xbv3btXjz32WK0xt9utZ5555rTbfe655+ree++VJC1atEhp
      aWmn3e7Zs2crLy+v1vjNN9+siy66SOXl5Zo5c2adtT300EOKi4vTzp07NX/+/FpjkZGRevzx
      xyVJq1ev1vLly2uNt1BbdVLNv/cnGW8r5/DuWuPnJ6Sq1y8GSJJWbPyryipLao0P7nmlOpzd
      WWWVJVqx8a911nZV/6mKCI9SzuHd+iTj7Zqvl8el9GmvqnXr1po7d64kafny5Vq9enWt6/bp
      00dTp06VJM2fP187d+6sNT5u3DiNHDlSkjRjxgxVVFTUGj/V/ei7vr0fpaWlnfZ+JOmU96MY
      ddI56idJem/LazpSXPvfLKXLMHVt37vm+p/Ml23btcZ/lXytWkfH60hxnt7b8lqtMcuydM2g
      mu/vXQe2Kn33WknSB/uiFfduS40fP16XXHLJabe7s/5NUWqjwrKjWpm+uM52Txx4p9xuj/bm
      Zygtc02tsbOiYjWqb839JH33Wu06sLX2bbc9X6ndLqmz3R/mtFLs31uE7PHjX70fSQ4FoGXH
      Xhpw/h4d2JR78kyr5o8tSS7Jkq3ysjLtzMgIXKS0tFTZ2dm1bquyslKS5PV664xJCnwzlZWV
      1Rl3uU4e5nD8+PE640ePHg2cLigoqDNeUnLyDp6Tk1PnG7eqqirw9/ev63afTNuptqtFixa1
      1vH98WPHjgVO5+Xl1RkvKyuTVLP9p/q6VFfXxLeiouInbfepbtvr9Uo69XZ7PCe/pUpKSuqM
      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
    </thumbnail>
    <thumbnail height='384' name='CompareRetailers_subcat' width='384'>
      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
    </thumbnail>
    <thumbnail height='384' name='CompareRetailers_cat' width='384'>
      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
      k6+ZzebTzzUOCgpS8h2Ij4/ntttuO71Oo3fv3koa9dntdsLDw3nnnXe488476d27Nw0NDZ3a
      1u8KQH5+Pjt27CA3N5etW7cyefJkn76/2WxmwIABp8dKHQ4H+fn5Ps04xWKxcOWVV7J161Zq
      a2uZMmWKkpzAwECmTp1Kr169yMnJ4eKLL1aS09LSwokTJzh69CiXXHKJsoNm7969mTt3LnV1
      dSxbtkzZbKOqqipaW1u5/vrrlYxjw8kCMH36dHr37o3b7VayEvgUXdcZMmQIMTExSubnO51O
      cnJyCA8P5+WXXyYrK0tZQbPb7eTk5HD8+HGioqKUfJ6AgAAiIyPZu3cvx44do7KyUsnJ0+jR
      o5kzZw4LFixg7dq1hIeHd3r6tN8NARUVFTFlyhSioqKUTZvUdZ3S0lJGjRpFeno6e/bsUZaz
      ZcsWwsLCaG5uprCwUNlshlM3ZTVNU3alERkZSVpaGuHh4Xg8HmWfpbq6mpKSEi699FKGDx+u
      7ArAarVSVVVFc3MzxcXF3HTTTT7P0HWdlStXMn78eJqbm9mwYQN33nmnTzMMw8Dj8bBmzRrm
      zp1LSEiIkumzhmHQ0tKC2+3mzjvvpKmpSdkVQGBgIGFhYSQmJmK1WmlsbFSSYxgGLpcLt9uN
      rutKvmvBwcGnp5b+5S9/OaNt/e4KICsrC4vFwvr162lublaSYTKZmDZtGrt27eKTTz5Rdsbs
      drupq6vj/vvv56677mL//v1Kcux2O01NTfzmN7/hJz/5CRs2bFCSAydvlG3YsIG6ujpcLpeS
      DMMwKCws5MCBA8yfPx9VHdHLysq48cYb+dGPfkRtba2SjFM3MFtaWvB6vbjdbp9nOBwO5s+f
      z9atW3nppZd45ZVXlJzUBAcHn542PX78eEJDQykqKvJ5Dpw8O7/99tsZNGgQmZmZytpNBAYG
      Mnz4cFJTUxkwYAADBgxQknOKy+U6o98bv7sCyMzMPL0IaPbs2cpyvF4vKSkpBAQEKJtmGBgY
      yOjRo/n973+Ppmnce++9SnJCQ0MJDw/nySefxG638/Of/1xJjs1mQ9M00tLSGDlyJHv37uWy
      yy7zeU5FRQXjxo0jODiYY8eOKVsHMG7cOBYuXIjH41E2C0jTNObOncuiRYtwOp3ccsstPs8I
      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
    </thumbnail>
    <thumbnail height='384' name='Retailer view' width='384'>
      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
      A+eKD3JoBgKXAAAAAElFTkSuQmCC
    </thumbnail>
    <thumbnail height='384' name='Competitive view' width='384'>
      iVBORw0KGgoAAAANSUhEUgAAAYAAAAGACAYAAACkx7W/AAAACXBIWXMAAAsTAAALEwEAmpwY
      AAAgAElEQVR4nOzdd3gUVdvA4d/sbjbJpndSIQktIXSkhNC7oAjSpNhQELCiyAsqoAiIoAgo
      VUBAOtIFpAekk1BCCRAgCSSEFNL77sz3RySvvATL505Acu7rsuxm9jwzE5hnz5lznpEURVEQ
      BEEQKhzNo94BQRAE4dEQCUAQBKGCEglAEAShghIJQBAEoYLSlfWmoigosgyShEYjcoQgCMKT
      qIyru8LPy+cRGtqM0Gat2H7o1N9q0FSYzYwvv6FQNtMeCoIgCKp4oAeQlRjD8LGTWPvzfjKj
      j3DoZARBHpZ8NeNbLB28GPvRKH6YNYnug//DvvULadGlD+vmzCVfm43Wxoe2dRz4ZOJkfKoF
      c+jgXkx56Vjb2PPOmPEc37oM+5pt6Bga/CiOVRAEQfidB3oAWalp2LhXo2ndanTsPYjP3n2d
      T95+HY/qzSlKimLS1wvZtnY5d9Lz2PvLzyTeSeWnFYtp1qYnW5fNRmPvjY2tC8HV3Pjhh8U0
      atUD+e511mzdxZSp3+Dl5fYojlMQBEH4Hw/0AOxdXclOiOHoucvcOLSRHedyyMrLIbB6TWwy
      Irmcm42F3pL8nGyy0tIBsLS2pmmrZjg7aHF188LS0hbPSk7YO3ryfK9ONPQppMcrI/GoGkpQ
      ZddyP0hBEAThQQ8mAK9A5n/7KW+/3BudjTNfTJ+LJr0hYz57DwtbV+YuGstum0w+/WA4DgYP
      bG0MVK8VjIVGQ7WgWji4eVK9so5FP26lTkhDLHUaajVph6OUT7+XXkYrSY/iOAVBEIT/IT2s
      FIQsy4CERiP997UkoZGkkllCivLQGUKyLCNJEtJvF/tp495l3o8HOB51ElcbC3WORBAEQfhb
      HpoAzCkz4y5avQFbg5XaoQRBEIS/6KEJQFEUrl+/zrp160hNTSUwMJB+/frh5ORU3vsoCIJQ
      oZlMJkwmE7du3cLNzQ07OzuztFtmAlAUhR07dnD8+HFee+01PDw8iI6OZuHChbzzzjtUrVrV
      LMEFQRCEP7dy5UoMBgPbt2/Hx8eHjz76CK1W+4/bLXMQPzMzk3379jFu3Dh8fX3R6/XUqVOH
      yZMn891332EymUq3NRUXkZR0m8zsHIxFBRQWFWMyFpFfWPSPd04QBEGA9PR0oqOjef7555F+
      uw9rDmWWgggPD6dz584PZBg7OztcXFxITU3Fw8MDFJlJH75LgYMrJ49f4KMh7YnVhtDELYtN
      lyTGvPq0WXZSEAShIuvbty+7d+/Gy8uL559/3izf/uEhCSAvLw93d/cyP2BpaUlhYSEAClCj
      TnUOnb5GakoaxUYZRauU/EA8ZkYQBMEsrl69yo4dO8jNzaWgoICgoCCztFvmEFDTpk05ePDg
      A++bTCYSExNLvv0DmIpYvn43PXv3wVpjRLK04/Cv+9n88zYQ0/0FQRDM4vTp0wwYMICaNWuS
      n5+P0Wg0S7tl9gCqVKmCRqNhx44ddOzYEa1WS2FhIfPmzaN9+/ZYWloCIGktmTbpY05H3+Sr
      aZOpXq8+hcad6B1b4edfwyw7KAiCUNG1adOGKVOmYDKZ6NOnDzpdmZfuv+2h00BNJhMrV64k
      MjISrVaLLMt0796dVq1amSWwIAiC8OcOHDiAXq/n1KmSysyVK1fmmWeeMUup/j9dCHZv/qmF
      hUXpyl5BEAShfKSkpHDs2DGqVKmCwWDAYDBQqVIls1yP/7QfodVqzXbHWRAEQfh73NzcSEhI
      4MKFCwQEBFCpUiU8PDzUTQDFxcUsW7aMM2fOlAbq1q0bHTp0ED0BQRCEctS1a1dOnz5NQUEB
      Tk5OZrsGP/SRkNOnT6dx48a8+uqrSJJEcXEx33//PXl5eTz33HNlNhZ79jC3cCesbjWz7Jwg
      CMLfUVhYyIYNG+jXr98T9UU1JiaG48ePY21tTVJSEiEhIWZpt8y7CNeuXcPCwoJmzZrRs2dP
      HB0dmTRpEq+//jrh4eEUFBT8tqXC8SMHMJpkjhw9yq3YKK7G3eZo+C5ik+6aZQcFQfh3UxSF
      uLg4rl+/zsyZM4mMjFQtllarZfv27UycOJFp06Zx6dIl1WKVp4sXL/LBBx8wduxYCgoKzDYN
      tMwEcOLECcLCwti8eTObNm0iMzOTSZMmkZCQgLe3N3fu3Cnddu3KHygyKqxesZr8IhO7Nyxh
      ybbjVHJxMMsOCoLw77du3TrOnTuHTqdj9+7dqsXRarWMHz+etm3b0rBhQ7MVTXvU2rRpw8cf
      f8zIkSMJCQkx2zTQMhOAnZ0dWVlZ+Pr6lt4AdnZ2xs7Ojvz8fKytrUu3lQEFBVkuqQ+UeDsR
      xSih1/3zKUqCIDwZnJ2d2bJlCzVr1sRgMKgWx2g0MmPGDGbMmMGaNWu4efOmarHy8/PZv38/
      P/30EzNnzqSoSL36ZwaDgddeew1XV1ezTP+8p8yWWrVqxY4dO2jatCmrV6/mrbfe4ueff0an
      05GWloaLi0vptm621owYMYzw09Gg0fHyiI9wy7vKzwejzLaTglCR5OXlkZOTQ2RkpNmKfv2R
      /Px88vPzVWtfkiT69OlDq1atMBgM9O7dW7VYxcXF+Pv706pVK0aMGEFCQoJqsSIiIkhPT+fw
      4cO4uroSHx+vWqwtW7aQmJiIm5sb586dU3clsJ2dHd26dWP8+PG8/PLLtGnThmvXrjF27Fg+
      /PDD300LlRgz+TvyCwqwtLRCI4GChNQtTJQCElRXXFxMSkoK165dw8bGhgYNGqgWq6ioCEVR
      iImJISAg4L5esDllZ2czadIkHB0dKSgoIDs7W7XFl1FRUURERHDs2DH0ej3Tpk0rXeVvToqi
      sGLFClJSUnB2diY8PJz//Oc/Zo8DYG1tTe3atXF2dmbBggW88847qsQB8PPzY+nSpbRr145L
      ly7RrVs31WL5+/uzYcMGBgwYwNmzZ9UtBidJEu3ataNq1aps3LiRzMxM/Pz8mDRpEg4O94/t
      SxrNfV066bd/Pzn334XH1ZYtW7C2tmbbtm24u7tTq1Yt1S5g33zzDTVq1GDv3r3UqFGDESNG
      mD0OlCQaS0tLEhISaN++varDCrGxsVhbW+Pv74+lpSX5+fmqnD8oOS4XF5f7HhWrBkmSyMzM
      ZPPmzTz11FPY2NioFsvX15fu3btjMplo27Yt9vb2qsUKDQ2lWrVq7Nu3j2bNmpltGOgPW6lc
      uTLvvvsu48eP55VXXnng4i8Ij5JOp2Pv3r20bt2agoICs46N/p6iKBQVFXHkyBEGDRr0u1lw
      5mdvb0/jxo15//33MRgMBAcHqxaradOmJCYm0qNHD5ycnFS9YTpw4EDy8/M5deoUgwYNUi1O
      fn4+iYmJBAQEEBoayuHDh1WLdeHCBW7cuEFsbCwRERGqDjetWLGCmJgYCgsL2bdvH8XFxWZp
      9w9vJSuKQnR0NImJiQQFBeHp6flEza0V/t3atm2LjY0Nfn5+BAQEqDZefq9HnJ+fj4WFBWFh
      YarEKSwsZOLEiURGRlKrVi1yc3NxcXHB29vb7LFiYmKYMGECBoOB5ORk4uPj6dWrl2rfmA8d
      OkSDBg1YtGgRO3bsYPDgwarEsbS0JDMzk5MnT5KYmMgrr7yiShwo+QKSk5NDUVERkiSh1+tV
      i+Xi4sKaNWsYMGAAJ0+eNNsQ0ENrAd26dYsvv/yS6tWr4+vrS1RUFEajkdGjR6s2/ikIf8fu
      3btZsWIFwcHB7N+/Hz8/P7744guzPrdaURRWr17N4sWLadiwISaTCX9/f4YPH262GL+PVVxc
      TEREBBcvXiQgIIDWrVur8qVLlmViY2PJz8/H1tYWRVHum/VnToqiMGPGDOzt7fH39yciIoIP
      P/zQ7HGgpHbZ2rVrcXZ25qmnnjLrqtn/lZeXx/79+4mJiaF169bUqVNHtVhFRUVs374dLy8v
      fH198fT0NEu7ZfYAjEYjU6dOZfz48bi6ugLQvXt3zpw5w4wZMxgzZsxDD/RePhE9BUFtiYmJ
      fPLJJ1SpUoXCwkJq167NrVu3zJ4A6tWrx5tvvomfnx+SJD30YUn/1L0V91u3bqVXr14cPHgQ
      g8FAkyZNzB5Lo9GQnp7OvHnzyMzMxNLSksWLF6tW9ys0NJT9+/dTq1YtGjVqpEoMKDmuJk2a
      sHv3bubOncuYMWNUOX8Aubm5nDp1qnSIUFEU1a57mzZtIjo6GpPJxM6dO9V9JvDRo0cJDQ0t
      vfjfU7duXXJycsjKyvrtHYUFc6ZTUGxizpy5XDhzhBHDhvHWO/8hI888Y1SC8DDPPvssCxYs
      4P3336dp06akpaVRs2ZNs8ZQFIWoqCjS0tI4ceIEp06dUnW6X3FxMXZ2dvj7+1O1alVyc3NV
      i3X79m1eeuklmjVrRrt27VSNVVhYSJs2bViyZAlpaWmqxTGZTEyaNInw8HCGDh1K7dq1VYvl
      6urKiy++iKOjI7NnzyYzM1O1WFlZWfj4+KDRaNRfBxAbG0vVqlUfeF+SJNzc3Lh7979lHq5c
      PI8sQ/TFy1w4c5a0AoWgmtWgHOYvCxXbvSXxRUVFHDx4kJdeegkLCwuzxtBqtfTu3RtPT0/2
      79+PXq//3Rcg83NwcKBhw4ZMnTqVpKQkWrRooVqsZs2akZycjJWVFVeuXFF1xsypU6eIjY3l
      mWeeITY2VrU4Wq2Wzz77jPbt2/P1118TERGhWqybN2+yceNGOnTowOLFi3F0dFQtVp8+fUhL
      S+PUqVP07dtX3VlAgYGBXL58+YH3FUUhOTn5voVgBUVF5BXkcTc9DbcqNRjUpwcRBzZy8nyM
      WXZQEB5m586d9OzZk6ZNm5ptTLQsiqJw/vx5nn32WcLCwjh//rxqsWRZ5sKFCxQVFXHmzBlV
      v1VaWloSHR1NdHQ0NWvWNFt5gbKEhIRw8uRJ7O3tCQwMVC2OyWRi6dKlZGZmMmPGDEJDQ1WL
      5eLiQnJyMt9//z2ff/65qlN2w8PDCQkJoXv37uzcudNsEx60EyZMmPC/b3p5eVGlShWsrKwe
      +ECDBg1wcHAoHetq2qwFtrY2hLVoQZXKflTxD6Rz12fw962EhU48R0BQT05ODjdu3ODUqVOk
      pqbSvn171S5iycnJLFu2jNOnT9OhQwf8/f1ViXP37l2uXbvGmDFj8PPz49y5c2Yf1rrnwIED
      VK1alcGDB7N//36Cg4PL/DtvDnq9npMnT+Li4kKVKlVUS9iSJJGQkEBkZCSSJOHh4aHa/PyI
      iAiqVKnC0KFDSUpKws7ODmdnZ1Vi/fLLL7Rr1w5/f38OHjxotrUAZf5t0Wq1ZXZnJEn6nwOU
      cHYteUC8l2el370vZgkJ6gsLC8PKygqtVkuDBg1Um4YnSRItWrTg5s2bqt2UvcfBwYHY2Fgm
      T55MSkoKH3zwgWqxPD09WbVqFbdu3eLOnTuqDgFt2rSJRo0a4eXlxe7du1VbtV1QUMCdO3cI
      DAwkNDSUI0eOqFZ6olq1akyYMIFjx46RlZVF9+7dVYkD0LNnT77++muMRiMDBgww2816UbFN
      +Nc6ePAg4eHh2Nra8uOPP2IymVSJoygKCxYsoG3btoSEhPDDDz+oEgdK5pYPGDAAk8lEly5d
      VFkDcE+NGjVo1KgRer2ebt26mf3+ye85OTlx6NAhfvnlF2xtbVWLY2lpSXZ2NocOHWLhwoUE
      BQWpEufWrVtERUXRqVMnfH19adeunWoLEaFk3UabNm3o3bu3WYcg1Rv0EwQVZWZmEh8fT506
      dahTpw5nz57FZDKZfQhIlmVOnz5NcnIyt2/fpqioCFmWzRrj93JyclixYgX9+vXj119/5fjx
      4zRt2lSVWAcPHkSr1dKxY0emT59O/fr1Vbs4e3l58cILL6DRaFSdBqooCtWrV6dt27bUqlVL
      teoFxcXF5ObmIkkSjo6OmEwmVQv3nT17lhdffBEHBwcOHz5stj/rIgEI/0onTpwgKSmJuLg4
      oqKicHFxUWX8X1EU7ty5Q1hYWOkNWbVm5uTl5XHhwgUKCwuRJAmtVqtqsrG1tSUyMhIHBwdy
      c3NVvQkcERGBRqPB19cXRVFUuzmr0WioXbs2O3fuZMuWLbRu3Zr27dubvXdz7x7Q8OHDCQoK
      4vz582zbto0xY8bg5eVl1lgAHTt2ZNy4cWg0Grp27ar+SmBBEMpXamoq27dvL11QpCgK7du3
      V20YSJZlIiIiiIuLo3nz5qrcmL23SOr69eskJycDJQ85V6vGkSzLbN26lWPHjuHs7ExgYCBX
      r15l9OjRZo919OhR8vPzadOmDYsWLaJGjRqkpKTQs2dPs8e6efMmq1evprCwkMqVKzNgwACz
      DDmVkQAUTuzayuez5yPpbBn7+SSa1PrvmgDZWMT61evp3r8/luIOgiAIf8BoNLJw4ULCw8Nx
      cHDAYDDg7OzMJ598oko8k8nE4cOHsbGxISAgAAcHB9LS0nBzczN7rPT0dD799NPS2UYuLi60
      a9eOgIAAs8eaPXs2dnZ2pbWbhg8frs4soNzUeF4YPITp368n80I4S1f/hFPPViz/aRuVAmoS
      GmjNkBEjMXhWo/h2FGdv3OHV197AoGQyb/4SXL298apWjyZVHVn8w4/YV6rKay/24ftFSynI
      uYtskukxaDhZNyJIMjrydBv1xgMFQXi0dDodb7zxBrm5uQwbNgydTseMGTNUiydJEvv37+fm
      zZs0bdqUoKAgmjdvrkosJycnvv7669LxeDVLQTg4OGBvb8/p06eRZRlZltVJABmJt7FwDeK5
      TmHQIZQXJYmls77AwmDF5NHvsejH79HpLEm4fIzpc5bRq1NT3hwznqraeArcnuLqL+vRxGSx
      /MRqanQaxMnVc8gxalg0bQI9XxyNfDuCBSvWc3PvEnr9Z84/PgBBEB5/zZo1Ky0A16tXL9Xi
      FBUVYTAYqFatGvXr11e1bAdwX2kGNeuf9evXj+zsbDw9PXF2dlbvgTDWDvZkJ8ZyNSGF+KPb
      2HoqhbxrezG518bSSotHJX9sDE74eDtSUJBDTn4RPp6VybkaQf3OYRj1d4jMKybudgojn+uN
      a/Y5Ym4nAVa8NWoEmoRTNH/6ZSRLZxa3qmuWgxAE4fElSRKhoaE0a9as9LVaLC0tCQ4OZt26
      dRQVFfHWW2+pFqs86fV6XFxc7qvCYA4PJAAnv5pM/OhVnm7REElnw9SZizl4+zBnLkVhZedK
      gWyBq2M++45eo5aXA4ePRzDwjfbUbTKct0YPwdIaGnQbwfsfDGdI77ZYGJxZtuwjTmzbiq2l
      FvvqTQhyA9+2fbHWioqhglARqP0ksN/Hefrpp3n66adLXz8JVq1aRZcuXcxeb+ihs4CMxmIk
      SYtWq0FRZIwmGYvfpomZjEbQaJBQSt63sGDx9Ams2HuGopQbDBo1naF9O2A0GpE0GrS/G6va
      uGIhIz/4lFV7j9I02NesByMIgvAkWrp0KeHh4fj6+lK1alU1ZwH9/xiLComJiUGjtyEwoDJa
      TdmZN/n2LfKKJSr7ej0x2VkQBEEtcXFxGI1G4uLiAHB2dqZu3bpmuX6WufJDkU2cvxBN7dq1
      /npDektqBv/59u6ePn997wRBECq45ORkdDodSUlJpe+Za8ZRmX0IRTFxNeYqssnIrZvxZGaX
      PCgiK/0ucfHxFBYbycnO5E5SInfTM1EUhZQ7t0m6k6LqcmhBEISK5qmnniIjI4MdO3awbds2
      9u/fb7a2y+4BmIrZv28nN6JOcLNAx82Yy0z+9GPGfjSJ4EBXit3rknVqNfrKTbh4PprZX4zi
      g/EL8LSXGTJmEo1qim/5giAI5nL+/HkGDx5McXEx169fN9sX7YffRZBlDu3ZiUGjYKuViU3O
      JtDflfT0LBITUzC4+jDxs89oUD8EC2tHrIxp5Gp0WFqIcX1BEARzql27Nunp6WzZsoXExESz
      tfsHt5ElfAJrEFy7Mc4OjmQlxZKQb0uzxnUozM1D0miQAI1OR3L8VQIatSLY1Yp9Jy6abecE
      QRAEqF+/PgANGzakRYsWZptAU+YQUH5+LkWKxDez5rDj5530ef0tGtetgb2tFZYOlRhVzxJr
      a7Cy0DKgXx8CAwMoMEncLa5N145tzbJjgiAIQoklS5ZQtWpVatased8TGf+pMqeB7t68mgyN
      J72faWWWIIIgCML/T1RUFBs2bMDPz4+AgACcnZ0JCQlRbxpoh+79/nHDgiAIwj+XnZ1N3bol
      ZXPS09PN+mwD8TwAQRCECkpU9BcEQaigRAIQBEGooEQCEARBqKBEAhAEQaigRAIQBEGooEQC
      EARBqKBEAhAEQaigRAIQBEGooMpcCSz8uxUUFJCZmfmod0MQhMecWAksCIJQQYkhIEEQhArq
      gSEgRVH++7QZSULzFyvO3fvMvWdVige+C4IgPN4e6AEUZd2ha4fWtG7dlrCwlqzYeOC+n5uK
      cvl6ynTy5fs/t/a7afy4eTvvDOhNbFqumvssmJlsKib6Sox4nrMgVDAP9gBMRi5cTGL38QPs
      Xz2PhatXU89Xx4zZCwlu1oHQKjLjPp+Mi38w8ef3EXMrlX5D3sXKYIPOSk/MhShy8nL5euJU
      Lt28y3tjPuLyobUcPnsDn8q1SbkZR0bmTYKbdKZvlyZMnDSFXKOWd8d8xMYFX5GZV4y1gxc5
      qbH4NWjPK882Z+Knn6PYuPPxJ2NwtrV6FOfpX02WTaSlpqLRWeLs5EBm+l2KFQ0uzo4U5uWQ
      cTeFqbMW8v3MSaSlpaHTW+HkYI8kSSiKQkZ6GkharKwN6DQKqWkZOLu4orfQkpl+FyManJ0c
      yMvOJr/IhIO9gbt3M7GxtcHGYENmRhoyFjg72YueYQW04tIKLqRdKH09KGgQQS5Bj3CPhHvK
      nAVkKr5N/+7duBp3h8WrVvDB8Feo1eFlFk0bReVpc7GxcaFGFXfOH5PRFqXx/cK1tPXIIl+2
      BSBy9xq+W7OPfu0DGPnRNBoYLnNHX5ceNT0Y+PU3LJ41gWGfzqJ9XW+sbFw5Hb6J7T+3Yu3K
      5Uye9T2vDnyDRUvmMOqTieReqs/F22Cbt4O5y+vy0bCe5XqCngTrF37NgehUbl2MZPioD5k/
      dz6uBksGvjmKb6eMwTfAn5tJJpbNnMzp2/lcO3eaWcvXE+huy7nDmxn37UZsTUnUCOtDbMR+
      XL19uJMLbzz7FN8s2YatkkeX/kOYOXYo9bsPxph4BhtXb3YfPMGUMe+weN0v2CjZ9HtnAp2e
      CsKcKcBkMiFJEhqNurezFEVBlmU0Go3qSUyWZRRFQavVqhrnXixA1fN3Mukke+P3lr7uWLmj
      qgng3u/qSTl/95hMJrP/+Stzr3UW3qz/aQ1+zjqS72aRm51PXlERIQ2b4uflgaXemsK8BH45
      dBwnJzcUo+m+z+fl5GBCQWvlTJ3gAACatu1M1cpeeHh70qBhMFYWcPTwXs5djcPFyQ3ZaMLa
      wZmGjerjZO9Io6b1sUUhLzuHQmMx7r418PNyMtuBVyQevr4oRdkU5OdSqNigl4rJlyzJSbpO
      pVodmTZlKgG+lfCs4osxL4u83BwycwoBOLZnD//5bDoTR40g924C0RejsbTQk3r1CjsOnOSD
      cZOYMnEUR48donqT1kwfMwSj5MyXX0ynTf0Aju7bhsHSGid7G86fuQhmHmUaNmwYW7duNW+j
      ZcjOziY0NJS0tDTVY+3YsYPXXntN9TgAo0ePZvny5eUSq7wcOXKEXr16lUusL7/8km+++aZc
      YnXv3p3Tp0+btc0HegCSTk/tunVxr1yN+d99xfh5axkx9hPmzP8R9yq1qBpUk3ohLmzY/Ctu
      9loSkrNw8/PF1duFYldXqgaH0OrZFzh88BiHTkYx9L3epElXCfRxRWeloWbN6mj1VgQF1aBa
      tSDyNh/C2sYWaxuFoFq10OstqV235L81awUz6K33iHh7NFcKrXk9qIZZD76iWLd2I637DSU7
      IYaEuBiq1W2JffFNTt+IJyn6ONu2uJBwJ421687R7dV3SLp2iaL8AgCq1avHykVLsMu/jIV3
      XVwr+dOyRXNSUnMJ8fdgy4Z1uJFCJe9qFKbfRqe3ITcrlXXr1nMw8jpDXuiCnOOMj3Uqzt7e
      Zj+2UaNG4ezsbPZ2/5fBYGD+/Pk4ODioHqtZs2ZUq1ZN9ThQkkBtbGzKJVZ5CQkJYdKkSeUS
      a8CAAeU2rDl16lQqV65s1jb/2jqA37pU0m/dD1mWS8eHHzbjR1FkZAW0f9I1Km33T7YBCY1G
      jB//f9yOjWb/0dME+PpRqYo/V6MiyMyX6fx0FxKunOP01QT8/APxsVP49dQFAnz98KsRhJeb
      E5cif2XXoQvk3LqAS6NOdGvgz4HjkTRs1orqfu7s2/0L+VjTsV0Loi9dpG7tOnw/Zw56ewe2
      bNzMDytXcHTPTvI01nTu2AErvfrdcuHxcib5DHfy7pS+ru9eH3eD+yPcI+EesRBM+ENpt+P4
      bsFSFEtr3nzrHVxs9H+4vaIobF6znHOXr1OreUd6tmsmbvwKwmPqDxKAwp6fN1GzSXu8XQyE
      hx/G090Bayc//DzFWLwgCMK/3UPHZ3LTEvhsyhTmLlkLsolly9Zx9Nd9XIy587CPCIIgCP8i
      D00Ae7asYeDb47ly5GdyCk0P20wQBEH4lypzHYAiG1m1ajN674vcSbjOzwcjynu/BEEQBJWV
      mQDuXDmFZWBLlnz3GUnXzzDkk3m4Wd9bgStu6AmCIDwJyrwJnJ2eSp6sw8PFERSZK1euobey
      xs5Gj4WVA/a2lo9iXwVBEAQzEtNABUEQKijxPABBEIQKSjwSsgJQFJn8vDzQ6LC2sqSwoABZ
      kbC2tsRkMpJfUIjBYEBSFPLy8rG0tkan04q7PY+AYjKhmEpm3Uk6HZJKRcYKLl8m59Ch0tdW
      NWtiGxamSqy98XuJy4orfd3erz1+9n6qxBL+HpEAKoDdG5axfm8kGUkJvD92NHNmzUarwLDR
      41j57SRMkgH3gHpU0iUSFZeJxsqNr6aMESt4H4H0FSu4u6ykOJvHR2Oxa9NGlYZeE3UAACAA
      SURBVDgF58+TMv2r0teOffqolgC2Xtt6XzXQAIcAkQAeE2IIqAIwGGzw9XanMPcusQmZpGdk
      4OrtR05SDAUOtfnm25nEXQonNSOP7PwC/Cv7mbtop2o++eQT9uzZo3qcnJwcevfuTXp6uqpx
      TFlZFN+6RfGtW8h5+arGelJFREQwYsSIcom1YMEClixZUi6xhgwZwsWLF83apkgAFcCqtesI
      atyKSs72ZOdk0aFbbypZ57Pn6EnSbl3mxrUrpGdLWNu7MbB/H35ev5CsIvnPG34MdOjQgapV
      q6oeR6/X079/f6ytrVWNI1lZo3VyQuvkhKT/47pLQtm8vb3p3r17ucRq3LgxDRs2LJdYPXr0
      wN3dvEX0xCygCuD8sX1s3HeMKpW8qN24MUf37SA9T+blIUO5fHQPB06e59leL2AoTmb1xl8I
      btyC3l3b/+XnQQvmo8gy/PaQETQa9e4BXLxI9t7/DstYhYSoNty048YOrmdeL339tP/T+Dv4
      qxJL+HtEAhAEQaigxBCQIAhCBSUSgCAIQgUlEoAgCEIFJRKAIAhCBSUSgCAIQgUlEoAgCEIF
      9UApiJgzR1i19b/zg5/tO5C61dWbs3sz+izHYpLo3a3TX/uAYmLlwvm06/sKHg7qLsoRBEF4
      kj2QAKzsnfDxdmb0yE/59KtpWGo07Nq+mQLFktYtm3Jg/1FatQnj+KH9NG3dgejTJ0hMzaNT
      5/YkxkaTll3AzZuJtO/UGSsK2b17H47uVWjetA5HDx3AaDSit6tEQUY8tl41sMtI5eq1WIoK
      cti1cwe2lQJp1aQ+1y6fJzIqmpZtO+Jio2Pvnl1YOfvQsmk9Vs+bTe2n+5KXfINTZy4R2rIt
      BimHi7cyqVfVk4jz8fi4WXH91h301ra0bNroUZzbx0ZxURFanQUajYQiyxSbTOgtLB71bgmC
      8IhpJ0yYMOH3b9g7uRFSvTKL561kxvy5JETuY/6qbWxeOQ9NpYaEr/ySqTMWcup6Bu6m27w5
      7luyE86zavc5CuJPMu37n7gauZ/YbAdWf/0fTsTcZdXCr7D2DuHjwV3J0zjwztBhWNs48NkX
      X9O+UTBbjkcRuW0pBy/eZuf6pXj5+tO/z0AcLC1YtesIpzYtYNfpeH5ePpdCuwBiju6idpOn
      6PHcC9gYLPho/JfUqazns4W7aVvXjWGjv0NfeIPxn88nuHY9GtSp+YhO7+Phh68/xhDQBBdb
      PemxZ/huzW5CG9UFSp7vJssKSIjib4IqolKiuJB2gRuZN7iReQM7vR0GC8Oj3i2Bv1ANNK8w
      j7Q7twELjLnFvP7ayzR/+iXmjZ7K1dNL6NHvDd541p+2A94n1KcRz/Yfhkv2CW7l5XM+Oprv
      Nq7g4E9fcubsCQxO7nz4yRh2rNrIfz4dw8EdrUsuPshcunSGt2btw9/yLimJsThXDeHzLydz
      9nIs77/aiy9W7iN2x2y2R54FIPHGWTyqt2T6tMnsqlWDO1kFAMjGew+wl+k+aCCDBz6n0qn7
      98jJTOazTz7A3tKK9wb3YPvGFVw+vpcu/V4n59phIi7cpE5oJ4YM6i6SgGB2i84vuq8a6Oy2
      s2nt2/rR7ZBQ6iE3gaXSR//GXY8ho8CEbCzibsp13v5wIiPf/YCJ40ZSvUFn1iyaRO/+w+jV
      5yV0GglFkko+j4auT3dhyEvPM/+Hn+nWuVtps6XXGAkUJCRJQ+euzzNq2PM807svJntvlMRo
      2rXrxMSZS+n9XBfeHNSTyQs30f+ZTihAQO0WFN85RvsO3XCr1pZmTzXjyq/bGTXqU7S/Ne5g
      qKTu2fu3kLQMeesjnm1chW0HjlE9pDmzpn/K9h37OXHiDJ6Vq2BnsPrzdh5D8+fP5+TJk6rH
      ycvLY+zYsWRnZ6seKzIykjlz5qgeB2D58uWEh4eXS6zyEh0dzfTp08sl1qZNm9i2bVu5xPri
      iy+4ceOGWdssswegs3bh0KlDOBksePHtj2jb8zZ2dnZIGg2vv9iTSu5uvPfhOzi6uHG8dVty
      8o34+nqTn5OJrLNCI7dEVnTYGvrz8q1b6A32eLg5sXnPcZydXTl45jiuLm7sOhKOg7099Tt1
      x9HelmcHxGNl64S7qxP7jh3lTmoG3j4+6HUSPV5NQGdli4erM012HsDexY1fjxwlKeUuXl4+
      WFlqOXViHxZWNkiKBisrDTKimuI9BUWFZOXkobe0xtPTFoOtLXJhIY1bdcTd1ZY5SxbRu0cn
      LLSPek//HltbW/TlUDVTkiQcHR3LpYek1+uxtbVVPQ6AjY0NlpZP1jO+LSwssLOzK5dY1tbW
      6HTl81gVe3t7s8cSxeAqgJ3rF7D/5GWwdOWd13pw+Gwcz3dsyvzlu3HVJ3PgxEXqhbXntb5i
      CEgwv2UXlhGVGlX6+pWQVwh2CX6EeyTc84cJIDM9DWs7Jyy0EplZWVhaaJF0lljpxQySf5t7
      v+YHLvCKgqwoSJIkLv6CUME8dCGYqTCbbu2bs+SnvSAX8967Y1mzfAH7j8eU5/4JZvLQC7wk
      odFoxMVfECqghyaA0wd30LLPUHZt/JFiGSRJA5KEJB4VLgiC8EQo846CoigsXbycApdqxEYd
      51T0zfLeL0EQBEFlZSaAvLvx3CpyZNbokVzr0ohFS5aV934JgiAIKivzJnBC9BmupGtp06w2
      sjGfH5b/hLOzK1V8HLF1rUbVyi6PYl8FQRAEMxLTQAVBECooUQ5aEAShghIJoAKQZZm/0tFT
      FKVk23LYJ0EQHj2RACqADYtncD0l70+3S7l5iYXLtyMygGBOxUlJFF67VvqPKTf3Ue+S8Jvy
      KWIhPFIJcdGEfzUJV0cXRr71BqsXz+PqzVT6vTwYbVY8K9fvxD+kPp2b+bNh5VIun91PzwFD
      scqLY93mXQTWD+WVXh2Z881MEtNyePmN4dT090GsHRP+ijtTviB7z57S1z7fzsauTZtHuEfC
      PaIHUBEo0LL981SxyGLKtKlcSIF3h7/ItCmTmDJzPiPef5+4Yz9zLi4Ne28/hr3Ugw3rVzB9
      xre8NepDLoVvYuHi70nTejDitd5MmTKdx6WbsHXrVqKjo1WPU1hYyPfff09e3p/3pP6pK1eu
      sGnTJtXjAOzatYszZ86oG0SWwWT67z8qzzuJj49nzZo1qsa459dff+Xo0aPlEmvlypXcvn3b
      rG2KBFABSBoNPn4+eFRyIS0jHVdXT1w9KiHJBSiSFa6uLni42VFQZCTQvxZe3j5olHy0igVu
      zs44OzmSnp6Fh4c37p7eKMbHpwt/+fJlUlNTVY9jNBqJiIiguLhY9VhpaWnlktQArl27RlJS
      UrnEKi+ZmZlERUX9+YZmEBcXx82b5bNQ9ty5c2YvRy6mgVYAq+Z9yu7TCSiyJZ+O/5CZkz8j
      o8BEh+4DsEq/xJZfz2Jj78H7w/uw5UAsr/d+ivk/bsDDysSeI1HYufsy7r1X+XjsxxQYJXq+
      +AZd2zQW9YOEv+TOF1PJPXas9LXH2LHYNH7qEe6RcI9IABWAosjIsgxoSp4LrCiYZBmdtqT4
      v8loRKPVIkkSCiUP7bn335Kf6ZA0EorJhKwoaH/bVhD+CkWW739DVJ59bIgEIAiCUEGJewCC
      IAgVlEgAgiAIFZRIAIIgCBWUSACCIAgVlEgAgiAIFZRIAIIgCBWUSACCIAgVlEgAQplSEq9z
      JV79EguCIDw6ohpoBZB7N5kfV63F0asqz3YIZd3q1Zj0dvTr+zwnD+3m5PloWrTtips+n03b
      91O/aVvO7V1CjLY234wZjEas2hSEJ9IDPQBFlsnMyCA9PZ28/IL7CvcV5ueTX1D0lxpWZBMJ
      N+NITk3/Sw8j+dP2FAVZ/m87RYUF5OUX/ON27zEZi8nOeXyKnJnTrC8+wSWwLrcuHWXixAnk
      WrmjSY9h9oIVhB88w1Mh1fjyqznMmDIRR68qnIs8gaefPzVr1ORxv/SfPn3a7BUSy1JcXEx4
      eDhFRX/tz/8/kZSURGRkpOpxAM6fP098fLzqcYxGI4cPHya3HJ4FkJaWxvHjx1WPAyWVW2Ni
      Ysol1tGjR8nIyDBrmw8kgMKMBIICq9C2fSf8/Kqw5UBJqViTycTmFd8xb+1eUBSMRmPphV2W
      TZhM/633YSrKY0jfbnR5ti9P1avN3JXbywxu+q22jKIomEwmlN/aLfW710u++Zwft4UDJX+Y
      9iyfx3ufflnymeJi5IckGVmWMckltXDk32qS3Itz7xMmk4nYyEN06/1iaftPUoWMWykmWrcK
      pVfvftxNyaJly5a0adOc27evceLcEXaHH6e4WKbngMFcjQxnx/bdWNg64Obi9tjXbFm6dCmn
      T59WPU5BQQGff/45OTk5qsc6d+4cixcvVj0OwNq1azly5IjqcQoLC/nqq69ITk5WPVZMTAzf
      fvut6nEAtm/fzq5du8ol1syZM82erB+oBVRw9xY1arXlyIUTfPZaD+ya9OLghh8pyMmj27Pt
      cazeGvs7h5nz4058g+oxe8qHDB44mAIkvpy3hBb1anDtzAHaDBjLxchwbl2K5FaOxJGtSwho
      3gNt/EHSnZoQtWEqx+JyqNuoJRFHjxBYqyHVrO+y52wszw54kyCbZOas2UlG8h3e/eRzPnv3
      dSx96jB79EA+/Oxb9AUF1O/Rl2DLDJbvPIStmx8dGvpi6duCBo53WXvyDsr1/cRna0lKycbb
      yYqkIgM7f1rE0JcHcfF6Mj1fGcbrXULoPehtbCz0GF29ead7Y774fj0+NZqweslMrPVas57w
      R2Hf+oXM/ekAxYUyQwY9x6IV68FYxOA33mT2N18RVDOQi1czad3IjejEPHILjbz1UjdmLNzL
      mpWz0Wse3yQgyzJSORQXU377olKesTQa9W/RifP3z9z7Uvlv/V2VmQACqoXgWMkHL/+qzPpq
      Ep3atWf7ofMcWTuNWE0AW2ZNZEvEReLPHOXi0R0s3HmeIA8jimdbVs/9hEtHf+aFUYuJPLSe
      7Iw0cookvhj7OkHtX0R3bRepbi05vnQs/Sesh9uHWLQ1imVTh1O1UVeGD+7L0g27Gf3qM8Th
      T33nVM4kOmFxbQcBPd7myIpJtHx5HAWXfuZ8lgOtqzpy/PxVVqzYwMofvmP0lMU0cM2k3fBp
      rJ84gDdn7eDjXm2ZujGckc+15O3xHzJ/XRTbF48lqG4LXhjQnXzbQPo0cmHUzLXIiReo17YH
      u9Yv48d9Z2gR5GO2k/0oFRcXodHo0Go1GI3FgAadTovJaESRpJLKoIpCUVEROr0ejSRhMpnQ
      aDSPfS9AEIT/nzLTloXek2Nno9i9dSM1/DywsHDD19sJjSQhafTYWGv5ZetWvpn5LbKVLTpL
      W4Jr1aFFi/oAeAYEk3ntOF/PWcTwV3ozccYSnK1siT4fxaFTlwCQJAnfKpWx0Grw8QrAzsEJ
      B0uFylUC6dSuM1YWGgw29mh1JfepJSSizp/DydGRM0dPcvbkBSRMfPfVFKpUD8HGSqJ64zbY
      p59n0+kMnmndAAB7Bzt0koSNvQErjQY7B1eS4y+zfccetAYn/DycuXLmPMcOnUTSaHCytcLL
      x5dmoW3xc3Uoj99BubCw0KPVlvy6dToLdLqSno1WpystC40kobe0LL3pK8o+C8KTTTthwoQJ
      v39DQaHYpCGsZTN0v3X9i4o1hLVoAiYj7pWr82LvzuzZs5ewp3sx+OWBFKbGcbfIgoF9++Jg
      Z4WVrRPdOoRx4MB+vGo+xej3RxASHMDJY6eoVb8ZjRo1wsvDkQZNWmCw0ODi7kudunWoV92X
      o5Hn6flCf6r6uOPmF4C/lyuu7r40eyqIy7G3ef/dtzkfeYgqwfVo8lQTmjVtSHTMLcLCWlAr
      pB534s7gU7cdvbq0pKi4kDoNQ7GUFBo1b4EFMt36v4q3vcyJs1cYN2ky3Tq0JznuPDh6Etak
      CW++8TpHfv2Veq060rZpfTEDRhCEJ9YT9TyA8M3L+Xzuar7+7ntqB3o+6t0RBEF4rD1RCUAQ
      BEH46x566zotKY4PRr7N2+9+wM3kkrmnhbnpHDpx/qGNZaXd5us5y1FQ2LVxJW8OHcqmXYeI
      2L+TYcOG8dprg/l+zTbzH4UgCILwtz00AZw9tJduLwzj+da1+XHdzwAc3rWWj6fOJj72Ol9O
      msTi5WspNv22FqAwg2Fvvsm+k2cw5meyaOUuvpwxjVWLF1KreVu++moacs5d6oXULZ8jEwRB
      EP7QQxNA296v0qRmJX5Ytp5WrUIBqB5cl7oNn+KbL8bTuFN3Mi4fZmt4yUIxSW/P/Dlz8bCz
      pigvg0oBXlgb7HGwdwCNjpgTe7EPakXDWr7lc2SCIAjCH3poAshMTWTQS0N4YeQ4QkP8AbA2
      2GBjaUNmrkSd2kE0alCTu5klw0OSpMFSbwGATm9DZno+imyk0JiHRoK169bz+iuvPPalBQRB
      ECqKhxaDW7VgFjeSklg+fxbZOa/yfOc2WFjZcGTbCoYO6MzwV1/CWGhk+uz+pZ+RJA22tgb0
      ti7UcpB4ffDrVKnWBAsNpGNNTV/7cjkooWznTh3GuXJdfNxsf3tHYe+uX2jRtiN63R+vZMy6
      fYOopHya1w9Wf0eFJ0ZKXgoHbx287z2DhYEu/l0e0R4Jv/e3ZwHdW45sMhrRaHVoHlomQKGo
      yIiF3kJ863/EivJzOHToEPt3b6HjS+Pw0qUSE59MWIvmfDJyMJ17voSXXzVCqlfh6qUz3EjI
      oHmL5sTH3yDt1i1sPfxwK7rKtI1RdGpah+at2mDKSeNYxBl8/Kvj7+VMdEwcd9Mz8PfxID4x
      lZYtQjl78ig5xVqaN2/2pwlGeDKdTDrJq7+8et973rbe7Hx+5yPaI+H3HlgI9mfu1aLQaLWl
      BdMkSbqv1oeiyCgK6HS60ou/IssogKwof7q4quTziliFaibTJ35IstHAqfDdBFStyoyvZ+Ph
      oGPJpnAK4s+idQtk+axvqBzoyUefL8DFUMDaPafYsnwWBjd/ls6aQViLhny3bDuBjjJbTsRy
      eOMqnH08+XzyTBqFVOLDiXPQpF5l1e5Iki7uJ8so8fW369EWJGHpGoBvJSdVji01NRVFUdDr
      9aq0f48sy9y+fRuDwaB63Ze8vDwyMjKwsbFRNQ7A3bt3MRqNWFpaqtJ+Yk4im69tvu89e709
      A4MHqhIPSgr3paWlYWtr++cb/0MZGRkUFhZiZWWleqykpCQsLCzQ6cxXxf8f/Ule88N3nIu9
      C8D1Uwfp8/I7FJlkrp8JZ/GmX+/b9tCeDWzffYyPP/36T9u9EHGAFRsP/ZNdE37n2o0UXn31
      VXr27E5sXCx3ixWSM/Kwt9Fj71WFwS8OpHNoIEePHqbYWEBGViEOFjocHP155ZVBNK3vhVFW
      eLp7D155/UWSrt/C2lnPiROnycrMQwE6de5Fx/Ytad+9Px2a1cHCphL1/W04dSGarJxs1Fps
      MnLkSHbs2KFS6/+VnZ1Np06duHv3ruqxdu/ezVtvvaV6HIDx48ezZs2acolVXk6cOMFLL71U
      LrFmzZrF3LlzyyVW//79iYqKMmubD00Ad25e5b333mXYsDe4HHeLyePeYdjQ11m6bhsXTx9m
      2PAhLFm1nvxCEwDG3Byund7FzCWbKMzPIyU9hwVzF1Mkw+oFc0hKSyMzK4+ExJJysKaCDGbN
      XoIim5g7ezaH9mzmzeHDeW/sZLJysklLy2TevGWYZJll8+aSk5nKhNGjePvdkVyNT+K7aRMY
      MXQE4Scfvi5BKBHWqAaTJkxg5ZpNVKsRhItOQWMqQpYtyL+bwOQvp7Lt5G06duiENRokuQCT
      YoFOe++mvgWSRsJCV1IbSIuRs+duUL2aP0peJvlGCa1Wj0YjodVokbQ6MhJjiMssololZ+KS
      0lQ7tgULFtC9e3fV2r/H3t6eY8eO4erqqnqsrl27smTJEtXjAEybNq3cLpblJTQ0lI0bN5ZL
      rNGjRzNy5MhyibVt2zbq169v1jYf2pdIvRlHvYahxBzfxt5jFzh3MYGFixYwYvQUjm9PYNQX
      37F8+kf3fWbAG+9zfNMCqtq+ALhx8vgJBg19lXMnjxHcKhTJ4r/baiztuXR8H9Etgjkdl4Wz
      XRoduz3D/OkTSQmrAYqW4ydOMnhIf06fOI6VPo/YfC1N/R2ZMmMmNyOPMOClFykqNCL8sYFv
      juXK5cvoh75OpUqVCKtfg8TkdKpXr0FOZl/S09KxGz4CD2cHFs6dStLdLKrXqE56ahpWGnhp
      xMfY2NoypIaM1mDNpAnvYaHkcSc9h+e6PouNgwPBtcBaLxOkWKAzVQe9DZ3atSS7CGpWq6ra
      faDy6HpDyTBneQzJQMnQqTm7+X9E7fPnYOlAmHfYfe+5WqmbRMvz/Kk1dFYWg8Fg9jYfepYO
      Hz/I9XwnHG3sUWQZD29PbG1tsHGwgzug11tia293f2NWtnz5xcd06fkiL43+FlkuprComIzc
      vAfalyQNz3VtxtD3xvDZNwtYMuld2vd4FVuD4benkEkYjUUUFRWRmV9AQZGMi7sX/tV8kO1z
      aNeoDvnpN1jyw3I6hNUz93l5omi0OmoG1yp9bXD3wtXdCwArNy9c3bxKf+bm5cO9l5U8PQBw
      dq0EgOVv1wpPD2fAmd/evo/17/5t61/NnIch/AtVd6rO3PblM0Qi/H0PHQKqHVSHtIQYknJk
      7KViqlarCmioFlCZoa+9xMfvDePklRTsbEpuvlk7OuNTyR3/kDA+eXswvl7OdGxVi7feGA7O
      Hnh4eOHu5kLN6lVLY7Ts8jyBNesSVieQhg0acvTgXuwrVQHJGh/vSoTV9+atEe9h5+1Ltx59
      KYw/x6p1W6ldtwFXzh3l2OmrdOzWSe1zJAiC8ET6w2mgJT+SKGsyzu9nAP3x53loG3/W3v++
      97+zjv5q24IgCMKDRDVQQRCECkqszqlA7q3VUGt7QRD+XUQCqED2bF3Dxfj0P93OWJDD4cO/
      En3sF/ZFXC6HPRME4VEQQ0AVQNLNGH74cRXnz57i9TGzSYnay5W4FJ7v35/Yswc5eymBTs8+
      za7Nm3HwqUawr57Pp83hzQFd2HTqDlVc7enbuxvnb2TwXMdQNmzYRo+ez4rHZQrCv5zoAVQA
      M6ZOpnG7Z3CzNXDpdDh7IuPo0aUFn302hbUrlxHSvAXzp39Ok47PkhZ9gCuJxdStWxc7Kx16
      Gw/qVHZgw/5oVi+aTdz5kxyIiBH1nQThCSASQAWQlVVAUFAQQSHBZGVmUiWwFtVqhaCVc3B0
      r0SrJg2QixVCalajVnANCvNN2NjZotNINGvWmKA6tcjPKiYsJIBRY6Yw8OUBok6TIDwBRAKo
      AF7o3ZUPhr/G+h2HadikBdeOb2TI0BE0b98DR2dnJElD9+c68fYbb7BqZyQdOzTm7OHDxOco
      GKz06Cwssbez5bnnu3MzS6JRNY9HfUiCIJiBuAdQASiKgtFoRKvVlq6hMJlkdDrtfduZjEYk
      rRaNJKHIMtJ9VS+NTB71Pk4NOjOs/9OPzRBQXl4eFhYWWFhY/PnG/4CiKOTm5pZLNdDi4mKK
      i4tVWfr/v/Lz89FqtapXU713/qytrdFqtX/+gX/AaDRSWFhYLqU7CgoKkCSpXEpC5ObmYmVl
      ZdbzJ3oAFYAkSVhYWKDRaEpKeWs0WFjoSkt7S5KEbDKh1enQajTIsgyS5r6fS+joM3g4g3t3
      emwu/gDvvvsu27dvVz1OdnY27dq1K5dqoLt27WLEiBGqxwEYN24cq1atUj1Obm4uPXr0IDY2
      VvVYx48fZ+BA9cpN/94333zDd999Vy6x+vTpw9mzZ83apugBVBAPe3aDJEnIssz0zz9j0Duj
      8XSwZu/PG/AKbk5QFXfk/9nu3v8/LuLj47G3t8fR0VHVOCaTiZiYGAIDA1UvNJaZmUlGRgaV
      K1dWNQ5AQkICVlZWuLi4qBrHZDJx48YNfH19Vf+2nJOTQ3JyMgEBAarGgZIa/RqNBnd3d9Vj
      Xbt2DU9PT7P2DEUCqAC2rJjJ/shYTLIl4z4ZzaIZU4lNzaL3i29w9fBaTkankVcoM/o/77B2
      2U80aBBI1Vr1+XbuHKT8HJp2fgFn4012/RpJ9boteGdI38cqCQiC8P8jhoAqgNjoC3Qb8Dad
      Qtz5YuoU9l+8SVjjOnw5cyaRZy4y+tPP8HZUeOWFAXTq9wIpibGkp6eTmGpi1rfTidizgWP7
      juAbWB07W3XHbwVBKD8iAVQQkgKFJhOSVoODkzuVqwTSrGED7Bzt8XJ1Qitp6dP3ObZu3c69
      PqGrcyUsrR1wcoQGYc2pFeDFosUrMD3aQxEEwUxEAqgAFEXm+7nTOHgtk7Gj/0N9LyuWrfqJ
      hg0bUqtufbQaieDaTzH4zfdxNaVgcKuMi4sL9evUACSCatXFysrI9l376PpMV0QfQBCeDOIe
      QAWwdMY4mvT7kBqVbMq8CfxXPY43gQVB+P8TCaAC+P38fkEQhHtEAhAEQaigxD0AQRCECuqB
      BGAqzGXTT1solv9Zw7KpmPi4hP95VyH9zi0y841lfqYwP5vE22lcPnuSyAtX/la89KRYduw7
      xsO6M6ePh3Px2u3fdkNh344tJGXk/K0YgiAIT5L/a+/O46uqDrWP/86Qk3kghEACIQQI8zwo
      yiSoOAACtqgoKrXaXmfFahUqF4cOtgperdXrhK9WRSyCVqTKjIDMEIYkQEJGyEDm4SQ5037/
      ULn60cK91bDTs5/vP2JCsp4cYD9nr733Wo6FCxcu/OYHPHXlTJ5yM7+4/05C7QAGBblHOHq8
      kIQOHTh29CixcbFkZx8hrl0c2UePEt8+AbvNRvmJQjIOHSY0MpZVb/6Rx1/4hKuvuoSjmQc5
      XlxKbJSLSaMvJGXkJDqG+dmXcRC7K5KYqHCMgJ9H7pjJtmwvzTlfsCkrn+jQUOI7JFJSeIwT
      J0/S5LVTeTKf/BMVdOyYwKmSIjIOZhIWGUPp0d38+vllDErtgCsqhvDQxNp9/AAAHk1JREFU
      EHKOZJJfWEZiYgdeX/w4JfYUenUK5cChY/z50QdIHz+FrontTHnhRUTMdtZn2nd+uoyb7nuC
      nqkJtOs+BveRtVz/qwXcNPVq3vloOQsee55d2z7B8NQzacI4ho+fiMfRkY6+g2RllPCP5ct4
      9vV38Ffnc/G1N3P8RBnr16xi8b2v0334OCprHSxf+iK2gJd9+zKoywon/bLurHj/Q/avXsbo
      Wfdxct3zbC8J4cpLxrDyw410SzSYeMN9vP3HhQwfeyGesGQevO4CDu3+hGeeKaHG3o27p/bl
      /j8soUssDLnsZuKAgK+J6RPG0GXAeNbuO8jd5+AFbgsMw8Dd2IDd6cLltIPNgd0OXp8fGwZN
      Tc1ERESC4cfr82FgJzwsFE9LM15fgMjICN35IxKE/nkBfPXv/fMt25j+szuYO20ow6b/it/+
      x6U8ed/9dOyVxqP3P8Il1/8Sl8OOYQvnojEj+Wj9RoaNmsx5Ey/mBNX07tWF9nHhFFcbhMYk
      0a9jAjf/7FZWNebwxsq1pKWPosUXIDIkjFGjxhA/aBZhp7Yy6+dzGBZxkg1lNfgNuG/Bc/j3
      vksgzEFkbDwnc05w0YSRfLR6EwMmTCEQgEHnTeOJR69h9n0vs23rp9xy538yZbiTa+c+w7Uj
      k/HUl5JZ7+TD117iqnFbzs0r3AZs+egtlqz6Al9TM5MnjaLakcrEdBfLthzjZMY2wuKjsMem
      k2Jkc6DUSVVpCYv+62kemjufuBgXs/7j10w8v6/ZP4aI/Mi+9yKwz3eKm6+7hmuuuY6QqE6s
      WPIStz/wG8aPn8jlV1xFblER//nwfI4X5TLjqiu//JqmWnbuP8bUKydx6NBOHGHhbN+0iuV/
      W0Z5vZfokFAa3V4iIkN4+eWX2Lp9P1deOZmcI7tp8X85cx8aEcn7by+hwWdgs4Hx9ZtOGyR1
      bMegC0diazHA30THzgns3pPJ5KmXk7H3AD7DwIYdvroKMOK8CSx58Ul+9eBCLr54CgCu6CT6
      RQS489b/IPtwfpta1bI1vfX++8QmJuO0N+N2tWfbmo/52/IPueTSiaR270xkWCTZWUdxN3l5
      YP6TTBw7nLJqN776OkKiY4mKDPmn11bM9sgjj/DZZ5+1+jj19fVMnz6d6uqz76n8Q61fv54H
      H3yw1ccB+N3vfsfy5ctbfZzGxkZmz55NQUFBq4+1e/dufvnLX7b6OAAvvvgir7766jkZ65Zb
      buHQoUM/6vf8zm2gAZ+Hffsz8Pr8gI3efQdRVZpLaVUjI0aOINQBB/Zl0Kt/fzIzMxk4aAgh
      ji8PpeXFBWTm5NOr7yA6xLrYvmsPffv1J+vwYTp06oQzJBKXr56yJoOeHWPJyDpKtx796Jby
      5Up6NZVlHMzKoUfXFAxXGBEOD7UeJwF3Be2TexIbGUr2wf1UuX2MHDGcqrIiso7m06vfQOLC
      beSX1dI9uT05+eX075tG9qED1LgNRo4YTGlxHs7oDoT6Gzicc4KE2FA6p/UmOrz11/E222P3
      3ULXMT+lIWcPQyZdx+Z3F7E938fLf7qbmx94hl/fehVPv7Ka8X3sXHP/s3y27CV69xvB5zv2
      0dlVx8HmTiyed1ubLMwdO3aQnJxMSkpKq47j9XpZt24dEyZMaPXVLE+cOEFhYSEXXHBBq44D
      sHfvXuLi4lp95Uyv18vmzZs577zziI6ObtWxysvLycrKYvz48a06DsDhw4ex2+307dv6Z8gb
      Nmxg8ODBxMfH/2jfU88BWEBdRQlvvbMUV1wSN143k8qiIxyt8DFuaC/e/esSmu2RtI+OI6lj
      KH2HTSTvaAaduqazadUyCiuamHXDbDonxrfJAhCRf90/LYBAIPDlGvI2G45W3gFJRETOve8v
      AMNgwX0/I7/WRlrfC1j461/o3Z+ISJD53rf2RsBH5rEienTrwdQrJ+jgLyIShL6/AAw/V06b
      yazrprHwoV/T6NEK8CIiweZ7C8DvcZNTXElKSlfCwxxt9hZAERH5131vATjD4xjYPY659z/C
      Lfc9QqRLW4CIiAQb3QYqImJRur9TRMSiVAAWYBgBqior8fm/u8Z3wO+lsrIanQiKWI8KwALW
      //1Nbr//MWrdLfj9fgzD4EjGFlZtzeKFPz3K7599HZ/B6c/Blw8CBr76tWEEvnow0MyfQkR+
      bLoGEOwML7+4ehrNnfoxIjWG7JOlhER0pquriDU5LpoyNzPp53cQ01hIdmEl4Ynp/OKnY/jj
      0/+NERLKAw/cw6Jn/oTfb+fe3zzGkO7JZv9EIvIj0RlA0HMyYcokZs68kaiICIb0H8junTsZ
      OXYi1934My68aALXz/wpjvAODBzQn4ydG/nb20u4ff5veeDun/PJO3/B70ikb+dIXv1/y9vc
      WcDzzz/P9u3bW30ct9vN3Llzqaura/Wxdu3axeLFi1t9HIDXXnuNdevWtfo4TU1NzJ8/n5KS
      klYfKzMzkyeffLLVxwF4//33WbFixTkZa+HCheTm5v6o31MFEOxsNmw2G4angbc/28LgoUNw
      AQFsNNXVYLPZ8DbVsHrtegYPHkyIzYbNEUJNXSOFuVmU17pJ692PUaPHMKR3D7N/mu9ISkpq
      9dUlAex2O2lpaTgcrX9LdFRUFMnJ5+ZMq2PHjsTGxrb6OHa7ndTUVFwuV6uPFR4e3uqrw34t
      ISGB9u3bn5OxunbtSlhY2I/6PTUFZAE7t6wltH1vtnz4Gnm1PtqFRjDzhmm89NL7jBzej0uu
      vII3//I0xRVNxHXoxK2zp/Psnxbjap/C/XfO4fmnnqLSE+C+B+bTIyUBbQ4mEhxUABbyP3/U
      ti833Pnq/20227d+/c3f+83PffPzIvLvTwUgImJRugYgImJRKgAREYtSAYiIWJQKQETEolQA
      FmAYBo0NDTR7PAQCBl5PC3X19QQCAXw+L+7GBjxen9YDErEYp9kBpPW99/oiPv48i9xDe7n/
      od+y9O3XSE4Mo/2ASZz6YgnehIGUFZ7izaX/j7iI1n9Q5585duwYzc3Npo0vYjW6DdQCqqoq
      iImNx11fg93hwg/ERIRR09CE4W0mpl17GuqqiYxuR4jTvJNC/VUUObdUACIiFqVrACIiFqUC
      EBGxKBWAiIhFqQBERCxKBSAiYlEqABERi1IBiIhYlApARMSiVAAiIhalAhARsSgVgIiIRakA
      REQsSgUgImJRKgAREYtSAYiIWJQKQETEolQAIiIWpQIQEbEoFYCIiEWpAERELEoFICJiUSoA
      ERGLUgGIiFiUCkBExKJUACIiFqUCEBGxKKfZAUTk3CsuLqakpITNmzfTo0cPpk2bhs1mMztW
      UAoEAqxdu5bIyEg+/fRT5s6dS1xcnNmxAJ0BiFjS3//+d+rq6nA4HOTm5uLxeMyOFLROnTrF
      sWPHWLFiBaNHj2b37t1mRzpNBSBiQb169eLdd9+lf//+BAIBQkJCzI4UtGJiYsjLyyMpKYnM
      zEzS0tLMjnSapoBELOj888+nvLyc0tJSBgwYYHacoBYWFsbVV19NXl4eXq+XqKgosyOdpgIQ
      0wUCAQoLC9m3bx8jRoygrKwMt9vNuHHjzI4WtN555x06depEUlISUVFRmv9vRVVVVaxcuZKf
      /OQn2Gw2wsPDzY50mgpA2oQNGzawdetWCgoKcDgczJgxw+xIQa1du3YUFhYSFhaGYRgYhqES
      aCWhoaG0tLRQVVVFSEgIfr/f7EinqQDEdHa7ndmzZ9PQ0EBtbS0NDQ00NDSYHSuojRgxguzs
      bPx+Py0tLWbHCWqhoaFMmTIFr9dLc3MzXq/X7EinqQCkTXA6ndx00034/X4yMjLIy8ujT58+
      ZscKWgUFBbzxxht4vV66devGhRdeaHakoBUIBFi1ahU5OTkEAgF69uxJYmKi2bEAFYC0ET6f
      j/fee4/a2lpKS0uZPn262ZGCWlZWFg8++CCFhYVUVFQQCARwOBxmxwpKVVVVDBkyhJSUFMaO
      HUtlZaXZkU7TbaDSJjgcDtLT05kxYwajRo1i1KhRZkcKaqNGjSI/P5+tW7dSXFyM3a5DQWtJ
      SEigtraW5ORknnvuuTbzEBioAKSNaGpqYuPGjaSkpJCQkMAnn3xidqSg1rt3b0pLS5kwYQLT
      pk3Tu/9W5HQ6GTFiBHV1dcyePZuePXuaHek0FYC0CU6nE7fbzZYtWzh48CDx8fFmRwpqH3zw
      AfHx8Xg8HlavXt2mLkwGm7q6OrZt20ZFRQUej4ddu3aZHek0FYC0CU6nk2uvvZba2loGDx5M
      SkqK2ZGCWlRUFMePHyc3N5dAIKApoFbkdDqpra2lvLycI0eOEBsba3ak0xwLFy5caHYIsTa/
      388f/vAHlixZgtfr5cCBA6SmptK1a1ezowUlj8dD9+7daWxsJBAIMHPmTCIiIjQN1Ar8fj92
      u50uXbrQ0NDA4MGDGThwIA6Ho008d2EzDMMwO4RYm2EY+P1+9u7dy549e+jSpQuTJ0/Wu9JW
      smrVKsLCwti4cePpj1VWVvLEE0/Qvn1784IFoby8PE6cOMGmTZtobm4GwOv10q9fP2666SaT
      06kApI1oaWnh8ccfZ9asWezatYvOnTszadIks2MFpe/7J19SUkJcXBwREREmJApe3/daf730
      SVtYFE7PAUib4Pf7CQkJITk5mZSUFNxut9mRgtbXUw9+vx+/34/L5SI5OdnkVMHpm9M8X08H
      ORyONnHwB50BSBthGAbbt29n2bJlpKenc9ttt2mJ4la0d+9eXnnlFUJDQxk8eDBz5sxpE3PS
      wcjv97No0SKOHTtGr169uOGGG0hKSjI7FqC7gKSNMAyDPXv2EBoaysGDBykrKzM7UlDbvXs3
      Tz75JIsWLaK6ulq3gbaiqqoq4uPj6dWrF2PHjiUzM9PsSKdpCkjahMbGRgzD4Pe//z1FRUVs
      2LCBG2+80exYQSslJYW7776bjh07UlBQQHV1NQ899BDR0dFmRws67dq1o6ys7PRT1/Pnzzc7
      0mkqAGkTIiIiqKmpYd68edTX1zN37lyzIwW1CRMmUFxcTGlpKXfeeSdpaWm666qV1NXVkZSU
      xNKlSwkPD29Tt9vqT1zaBLvdzjXXXENcXByXXnop3bp1MztSUFuxYgW9evVizpw5vPnmmwQC
      AV0DaCWhoaF8/PHHLFiwgPnz53P8+HGzI52mApA2obm5mTfffJOpU6fS2NjI2rVrzY4U1AzD
      oKmpCbfb3WYeSgpWERERPPHEE0yePJnx48cTGRlpdqTTNAUkpmtqamL//v3U1tbS2NiI2+3W
      AamVDRkyhI0bN3L06FFuvfXWNjUtEWxqa2t5+eWXqa6uJjExkfT0dDp16mR2LEAFIG2A1+ul
      qKiI0aNHk5ubS2RkJL179zY7VlDbvXs3cXFxDBw4UDuCtTK/30+XLl1ITk5m0KBBFBQUkJ6e
      bnYsQM8BiFjSoUOH2LBhAzabjc6dOzNt2jRdBG4lhmGwc+dOIiMjWbFiBXfddRft2rUzOxag
      MwARSyouLqZr16707NmT1atXmx0naB07doxXXnnlW0tCVFVVqQBExDyFhYWMGzeO5ORkfD7f
      6WUK5MeVm5tLjx498Pv9jB49GoCOHTuanOp/qABELOjqq6/mhRdeoKWlhRkzZuB06lDQGsaO
      HcupU6fYv3//6bt/OnbsSFRUlMnJvqRrACIirejrQ2xbvLNNtS8i0ora4oH/a5r0ExGxKBWA
      iIhFqQBERCxKBSAiYlEqABERi1IBiIhYlApARMSiVAAiIhalAhARsSgVgIiIRakAREQs6jtr
      ATU2NtLQ0GBGFhEROYe0GqiIiEVpCkhExKJUACIiFqUCEBGxKBWAiIhFqQBERCxKBSAiYlE/
      uAA8DRV8sn47updUROTfy1k3ha+tKGXDlm0kJKVy/tC+rF+7npCoDowfM5IDu7dQVJDDx/tq
      GNU/hU3btpPUtSfnDxuEzWbD29LI2rXriIiOIb3fEJoqCth3OJ+JkyYR44J1a9cSHp/E+YPT
      2b9rHw0hUaS2d5GVU0Sn5M4M7tuLDevXENUhjQtGDMTehjdXFhH5d+NYuHDhwn/6WcPgz394
      EldCEn9Z/CxOfx2fbDlAVWE22AL812vvkxhpUFBtJ+eLz4jrksKf/rCYn1x7DS6nndcXP8rx
      xgg2rniFJlskv3vqJQb06cyzr/yVoowNnArEse+zpZTVt/D4039m5KA0nlr0EoN7deY3T79E
      Xc5+8hpD+fzD14juMYq0TnHn7pWRc66xsZGSkhLi4vTn3NoMw6CoqAiHw4HL5TI7TtCrq6vj
      1KlTxMTEmB3lW844BWRgYIuwsWP7DhrcHvoMHUO0vYkDh49y+OBBRo+fzJw5cwgLDYEI2P7F
      ThoaPQS+eri4qLic66+9juumXELNyWN4/B5KSitJ7dCBzNwabr5lNnOuu5Ls43mMv3QSF/ZP
      o8/gUUy/5gb6dYom/3gmvvoKOnZJw1tff05eEDHPrl27uOOOO8yOYRl33XUXO3fuNDuGJaxZ
      s4Z58+aZHeM7znwNwDA4ejiX1G5dMZrq2b9vOzUtIcTFuOjSqzdbVr3Fo4/9Dq/XQ052AV27
      dgZ3DQ0tfgBGjRnL4/Pm8fRLy+jQcygJoSH4WhqobQpw2dj+LHj4YX73l2WMGzmMMFcI7VN6
      U5K1j/nz5pFRUMeosROpqqinIK+A2Ph25+L1EBONGzeOlStXmh3DMpYvX85FF11kdgxLmD59
      Oq+99prZMb7jrGsB1ddUUnKqmvZxsUTExFB+8gQ2ZxgpXZKoqiijrslHdHQMIbRQXllHfEw0
      0fHtcTkdfLR0CUXVNjK2fsyceX9iYFIMJ8srSU1LIzTEQUFeHq6IGDolxFLb2ESUw8cjCxYx
      YmgqH2/J4s0Xn6YwL4+QiGiSOyVi0zUAEZEfTasuBldfU8G69RuJ6dSNiy4YftaLuIZhkLHr
      C44VlXHB+Il0TohFh3wRkdah1UBFRCxKD4KJiFiUCkBExKJUACIiFqUCEBGxKBWAiIhFqQBE
      RCxKBSAiYlEqABERi1IBiIhYlApARMSiVAAiIhalAhARsSgVgIiIRakAREQsSgUgImJRZy2A
      hppKNmxYx/5DWfi8zXyxZTO79h4iEDDIzT7Eho2f09jsobQ4n3VrN1BaUYO2GBARafvOvCGM
      YbBo4SPE9OjPB+8u42ezrmT19qN0irRz+dTJPP/SW1x+4SD25ddSl7+LURMup94XwUP33KLt
      G+X/rKmpiZqaGpKSksyOEvQMw6CsrIzY2FjCw8PNjhP0GhoacLvdJCYmmh3lW854BmBgEBLl
      ZM+uXdTWNZHWbySh/nqycwo4dCCDsZOu5ZY77sBdkctll1/Btq2fU1FRg97/y79i165d3H77
      7WbHsIw77riDHTt2mB3DEtasWcPDDz9sdozvOOMZgBHwccusnzJ0whW89+rr3HL7HHYfLKD5
      VA6XzPgpK99bydD+PagKxNBUmkVar77syszjnVdfxGHXGYD833g8HtxuN3FxcWZHCXqGYVBb
      W0tERAQul8vsOEGvubkZj8dDTEyM2VG+5axTQNUVpRSVVpLQLo7Y+PYUF+RhCwmjR/c0KkqK
      KK9uIL1XOi0NNeQXnqRLt+7Ex0ZpCkhEpI3TpvAiIhal20BFRCxKBSAiYlEqABERi1IBiIhY
      lApARMSiVAAiIhalAhARsSgVgIiIRakAREQsSgUgImJRKgAREYtSAYiIWJQKQETEolQAIiIW
      pQIQEbEoFYCIiEU5z/YbWpoaOJx1lMjoeFJTO3MiP4eaxmb69x9IVXkhFRU1dEzpQWJ8jHYB
      ExH5N3LmPYGNAA/f+3Piug5m+Rtv8PgTv+G9f2wjLbKBmGHTWPuXh7jk+jvYum4bby17i4gQ
      nVDIv87v9+Pz+QgNDTU7StAzDAOPx4PT6cThcJgdJ+j5fD78fn+b+7t9xiO24fdRUuXigbn3
      MuXyi3G1a4fLqOVkWSVVVfWkDhjB/XfewbBuYZTVtZyrzBKkNm3axOTJk82OYRlXXXUV69ev
      NzuGJXzwwQfcfPPNZsf4jrOeATx2722Epw5g2X+/zqyfX0dBvY24xlya25/HoY+fZ+ot97Lm
      03W8vfQdnQHID9Lc3ExdXR2JiYlmRwl6hmFQUVFBdHQ0YWFhZscJem63G7fbTUJCgtlRvuWM
      1wBsQPd+g3HEdKLrwP5cf9tdFGTtp33Ha3E57Dx2bB1DB/RlxsxrdfCXHywsLEwHo3PEZrPR
      oUMHs2NYRkREBBEREWbH+I4zngGAQdauL1i/Yy89+g/hsotGf+NCr8H6dRuYMHGCLv6KiPwb
      OksBiIhIsNK8jYiIRakAREQsSgUgImJRKgAREYtSAYiIWJQKQETEolQAIiIWpQIQEbEoFYCI
      iEWpAERELEoFICJiUSoAERGLUgGIiFiUCkBExKLOUgAGhw9k0OILfOtj+/ft50yrSLvrq8jO
      KeSMOw0YBhn7M/BrNWoREVOc9QwgL/coXr+f4vzj5BeexDAC/OXPT5OXm0NFVS0NdVWUlp4k
      53g+ga8O5uVF2fz1/Q34vM0cPZJFVW0Dp8pPETAMSstKMQyDylOnyDmai6elmSPZ2VRU1aEq
      EBE5d864JSTA9q2f4mmq4e+bs4jwnWL8rLs4kbWfN5YuY19GDjdM6MzKnTW4GgqY8+ifmTg4
      9cu9JIEFD96Po0NXsjMP0zU2lJt/tYA5V1zGe2tWs3jRq/gaask9tJEqOlBVUc+LLzyFQ7uL
      WZbP56OlpYXIyEizowQ9wzBwu92EhobidJ71MCA/kMfjwefztbltIc96BhDwBdizZQv3PbKA
      BY/cw9b1O0nuPYSF8+eRFBVKk9fPz+9+gDk3zaSsouEbX+lnzxebcfi9RNlh+MihvPLiCySn
      9eGFxc8w6IIxBPx++g0ZRf6xgzgcIXgD/zSGWMC2bdu48cYbzY5hGXPmzGHLli1mx7CETz75
      hHvuucfsGN/xv7oI3KN/X/665HVef+0t+g7ugzPEgY2v3+jbcDod2L/zLsJBWq8BpHXvg8sV
      yvgrfsJnf1vGvMcf4m/vfMxl4y8A4ODBQ1w6ZQaFOTto8KgBrGzEiBE899xzZsewjMWLFzNy
      5EizY1jCxRdfzBNPPGF2jO84457AnmY3D9z3CxY89RLZe77A54xi9OjzyD2SSZ++A8g8dIS4
      WDvh7bpCczUtjmiS4qNoaqihuLyJxBgbW7btoEvPfgzq25OM/XvpO3AIh/fuZ/CIYWRlZtMl
      KZ7Pt+4gOS2dYQP6aIN5EZFz5IwFkJ+VwarPD/HLW6/HadeBWUQkmJyxAEREJHjpQTAREYtS
      AYiIWJQKQETEolQAIiIWpQIQEbEoFYCIiEWpAERELEoFICJiUSoAERGLUgGIiFiUCkBExKLO
      uiXk0jdfZcO6f5BxpJjtWzfRUl/JvoyDLH/nbU7VNf/gAPVlObz90WbtBiYico6ddSugA3u3
      cUnKbCpL8vntYw8zfeplbNxznNT2CQy7eAp7Nn5IxrFSrpt9PZm7dnPJxFF8tH4Hk8cOYcvh
      YhoLMskpqePam27E1VTJ2+8up0ufgcy4YiJL//o6JSeOc9LelwFJsHrdF4yZOIXRI/ujVaFF
      RFqXY+HChQvP9BvW/eMjPF4vztgeNJQf5adTJlHREoLN3UB8NDz3xnouH53Oc0uWk79/OxER
      NubOf5aeiSF8tnYDR6ocTB+Xzh9ffJ+tny3jspk/4/O/vcLu7CMUVNsZ3i2WvLpQNix9i+ET
      J1JQUMTIoQO1L4CISCv7X18DCA2LICY2mk4dEoiNi8Nhh/qqEgzcFJfX0Ce1G+NHDeGpZ97m
      mimj+OOStVzYtzNDho9gyLDz8NY3UN8cwtAhAzh/WDpZx/IYMHAYY8aPAwxmzb6GQzs28/Ga
      TZoOEhE5B85aABGREYSGheN0OinLL+Dzw8V8unIltd4Q0odfTFRLPbt3bscVm8CEKy7FGxbB
      rKnjie/UmYmTZ7DmnRf4xS/vYdyVk5g6fhC333Yrf/00i0fuvZ2P3niau3/9JOHhoezcsZ6K
      2iY6tGt3Ln5uERHLO8uGMAaBgPHVfLyNQMAPNjtGwI/d7sBm+/JjXp+fUJfry68wDGw22+n/
      BgJ+fL4ALlcIAB6PB6czBLvdht/vJ2AYOB1ObDaDlhYPLpcLu103J/1QDQ0N+Hw+s2OISBum
      HcGCVHl5Oc3NP/wurXOpurqavLw8hg0bZnYUS9i3bx+pqanEx8ebHSXolZWVUV5ezsCBA82O
      8i0qABERi9Jci4iIRakAREQsSgUgImJRKgAREYtSAYiIWJQKQETEolQAIiIWpQIQEbEoFYCI
      iEWpAERELEoFICJiUSoAERGLUgGIiFiUCkBExKL+P4IsyeQ8Md3nAAAAAElFTkSuQmCC
    </thumbnail>
  </thumbnails>
</workbook>
