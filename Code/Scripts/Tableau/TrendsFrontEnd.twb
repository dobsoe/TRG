<?xml version='1.0' encoding='utf-8' ?>

<workbook source-platform='mac' version='8.3' xmlns:user='http://www.tableausoftware.com/xml/user'>
  <!-- build 8200.14.0720.2105                                -->
  <preferences>
  </preferences>
  <style-theme name='modern' />
  <datasources>
    <datasource hasconnection='false' inline='true' name='Parameters' version='8.3'>
      <aliases enabled='yes' />
      <column caption='1' datatype='real' name='[Parameter 1]' param-domain-type='any' role='measure' type='quantitative' value='1.0'>
        <calculation class='tableau' formula='1.0' />
      </column>
      <column alias='Increasing subcategories' caption='IsIncreasing' datatype='integer' name='[Parameter 2]' param-domain-type='list' role='measure' type='quantitative' value='1'>
        <calculation class='tableau' formula='1' />
        <aliases>
          <alias key='0' value='Declining subcategories' />
          <alias key='1' value='Increasing subcategories' />
        </aliases>
        <members>
          <member alias='Increasing subcategories' value='1' />
          <member alias='Declining subcategories' value='0' />
        </members>
      </column>
      <column caption='Low statistics threshold' datatype='real' name='[Parameter 3]' param-domain-type='range' role='measure' type='quantitative' value='5.0'>
        <calculation class='tableau' formula='5.0' />
        <range granularity='1.0' max='20.0' min='0.0' />
      </column>
    </datasource>
    <datasource caption='trends 1' inline='true' name='greenplum.41866.548072407400' version='8.3'>
      <connection class='greenplum' dbname='demo' expected-driver-version='PostgreSQL Unicode' odbc-native-protocol='yes' port='9999' server='localhost' username='gpadmin'>
        <relation name='trends_master_weekly' table='[ds].[trends_master_weekly]' type='table' />
        <metadata-records>
          <metadata-record class='column'>
            <remote-name>numitems</remote-name>
            <remote-type>131</remote-type>
            <local-name>[numitems]</local-name>
            <parent-name>[trends_master_weekly]</parent-name>
            <remote-alias>numitems</remote-alias>
            <ordinal>1</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>28</precision>
            <scale>6</scale>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_NUMERIC&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_NUMERIC&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>batch_week</remote-name>
            <remote-type>130</remote-type>
            <local-name>[batch_week]</local-name>
            <parent-name>[trends_master_weekly]</parent-name>
            <remote-alias>batch_week</remote-alias>
            <ordinal>2</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <width>8190</width>
            <contains-null>true</contains-null>
            <cast-to-local-type>true</cast-to-local-type>
            <collation flag='0' name='LEN_RUS' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_WLONGVARCHAR&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_WCHAR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>country</remote-name>
            <remote-type>130</remote-type>
            <local-name>[country]</local-name>
            <parent-name>[trends_master_weekly]</parent-name>
            <remote-alias>country</remote-alias>
            <ordinal>3</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <width>8190</width>
            <contains-null>true</contains-null>
            <cast-to-local-type>true</cast-to-local-type>
            <collation flag='0' name='LEN_RUS' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_WLONGVARCHAR&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_WCHAR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>category</remote-name>
            <remote-type>130</remote-type>
            <local-name>[category]</local-name>
            <parent-name>[trends_master_weekly]</parent-name>
            <remote-alias>category</remote-alias>
            <ordinal>4</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <width>8190</width>
            <contains-null>true</contains-null>
            <cast-to-local-type>true</cast-to-local-type>
            <collation flag='0' name='LEN_RUS' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_WLONGVARCHAR&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_WCHAR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>subcategory</remote-name>
            <remote-type>130</remote-type>
            <local-name>[subcategory]</local-name>
            <parent-name>[trends_master_weekly]</parent-name>
            <remote-alias>subcategory</remote-alias>
            <ordinal>5</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <width>8190</width>
            <contains-null>true</contains-null>
            <cast-to-local-type>true</cast-to-local-type>
            <collation flag='0' name='LEN_RUS' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_WLONGVARCHAR&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_WCHAR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>taxonomiccolour</remote-name>
            <remote-type>130</remote-type>
            <local-name>[taxonomiccolour]</local-name>
            <parent-name>[trends_master_weekly]</parent-name>
            <remote-alias>taxonomiccolour</remote-alias>
            <ordinal>6</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <width>8190</width>
            <contains-null>true</contains-null>
            <cast-to-local-type>true</cast-to-local-type>
            <collation flag='0' name='LEN_RUS' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_WLONGVARCHAR&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_WCHAR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>markdown</remote-name>
            <remote-type>3</remote-type>
            <local-name>[markdown]</local-name>
            <parent-name>[trends_master_weekly]</parent-name>
            <remote-alias>markdown</remote-alias>
            <ordinal>7</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <precision>10</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_INTEGER&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_SLONG&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>newin_7</remote-name>
            <remote-type>3</remote-type>
            <local-name>[newin_7]</local-name>
            <parent-name>[trends_master_weekly]</parent-name>
            <remote-alias>newin_7</remote-alias>
            <ordinal>8</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <precision>10</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_INTEGER&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_SLONG&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>newin_30</remote-name>
            <remote-type>3</remote-type>
            <local-name>[newin_30]</local-name>
            <parent-name>[trends_master_weekly]</parent-name>
            <remote-alias>newin_30</remote-alias>
            <ordinal>9</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <precision>10</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_INTEGER&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_SLONG&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>retailername</remote-name>
            <remote-type>130</remote-type>
            <local-name>[retailername]</local-name>
            <parent-name>[trends_master_weekly]</parent-name>
            <remote-alias>retailername</remote-alias>
            <ordinal>10</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <width>8190</width>
            <contains-null>true</contains-null>
            <cast-to-local-type>true</cast-to-local-type>
            <collation flag='0' name='LEN_RUS' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_WLONGVARCHAR&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_WCHAR&quot;</attribute>
            </attributes>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column caption='Ratio' datatype='real' default-format='p0.00%' name='[Calculation1 1 1]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='if([Calculation3 1 1]&gt;[Parameters].[Parameter 3]) then (([Calculation3 1 1]/[trends_master_weekly (ds.trends_master_weekly) (demo) (copy)].[Calculation5])/([Calculation1]/[trends_master_weekly (ds.trends_master_weekly) (demo) (copy)].[Calculation_7970814111018179]))&#10;else 0&#10;end' scope-isolation='false'>
          <table-calc ordering-type='Rows' />
        </calculation>
      </column>
      <column caption='Counts_all_subcat' datatype='real' default-format='p0.00%' name='[Calculation1]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='WINDOW_SUM(SUM([numitems]), 0, 0)' scope-isolation='false'>
          <table-calc ordering-type='Rows' />
        </calculation>
      </column>
      <column caption='Counts_sel_subcat' datatype='real' default-format='p0.00%' name='[Calculation3 1 1]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='if [Parameters].[Parameter 2] = 1 then WINDOW_SUM(SUM([newin_7]*[numitems]), 0, 0)&#10;elseif [Parameters].[Parameter 2] = 0 then WINDOW_SUM(SUM([markdown]*[numitems]), 0, 0)&#10;else 0&#10;end' scope-isolation='false'>
          <table-calc ordering-type='Rows' />
        </calculation>
      </column>
      <column caption='BinaryRatio' datatype='real' name='[Calculation_0970814164744604]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='if [Calculation1 1 1] &gt; 1 then [Calculation1 1 1] else 0 end' scope-isolation='false'>
          <table-calc ordering-type='Rows' />
        </calculation>
      </column>
      <column datatype='integer' name='[Number of Records]' role='measure' type='quantitative' user:auto-column='numrec'>
        <calculation class='tableau' formula='1' />
      </column>
      <column caption='Category' datatype='string' name='[category]' role='dimension' type='nominal'>
      </column>
      <column caption='Country' datatype='string' name='[country]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal'>
      </column>
      <column caption='Markdown' datatype='integer' name='[markdown]' role='measure' type='quantitative'>
      </column>
      <column caption='Newin 30' datatype='integer' name='[newin_30]' role='measure' type='quantitative'>
      </column>
      <column caption='Newin 7' datatype='integer' name='[newin_7]' role='measure' type='quantitative'>
      </column>
      <column caption='Numitems' datatype='real' name='[numitems]' role='measure' type='quantitative'>
      </column>
      <column caption='Retailername' datatype='string' name='[retailername]' role='dimension' type='nominal'>
      </column>
      <column caption='Subcategory' datatype='string' name='[subcategory]' role='dimension' type='nominal'>
      </column>
      <column caption='Taxonomiccolour' datatype='string' name='[taxonomiccolour]' role='dimension' type='nominal'>
      </column>
      <column-instance column='[subcategory]' derivation='None' name='[none:subcategory:nk]' pivot='key' type='nominal' />
      <column-instance column='[Calculation1]' derivation='User' name='[usr:Calculation1:qk:1]' pivot='key' type='quantitative'>
        <table-calc ordering-type='Rows' />
      </column-instance>
      <extract count='-1' enabled='true' units='records'>
        <connection class='dataengine' dbname='/Users/elliedobson/Documents/Work/Customers/TRG/Code/ExtractedData/trends_master_weekly (ds.trends_master_weekly) (demo).tde' schema='Extract' tablename='Extract' update-time='08/18/2014 02:11:29 PM'>
          <relation name='Extract' table='[Extract].[Extract]' type='table' />
          <calculations>
            <calculation column='[Number of Records]' formula='1' />
          </calculations>
          <refresh>
            <refresh-event add-from-file-path='' increment-value='%null%' refresh-type='create' rows-inserted='6257681' timestamp-start='2014-08-18 14:11:29.797' />
          </refresh>
          <metadata-records>
            <metadata-record class='column'>
              <remote-name>Number of Records</remote-name>
              <remote-type>16</remote-type>
              <local-name>[Number of Records]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Number of Records</remote-alias>
              <ordinal>0</ordinal>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>1</approx-count>
              <contains-null>false</contains-null>
              <statistics>
                <statistic aggregation='Min' datatype='integer'>1</statistic>
                <statistic aggregation='Max' datatype='integer'>1</statistic>
              </statistics>
              <attributes>
                <attribute datatype='string' name='DebugRemoteMetadata (ordered)'>&quot;asc&quot;</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>1</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;sint8&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>batch_week</remote-name>
              <remote-type>129</remote-type>
              <local-name>[batch_week]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>batch_week</remote-alias>
              <ordinal>1</ordinal>
              <family>trends_master_weekly</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>40</approx-count>
              <scale>1</scale>
              <width>100</width>
              <contains-null>false</contains-null>
              <collation flag='0' name='LEN_RUS' />
              <statistics>
                <statistic aggregation='Min' datatype='string'>&quot;2013.44&quot;</statistic>
                <statistic aggregation='Max' datatype='string'>&quot;2014.30&quot;</statistic>
              </statistics>
              <attributes>
                <attribute datatype='string' name='DebugRemoteCollation'>&quot;en_US&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;heap&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>400</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (sort-position)'>3</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (sort-sense)'>&quot;asc&quot;</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>2</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;str&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>category</remote-name>
              <remote-type>129</remote-type>
              <local-name>[category]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>category</remote-alias>
              <ordinal>2</ordinal>
              <family>trends_master_weekly</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>30</approx-count>
              <scale>1</scale>
              <width>100</width>
              <contains-null>false</contains-null>
              <collation flag='0' name='LEN_RUS' />
              <statistics>
                <statistic aggregation='Min' datatype='string'>&quot;bags&quot;</statistic>
                <statistic aggregation='Max' datatype='string'>&quot;watches&quot;</statistic>
              </statistics>
              <attributes>
                <attribute datatype='string' name='DebugRemoteCollation'>&quot;en_US&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;heap&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>400</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (sort-position)'>2</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (sort-sense)'>&quot;asc&quot;</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>2</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;str&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>country</remote-name>
              <remote-type>129</remote-type>
              <local-name>[country]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>country</remote-alias>
              <ordinal>3</ordinal>
              <family>trends_master_weekly</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>3</approx-count>
              <scale>1</scale>
              <width>100</width>
              <contains-null>false</contains-null>
              <collation flag='0' name='LEN_RUS' />
              <statistics>
                <statistic aggregation='Min' datatype='string'>&quot;au&quot;</statistic>
                <statistic aggregation='Max' datatype='string'>&quot;us&quot;</statistic>
              </statistics>
              <attributes>
                <attribute datatype='string' name='DebugRemoteCollation'>&quot;en_US&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;heap&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (ordered)'>&quot;asc&quot;</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>400</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (sort-position)'>0</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (sort-sense)'>&quot;asc&quot;</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>1</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;str&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>markdown</remote-name>
              <remote-type>16</remote-type>
              <local-name>[markdown]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>markdown</remote-alias>
              <ordinal>4</ordinal>
              <family>trends_master_weekly</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>2</approx-count>
              <contains-null>false</contains-null>
              <statistics>
                <statistic aggregation='Min' datatype='integer'>0</statistic>
                <statistic aggregation='Max' datatype='integer'>1</statistic>
              </statistics>
              <attributes>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>1</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (sort-position)'>6</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (sort-sense)'>&quot;asc&quot;</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;sint8&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>newin_30</remote-name>
              <remote-type>16</remote-type>
              <local-name>[newin_30]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>newin_30</remote-alias>
              <ordinal>5</ordinal>
              <family>trends_master_weekly</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>2</approx-count>
              <contains-null>false</contains-null>
              <statistics>
                <statistic aggregation='Min' datatype='integer'>0</statistic>
                <statistic aggregation='Max' datatype='integer'>1</statistic>
              </statistics>
              <attributes>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>1</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (sort-position)'>7</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (sort-sense)'>&quot;asc&quot;</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;sint8&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>newin_7</remote-name>
              <remote-type>16</remote-type>
              <local-name>[newin_7]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>newin_7</remote-alias>
              <ordinal>6</ordinal>
              <family>trends_master_weekly</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>2</approx-count>
              <contains-null>false</contains-null>
              <statistics>
                <statistic aggregation='Min' datatype='integer'>0</statistic>
                <statistic aggregation='Max' datatype='integer'>1</statistic>
              </statistics>
              <attributes>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>1</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (sort-position)'>8</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (sort-sense)'>&quot;asc&quot;</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;sint8&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>numitems</remote-name>
              <remote-type>4</remote-type>
              <local-name>[numitems]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>numitems</remote-alias>
              <ordinal>7</ordinal>
              <family>trends_master_weekly</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>3850</approx-count>
              <contains-null>false</contains-null>
              <statistics>
                <statistic aggregation='Min' datatype='real'>1.0</statistic>
                <statistic aggregation='Max' datatype='real'>79736.0</statistic>
              </statistics>
              <attributes>
                <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;array&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (sort-position)'>9</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (sort-sense)'>&quot;asc&quot;</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>2</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;float&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>retailername</remote-name>
              <remote-type>129</remote-type>
              <local-name>[retailername]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>retailername</remote-alias>
              <ordinal>8</ordinal>
              <family>trends_master_weekly</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>89</approx-count>
              <scale>1</scale>
              <width>100</width>
              <contains-null>false</contains-null>
              <collation flag='0' name='LEN_RUS' />
              <statistics>
                <statistic aggregation='Min' datatype='string'>&quot;abercrombie &amp; fitch&quot;</statistic>
                <statistic aggregation='Max' datatype='string'>&quot;zara&quot;</statistic>
              </statistics>
              <attributes>
                <attribute datatype='string' name='DebugRemoteCollation'>&quot;en_US&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;heap&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>400</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (sort-position)'>4</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (sort-sense)'>&quot;asc&quot;</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>2</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;str&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>subcategory</remote-name>
              <remote-type>129</remote-type>
              <local-name>[subcategory]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>subcategory</remote-alias>
              <ordinal>9</ordinal>
              <family>trends_master_weekly</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>323</approx-count>
              <scale>1</scale>
              <width>100</width>
              <contains-null>false</contains-null>
              <collation flag='0' name='LEN_RUS' />
              <statistics>
                <statistic aggregation='Min' datatype='string'>&quot;3/4 lengths&quot;</statistic>
                <statistic aggregation='Max' datatype='string'>&quot;wreath &amp; crown&quot;</statistic>
              </statistics>
              <attributes>
                <attribute datatype='string' name='DebugRemoteCollation'>&quot;en_US&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;heap&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>400</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (sort-position)'>5</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (sort-sense)'>&quot;asc&quot;</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>2</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;str&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>taxonomiccolour</remote-name>
              <remote-type>129</remote-type>
              <local-name>[taxonomiccolour]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>taxonomiccolour</remote-alias>
              <ordinal>10</ordinal>
              <family>trends_master_weekly</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>16</approx-count>
              <scale>1</scale>
              <width>100</width>
              <contains-null>false</contains-null>
              <collation flag='0' name='LEN_RUS' />
              <statistics>
                <statistic aggregation='Min' datatype='string'>&quot;black&quot;</statistic>
                <statistic aggregation='Max' datatype='string'>&quot;yellow&quot;</statistic>
              </statistics>
              <attributes>
                <attribute datatype='string' name='DebugRemoteCollation'>&quot;en_US&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;heap&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>400</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (sort-position)'>1</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (sort-sense)'>&quot;asc&quot;</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>1</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;str&quot;</attribute>
              </attributes>
            </metadata-record>
          </metadata-records>
        </connection>
      </extract>
      <layout dim-ordering='alphabetic' dim-percentage='0.470244' measure-ordering='alphabetic' measure-percentage='0.376585' show-structure='true' />
      <style>
        <style-rule element='mark'>
          <encoding attr='color' field='[none:subcategory:nk]&#10;[:Measure Names]' type='palette'>
            <map-pri to='multiordinal_blue'>
              <bucket>&quot;boyfriend jeans&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_brown'>
              <bucket>&quot;flare jeans&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_gold'>
              <bucket>&quot;bootcut&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_gray'>
              <bucket>&quot;crop jeans&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_green'>
              <bucket>&quot;western &amp; rider jacket&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_orange'>
              <bucket>&quot;skinny&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_pink'>
              <bucket>&quot;unclassified&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_purple'>
              <bucket>&quot;loose fit jeans&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_red'>
              <bucket>&quot;carrot jeans&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_teal'>
              <bucket>&quot;slim fit&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_teal'>
              <bucket>&quot;straight leg&quot;</bucket>
            </map-pri>
          </encoding>
          <encoding attr='color' field='[:Measure Names]' type='palette'>
            <map to='#1f77b4'>
              <bucket>&quot;[trends_master_weekly (ds.trends_master_weekly) (demo) (copy)].[usr:Calculation_7970814111018179:qk]&quot;</bucket>
            </map>
            <map to='#2ca02c'>
              <bucket>&quot;[trends_master_weekly (ds.trends_master_weekly) (demo) (copy)].[pcto:sum:newin_7:qk]&quot;</bucket>
            </map>
            <map to='#9467bd'>
              <bucket>&quot;[trends_master_weekly (ds.trends_master_weekly) (demo) (copy)].[usr:Calculation5:qk]&quot;</bucket>
            </map>
            <map to='#d62728'>
              <bucket>&quot;[trends_master_weekly (ds.trends_master_weekly) (demo) (copy)].[win:sum:newin_7:qk]&quot;</bucket>
            </map>
            <map to='#ff7f0e'>
              <bucket>&quot;[greenplum.41866.548072407400].[usr:Calculation1:qk:1]&quot;</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[none:subcategory:nk]' type='palette'>
            <map to='#17becf'>
              <bucket>&quot;basketball boots &amp; hi-tops&quot;</bucket>
            </map>
            <map to='#17becf'>
              <bucket>&quot;brogues &amp; wing tips&quot;</bucket>
            </map>
            <map to='#17becf'>
              <bucket>&quot;clogs&quot;</bucket>
            </map>
            <map to='#17becf'>
              <bucket>&quot;cold weather boots&quot;</bucket>
            </map>
            <map to='#17becf'>
              <bucket>&quot;fit &amp; flare dress&quot;</bucket>
            </map>
            <map to='#17becf'>
              <bucket>&quot;gilets &amp; bodywarmers&quot;</bucket>
            </map>
            <map to='#17becf'>
              <bucket>&quot;hawaiian shirt&quot;</bucket>
            </map>
            <map to='#17becf'>
              <bucket>&quot;knitted gloves&quot;</bucket>
            </map>
            <map to='#17becf'>
              <bucket>&quot;mukluks &amp; moccasin boots&quot;</bucket>
            </map>
            <map to='#17becf'>
              <bucket>&quot;nightdress&quot;</bucket>
            </map>
            <map to='#17becf'>
              <bucket>&quot;sling back&quot;</bucket>
            </map>
            <map to='#17becf'>
              <bucket>&quot;sports&quot;</bucket>
            </map>
            <map to='#17becf'>
              <bucket>&quot;sundress&quot;</bucket>
            </map>
            <map to='#17becf'>
              <bucket>&quot;trilby&quot;</bucket>
            </map>
            <map to='#17becf'>
              <bucket>&quot;umbrella &amp; parasol&quot;</bucket>
            </map>
            <map to='#17becf'>
              <bucket>&quot;woven scarf&quot;</bucket>
            </map>
            <map to='#1f77b4'>
              <bucket>&quot;3/4 lengths&quot;</bucket>
            </map>
            <map to='#1f77b4'>
              <bucket>&quot;baker boy &amp; news boy&quot;</bucket>
            </map>
            <map to='#1f77b4'>
              <bucket>&quot;boyfriend coat&quot;</bucket>
            </map>
            <map to='#1f77b4'>
              <bucket>&quot;cable&quot;</bucket>
            </map>
            <map to='#1f77b4'>
              <bucket>&quot;cargo trousers&quot;</bucket>
            </map>
            <map to='#1f77b4'>
              <bucket>&quot;cosmetic bag&quot;</bucket>
            </map>
            <map to='#1f77b4'>
              <bucket>&quot;flat boots&quot;</bucket>
            </map>
            <map to='#1f77b4'>
              <bucket>&quot;henley shirt&quot;</bucket>
            </map>
            <map to='#1f77b4'>
              <bucket>&quot;loungewear &quot;</bucket>
            </map>
            <map to='#1f77b4'>
              <bucket>&quot;maxi dress&quot;</bucket>
            </map>
            <map to='#1f77b4'>
              <bucket>&quot;mid-heeled boots&quot;</bucket>
            </map>
            <map to='#1f77b4'>
              <bucket>&quot;oxfords&quot;</bucket>
            </map>
            <map to='#1f77b4'>
              <bucket>&quot;shopper&quot;</bucket>
            </map>
            <map to='#1f77b4'>
              <bucket>&quot;sports sandal&quot;</bucket>
            </map>
            <map to='#1f77b4'>
              <bucket>&quot;wayfarer&quot;</bucket>
            </map>
            <map to='#1f77b4'>
              <bucket>&quot;wrap scarf&quot;</bucket>
            </map>
            <map to='#2ca02c'>
              <bucket>&quot;ankle boots&quot;</bucket>
            </map>
            <map to='#2ca02c'>
              <bucket>&quot;beret&quot;</bucket>
            </map>
            <map to='#2ca02c'>
              <bucket>&quot;bralets&quot;</bucket>
            </map>
            <map to='#2ca02c'>
              <bucket>&quot;chelsea boots&quot;</bucket>
            </map>
            <map to='#2ca02c'>
              <bucket>&quot;cowboy boots&quot;</bucket>
            </map>
            <map to='#2ca02c'>
              <bucket>&quot;duffle coat&quot;</bucket>
            </map>
            <map to='#2ca02c'>
              <bucket>&quot;eyelash&quot;</bucket>
            </map>
            <map to='#2ca02c'>
              <bucket>&quot;high-heeled shoes&quot;</bucket>
            </map>
            <map to='#2ca02c'>
              <bucket>&quot;lace dress&quot;</bucket>
            </map>
            <map to='#2ca02c'>
              <bucket>&quot;leather gloves&quot;</bucket>
            </map>
            <map to='#2ca02c'>
              <bucket>&quot;midi skirt&quot;</bucket>
            </map>
            <map to='#2ca02c'>
              <bucket>&quot;parka&quot;</bucket>
            </map>
            <map to='#2ca02c'>
              <bucket>&quot;riding boots&quot;</bucket>
            </map>
            <map to='#2ca02c'>
              <bucket>&quot;shirt dress&quot;</bucket>
            </map>
            <map to='#2ca02c'>
              <bucket>&quot;swing coat&quot;</bucket>
            </map>
            <map to='#2ca02c'>
              <bucket>&quot;tennis shoes&quot;</bucket>
            </map>
            <map to='#7f7f7f'>
              <bucket>&quot;bandeau top&quot;</bucket>
            </map>
            <map to='#7f7f7f'>
              <bucket>&quot;bodysuit&quot;</bucket>
            </map>
            <map to='#7f7f7f'>
              <bucket>&quot;calf length boots&quot;</bucket>
            </map>
            <map to='#7f7f7f'>
              <bucket>&quot;denim skirts&quot;</bucket>
            </map>
            <map to='#7f7f7f'>
              <bucket>&quot;fine jewellery&quot;</bucket>
            </map>
            <map to='#7f7f7f'>
              <bucket>&quot;floppy hat&quot;</bucket>
            </map>
            <map to='#7f7f7f'>
              <bucket>&quot;hair clips&quot;</bucket>
            </map>
            <map to='#7f7f7f'>
              <bucket>&quot;loungewear&quot;</bucket>
            </map>
            <map to='#7f7f7f'>
              <bucket>&quot;muff&quot;</bucket>
            </map>
            <map to='#7f7f7f'>
              <bucket>&quot;playsuit &amp; romper suit&quot;</bucket>
            </map>
            <map to='#7f7f7f'>
              <bucket>&quot;sheepskin &amp; shearling boots&quot;</bucket>
            </map>
            <map to='#7f7f7f'>
              <bucket>&quot;skater dress&quot;</bucket>
            </map>
            <map to='#7f7f7f'>
              <bucket>&quot;suspenders &amp; braces&quot;</bucket>
            </map>
            <map to='#7f7f7f'>
              <bucket>&quot;tulip skirts&quot;</bucket>
            </map>
            <map to='#7f7f7f'>
              <bucket>&quot;unclassified&quot;</bucket>
            </map>
            <map to='#7f7f7f'>
              <bucket>&quot;wide belt&quot;</bucket>
            </map>
            <map to='#8c564b'>
              <bucket>&quot;belt bag, fanny pack &amp; bumbag&quot;</bucket>
            </map>
            <map to='#8c564b'>
              <bucket>&quot;block-heeled boots&quot;</bucket>
            </map>
            <map to='#8c564b'>
              <bucket>&quot;brothel creepers &amp; flatforms&quot;</bucket>
            </map>
            <map to='#8c564b'>
              <bucket>&quot;dancing shoes&quot;</bucket>
            </map>
            <map to='#8c564b'>
              <bucket>&quot;deerstalker &amp; trapper hat&quot;</bucket>
            </map>
            <map to='#8c564b'>
              <bucket>&quot;fleece sweatshirt&quot;</bucket>
            </map>
            <map to='#8c564b'>
              <bucket>&quot;jeans belt&quot;</bucket>
            </map>
            <map to='#8c564b'>
              <bucket>&quot;loafers&quot;</bucket>
            </map>
            <map to='#8c564b'>
              <bucket>&quot;mirrored eyewear&quot;</bucket>
            </map>
            <map to='#8c564b'>
              <bucket>&quot;printed scarf&quot;</bucket>
            </map>
            <map to='#8c564b'>
              <bucket>&quot;prom dress&quot;</bucket>
            </map>
            <map to='#8c564b'>
              <bucket>&quot;satchel &amp; messenger&quot;</bucket>
            </map>
            <map to='#8c564b'>
              <bucket>&quot;slim fit&quot;</bucket>
            </map>
            <map to='#8c564b'>
              <bucket>&quot;sunglasses&quot;</bucket>
            </map>
            <map to='#8c564b'>
              <bucket>&quot;trench coat&quot;</bucket>
            </map>
            <map to='#8c564b'>
              <bucket>&quot;wedge shoes&quot;</bucket>
            </map>
            <map to='#9467bd'>
              <bucket>&quot;aviators&quot;</bucket>
            </map>
            <map to='#9467bd'>
              <bucket>&quot;block heel sandal&quot;</bucket>
            </map>
            <map to='#9467bd'>
              <bucket>&quot;circle skirts&quot;</bucket>
            </map>
            <map to='#9467bd'>
              <bucket>&quot;cloche&quot;</bucket>
            </map>
            <map to='#9467bd'>
              <bucket>&quot;culottes&quot;</bucket>
            </map>
            <map to='#9467bd'>
              <bucket>&quot;embellished belt&quot;</bucket>
            </map>
            <map to='#9467bd'>
              <bucket>&quot;hosiery&quot;</bucket>
            </map>
            <map to='#9467bd'>
              <bucket>&quot;leggings &amp; knit bottoms&quot;</bucket>
            </map>
            <map to='#9467bd'>
              <bucket>&quot;necklaces&quot;</bucket>
            </map>
            <map to='#9467bd'>
              <bucket>&quot;pegleg trousers&quot;</bucket>
            </map>
            <map to='#9467bd'>
              <bucket>&quot;pointelle&quot;</bucket>
            </map>
            <map to='#9467bd'>
              <bucket>&quot;safari jacket&quot;</bucket>
            </map>
            <map to='#9467bd'>
              <bucket>&quot;t-shirt dress&quot;</bucket>
            </map>
            <map to='#9467bd'>
              <bucket>&quot;tank top&quot;</bucket>
            </map>
            <map to='#9467bd'>
              <bucket>&quot;track &amp; sweatpants&quot;</bucket>
            </map>
            <map to='#9467bd'>
              <bucket>&quot;wedge boots&quot;</bucket>
            </map>
            <map to='#98df8a'>
              <bucket>&quot;ankle strap&quot;</bucket>
            </map>
            <map to='#98df8a'>
              <bucket>&quot;biker jacket&quot;</bucket>
            </map>
            <map to='#98df8a'>
              <bucket>&quot;boater&quot;</bucket>
            </map>
            <map to='#98df8a'>
              <bucket>&quot;carrot jeans&quot;</bucket>
            </map>
            <map to='#98df8a'>
              <bucket>&quot;chemise&quot;</bucket>
            </map>
            <map to='#98df8a'>
              <bucket>&quot;drawstring bag&quot;</bucket>
            </map>
            <map to='#98df8a'>
              <bucket>&quot;dungaree &amp; overalls&quot;</bucket>
            </map>
            <map to='#98df8a'>
              <bucket>&quot;fine gauge&quot;</bucket>
            </map>
            <map to='#98df8a'>
              <bucket>&quot;hobo bag&quot;</bucket>
            </map>
            <map to='#98df8a'>
              <bucket>&quot;leather jacket&quot;</bucket>
            </map>
            <map to='#98df8a'>
              <bucket>&quot;military coat&quot;</bucket>
            </map>
            <map to='#98df8a'>
              <bucket>&quot;pouch&quot;</bucket>
            </map>
            <map to='#98df8a'>
              <bucket>&quot;riding jacket&quot;</bucket>
            </map>
            <map to='#98df8a'>
              <bucket>&quot;swing top&quot;</bucket>
            </map>
            <map to='#98df8a'>
              <bucket>&quot;thigh-high boots&quot;</bucket>
            </map>
            <map to='#98df8a'>
              <bucket>&quot;wrap&quot;</bucket>
            </map>
            <map to='#9edae5'>
              <bucket>&quot;baskets&quot;</bucket>
            </map>
            <map to='#9edae5'>
              <bucket>&quot;bowling bag&quot;</bucket>
            </map>
            <map to='#9edae5'>
              <bucket>&quot;cargo shorts&quot;</bucket>
            </map>
            <map to='#9edae5'>
              <bucket>&quot;corsets &amp; bustier&quot;</bucket>
            </map>
            <map to='#9edae5'>
              <bucket>&quot;flares&quot;</bucket>
            </map>
            <map to='#9edae5'>
              <bucket>&quot;headbands&quot;</bucket>
            </map>
            <map to='#9edae5'>
              <bucket>&quot;kimono&quot;</bucket>
            </map>
            <map to='#9edae5'>
              <bucket>&quot;knitted scarf&quot;</bucket>
            </map>
            <map to='#9edae5'>
              <bucket>&quot;maxiskirt&quot;</bucket>
            </map>
            <map to='#9edae5'>
              <bucket>&quot;oversized eyewear&quot;</bucket>
            </map>
            <map to='#9edae5'>
              <bucket>&quot;shoe boots &amp; booties&quot;</bucket>
            </map>
            <map to='#9edae5'>
              <bucket>&quot;sports gloves&quot;</bucket>
            </map>
            <map to='#9edae5'>
              <bucket>&quot;sweater &amp; jumper dress&quot;</bucket>
            </map>
            <map to='#9edae5'>
              <bucket>&quot;turban&quot;</bucket>
            </map>
            <map to='#9edae5'>
              <bucket>&quot;wax jacket&quot;</bucket>
            </map>
            <map to='#aec7e8'>
              <bucket>&quot;alice bands&quot;</bucket>
            </map>
            <map to='#aec7e8'>
              <bucket>&quot;balaclava&quot;</bucket>
            </map>
            <map to='#aec7e8'>
              <bucket>&quot;bootcut&quot;</bucket>
            </map>
            <map to='#aec7e8'>
              <bucket>&quot;brooches, badges &amp; pins&quot;</bucket>
            </map>
            <map to='#aec7e8'>
              <bucket>&quot;cardigans&quot;</bucket>
            </map>
            <map to='#aec7e8'>
              <bucket>&quot;clutch bag&quot;</bucket>
            </map>
            <map to='#aec7e8'>
              <bucket>&quot;coat dress&quot;</bucket>
            </map>
            <map to='#aec7e8'>
              <bucket>&quot;document holder &amp; portfolio case&quot;</bucket>
            </map>
            <map to='#aec7e8'>
              <bucket>&quot;driving gloves&quot;</bucket>
            </map>
            <map to='#aec7e8'>
              <bucket>&quot;hidden heel&quot;</bucket>
            </map>
            <map to='#aec7e8'>
              <bucket>&quot;lace gloves&quot;</bucket>
            </map>
            <map to='#aec7e8'>
              <bucket>&quot;mid-heeled sandals&quot;</bucket>
            </map>
            <map to='#aec7e8'>
              <bucket>&quot;padded &amp; down coat&quot;</bucket>
            </map>
            <map to='#aec7e8'>
              <bucket>&quot;shoulder &amp; cross body bag&quot;</bucket>
            </map>
            <map to='#aec7e8'>
              <bucket>&quot;sports watch&quot;</bucket>
            </map>
            <map to='#aec7e8'>
              <bucket>&quot;tank dress&quot;</bucket>
            </map>
            <map to='#aec7e8'>
              <bucket>&quot;veil &amp; fascinator&quot;</bucket>
            </map>
            <map to='#aec7e8'>
              <bucket>&quot;vests&quot;</bucket>
            </map>
            <map to='#aec7e8'>
              <bucket>&quot;wrap skirt&quot;</bucket>
            </map>
            <map to='#bcbd22'>
              <bucket>&quot;biker coat&quot;</bucket>
            </map>
            <map to='#bcbd22'>
              <bucket>&quot;bodycon dress&quot;</bucket>
            </map>
            <map to='#bcbd22'>
              <bucket>&quot;bomber &amp; blouson jacket&quot;</bucket>
            </map>
            <map to='#bcbd22'>
              <bucket>&quot;cape&quot;</bucket>
            </map>
            <map to='#bcbd22'>
              <bucket>&quot;digital&quot;</bucket>
            </map>
            <map to='#bcbd22'>
              <bucket>&quot;fingerless gloves&quot;</bucket>
            </map>
            <map to='#bcbd22'>
              <bucket>&quot;harem pants&quot;</bucket>
            </map>
            <map to='#bcbd22'>
              <bucket>&quot;kimono top&quot;</bucket>
            </map>
            <map to='#bcbd22'>
              <bucket>&quot;macintosh &amp; rain coat&quot;</bucket>
            </map>
            <map to='#bcbd22'>
              <bucket>&quot;purse &amp; wallet&quot;</bucket>
            </map>
            <map to='#bcbd22'>
              <bucket>&quot;shell top&quot;</bucket>
            </map>
            <map to='#bcbd22'>
              <bucket>&quot;snowboots&quot;</bucket>
            </map>
            <map to='#bcbd22'>
              <bucket>&quot;straw hat&quot;</bucket>
            </map>
            <map to='#bcbd22'>
              <bucket>&quot;waist cincher&quot;</bucket>
            </map>
            <map to='#bcbd22'>
              <bucket>&quot;work boots&quot;</bucket>
            </map>
            <map to='#c49c94'>
              <bucket>&quot;biker boots&quot;</bucket>
            </map>
            <map to='#c49c94'>
              <bucket>&quot;board shorts&quot;</bucket>
            </map>
            <map to='#c49c94'>
              <bucket>&quot;bubble &amp; puff skirt&quot;</bucket>
            </map>
            <map to='#c49c94'>
              <bucket>&quot;deck &amp; boat shoes&quot;</bucket>
            </map>
            <map to='#c49c94'>
              <bucket>&quot;ear muffs&quot;</bucket>
            </map>
            <map to='#c49c94'>
              <bucket>&quot;flip-flops &amp; thongs&quot;</bucket>
            </map>
            <map to='#c49c94'>
              <bucket>&quot;gladiator sandals&quot;</bucket>
            </map>
            <map to='#c49c94'>
              <bucket>&quot;jodhpurs&quot;</bucket>
            </map>
            <map to='#c49c94'>
              <bucket>&quot;loose fit jeans&quot;</bucket>
            </map>
            <map to='#c49c94'>
              <bucket>&quot;mittens&quot;</bucket>
            </map>
            <map to='#c49c94'>
              <bucket>&quot;platform boots&quot;</bucket>
            </map>
            <map to='#c49c94'>
              <bucket>&quot;sheath dress&quot;</bucket>
            </map>
            <map to='#c49c94'>
              <bucket>&quot;skater skirts&quot;</bucket>
            </map>
            <map to='#c49c94'>
              <bucket>&quot;slip-ons&quot;</bucket>
            </map>
            <map to='#c49c94'>
              <bucket>&quot;visors&quot;</bucket>
            </map>
            <map to='#c49c94'>
              <bucket>&quot;wellington boots&quot;</bucket>
            </map>
            <map to='#c5b0d5'>
              <bucket>&quot;backpack&quot;</bucket>
            </map>
            <map to='#c5b0d5'>
              <bucket>&quot;block heel shoe&quot;</bucket>
            </map>
            <map to='#c5b0d5'>
              <bucket>&quot;city shorts&quot;</bucket>
            </map>
            <map to='#c5b0d5'>
              <bucket>&quot;cossack hat&quot;</bucket>
            </map>
            <map to='#c5b0d5'>
              <bucket>&quot;cut out boots&quot;</bucket>
            </map>
            <map to='#c5b0d5'>
              <bucket>&quot;espadrilles&quot;</bucket>
            </map>
            <map to='#c5b0d5'>
              <bucket>&quot;flare jeans&quot;</bucket>
            </map>
            <map to='#c5b0d5'>
              <bucket>&quot;hot pants&quot;</bucket>
            </map>
            <map to='#c5b0d5'>
              <bucket>&quot;lightweight scarf&quot;</bucket>
            </map>
            <map to='#c5b0d5'>
              <bucket>&quot;miniskirts&quot;</bucket>
            </map>
            <map to='#c5b0d5'>
              <bucket>&quot;pencil skirts&quot;</bucket>
            </map>
            <map to='#c5b0d5'>
              <bucket>&quot;pinafore dress&quot;</bucket>
            </map>
            <map to='#c5b0d5'>
              <bucket>&quot;poncho&quot;</bucket>
            </map>
            <map to='#c5b0d5'>
              <bucket>&quot;sarongs&quot;</bucket>
            </map>
            <map to='#c5b0d5'>
              <bucket>&quot;tankini&quot;</bucket>
            </map>
            <map to='#c5b0d5'>
              <bucket>&quot;trainers &amp; sneakers&quot;</bucket>
            </map>
            <map to='#c5b0d5'>
              <bucket>&quot;wedge sandals&quot;</bucket>
            </map>
            <map to='#c7c7c7'>
              <bucket>&quot;bangles &amp; cuffs&quot;</bucket>
            </map>
            <map to='#c7c7c7'>
              <bucket>&quot;bolero&quot;</bucket>
            </map>
            <map to='#c7c7c7'>
              <bucket>&quot;camisoles&quot;</bucket>
            </map>
            <map to='#c7c7c7'>
              <bucket>&quot;desert &amp; chukka boots&quot;</bucket>
            </map>
            <map to='#c7c7c7'>
              <bucket>&quot;fine watch&quot;</bucket>
            </map>
            <map to='#c7c7c7'>
              <bucket>&quot;hair ties&quot;</bucket>
            </map>
            <map to='#c7c7c7'>
              <bucket>&quot;kimono coat&quot;</bucket>
            </map>
            <map to='#c7c7c7'>
              <bucket>&quot;luggage &amp; suitcase&quot;</bucket>
            </map>
            <map to='#c7c7c7'>
              <bucket>&quot;plimsolls&quot;</bucket>
            </map>
            <map to='#c7c7c7'>
              <bucket>&quot;shell jacket&quot;</bucket>
            </map>
            <map to='#c7c7c7'>
              <bucket>&quot;slip dress&quot;</bucket>
            </map>
            <map to='#c7c7c7'>
              <bucket>&quot;snood&quot;</bucket>
            </map>
            <map to='#c7c7c7'>
              <bucket>&quot;stetson &amp; western&quot;</bucket>
            </map>
            <map to='#c7c7c7'>
              <bucket>&quot;tunic&quot;</bucket>
            </map>
            <map to='#c7c7c7'>
              <bucket>&quot;western &amp; rider jacket&quot;</bucket>
            </map>
            <map to='#c7c7c7'>
              <bucket>&quot;wide leg pants&quot;</bucket>
            </map>
            <map to='#d62728'>
              <bucket>&quot;anklets&quot;</bucket>
            </map>
            <map to='#d62728'>
              <bucket>&quot;bikinis/two-piece&quot;</bucket>
            </map>
            <map to='#d62728'>
              <bucket>&quot;bowler hat&quot;</bucket>
            </map>
            <map to='#d62728'>
              <bucket>&quot;chino&quot;</bucket>
            </map>
            <map to='#d62728'>
              <bucket>&quot;crop top&quot;</bucket>
            </map>
            <map to='#d62728'>
              <bucket>&quot;flat shoes&quot;</bucket>
            </map>
            <map to='#d62728'>
              <bucket>&quot;fluffy&quot;</bucket>
            </map>
            <map to='#d62728'>
              <bucket>&quot;holdall,weekend &amp; overnight bag&quot;</bucket>
            </map>
            <map to='#d62728'>
              <bucket>&quot;leather shorts&quot;</bucket>
            </map>
            <map to='#d62728'>
              <bucket>&quot;midi dress&quot;</bucket>
            </map>
            <map to='#d62728'>
              <bucket>&quot;military jacket&quot;</bucket>
            </map>
            <map to='#d62728'>
              <bucket>&quot;pea &amp; reefer jacket&quot;</bucket>
            </map>
            <map to='#d62728'>
              <bucket>&quot;rings&quot;</bucket>
            </map>
            <map to='#d62728'>
              <bucket>&quot;smock dress&quot;</bucket>
            </map>
            <map to='#d62728'>
              <bucket>&quot;strapless top&quot;</bucket>
            </map>
            <map to='#d62728'>
              <bucket>&quot;tiara&quot;</bucket>
            </map>
            <map to='#dbdb8d'>
              <bucket>&quot;baseball varsity jacket&quot;</bucket>
            </map>
            <map to='#dbdb8d'>
              <bucket>&quot;briefs &amp; panties&quot;</bucket>
            </map>
            <map to='#dbdb8d'>
              <bucket>&quot;card holder&quot;</bucket>
            </map>
            <map to='#dbdb8d'>
              <bucket>&quot;cocoon coat&quot;</bucket>
            </map>
            <map to='#dbdb8d'>
              <bucket>&quot;drop waist dress&quot;</bucket>
            </map>
            <map to='#dbdb8d'>
              <bucket>&quot;fur &amp; faux fur coat&quot;</bucket>
            </map>
            <map to='#dbdb8d'>
              <bucket>&quot;harrington &amp; golf jacket&quot;</bucket>
            </map>
            <map to='#dbdb8d'>
              <bucket>&quot;knee-high boots&quot;</bucket>
            </map>
            <map to='#dbdb8d'>
              <bucket>&quot;mary janes&quot;</bucket>
            </map>
            <map to='#dbdb8d'>
              <bucket>&quot;polo shirt&quot;</bucket>
            </map>
            <map to='#dbdb8d'>
              <bucket>&quot;skorts&quot;</bucket>
            </map>
            <map to='#dbdb8d'>
              <bucket>&quot;spectacles &amp; glasses&quot;</bucket>
            </map>
            <map to='#dbdb8d'>
              <bucket>&quot;strapless dress&quot;</bucket>
            </map>
            <map to='#dbdb8d'>
              <bucket>&quot;sun hat&quot;</bucket>
            </map>
            <map to='#dbdb8d'>
              <bucket>&quot;walking &amp; hiking boots&quot;</bucket>
            </map>
            <map to='#dbdb8d'>
              <bucket>&quot;worker &amp; utility jacket&quot;</bucket>
            </map>
            <map to='#e377c2'>
              <bucket>&quot;ballerina pumps &amp; ballet flats&quot;</bucket>
            </map>
            <map to='#e377c2'>
              <bucket>&quot;bras&quot;</bucket>
            </map>
            <map to='#e377c2'>
              <bucket>&quot;classic&quot;</bucket>
            </map>
            <map to='#e377c2'>
              <bucket>&quot;dressing gowns &amp; robes &quot;</bucket>
            </map>
            <map to='#e377c2'>
              <bucket>&quot;fascinator&quot;</bucket>
            </map>
            <map to='#e377c2'>
              <bucket>&quot;formal&quot;</bucket>
            </map>
            <map to='#e377c2'>
              <bucket>&quot;grab bag&quot;</bucket>
            </map>
            <map to='#e377c2'>
              <bucket>&quot;long length gloves&quot;</bucket>
            </map>
            <map to='#e377c2'>
              <bucket>&quot;moccasins&quot;</bucket>
            </map>
            <map to='#e377c2'>
              <bucket>&quot;platform sandals&quot;</bucket>
            </map>
            <map to='#e377c2'>
              <bucket>&quot;shapewear/shape suits&quot;</bucket>
            </map>
            <map to='#e377c2'>
              <bucket>&quot;shawl&quot;</bucket>
            </map>
            <map to='#e377c2'>
              <bucket>&quot;shift dress&quot;</bucket>
            </map>
            <map to='#e377c2'>
              <bucket>&quot;skinny&quot;</bucket>
            </map>
            <map to='#e377c2'>
              <bucket>&quot;slippers&quot;</bucket>
            </map>
            <map to='#e377c2'>
              <bucket>&quot;trunks&quot;</bucket>
            </map>
            <map to='#f7b6d2'>
              <bucket>&quot;bandeau&quot;</bucket>
            </map>
            <map to='#f7b6d2'>
              <bucket>&quot;briefcases&quot;</bucket>
            </map>
            <map to='#f7b6d2'>
              <bucket>&quot;clog boots&quot;</bucket>
            </map>
            <map to='#f7b6d2'>
              <bucket>&quot;denim shorts&quot;</bucket>
            </map>
            <map to='#f7b6d2'>
              <bucket>&quot;fedoras&quot;</bucket>
            </map>
            <map to='#f7b6d2'>
              <bucket>&quot;frame bag&quot;</bucket>
            </map>
            <map to='#f7b6d2'>
              <bucket>&quot;gypsy skirts&quot;</bucket>
            </map>
            <map to='#f7b6d2'>
              <bucket>&quot;keyring&quot;</bucket>
            </map>
            <map to='#f7b6d2'>
              <bucket>&quot;monk shoes&quot;</bucket>
            </map>
            <map to='#f7b6d2'>
              <bucket>&quot;platform shoes&quot;</bucket>
            </map>
            <map to='#f7b6d2'>
              <bucket>&quot;skinny belt&quot;</bucket>
            </map>
            <map to='#f7b6d2'>
              <bucket>&quot;slouch boots&quot;</bucket>
            </map>
            <map to='#f7b6d2'>
              <bucket>&quot;straight leg&quot;</bucket>
            </map>
            <map to='#f7b6d2'>
              <bucket>&quot;tube skirt&quot;</bucket>
            </map>
            <map to='#f7b6d2'>
              <bucket>&quot;western shirt&quot;</bucket>
            </map>
            <map to='#ff7f0e'>
              <bucket>&quot;all-in-one&quot;</bucket>
            </map>
            <map to='#ff7f0e'>
              <bucket>&quot;baseball cap&quot;</bucket>
            </map>
            <map to='#ff7f0e'>
              <bucket>&quot;boyfriend shirt&quot;</bucket>
            </map>
            <map to='#ff7f0e'>
              <bucket>&quot;cat-eye&quot;</bucket>
            </map>
            <map to='#ff7f0e'>
              <bucket>&quot;chunky&quot;</bucket>
            </map>
            <map to='#ff7f0e'>
              <bucket>&quot;court shoes &amp; pumps&quot;</bucket>
            </map>
            <map to='#ff7f0e'>
              <bucket>&quot;flat sandals&quot;</bucket>
            </map>
            <map to='#ff7f0e'>
              <bucket>&quot;high-heeled boots&quot;</bucket>
            </map>
            <map to='#ff7f0e'>
              <bucket>&quot;lace-up boots&quot;</bucket>
            </map>
            <map to='#ff7f0e'>
              <bucket>&quot;mid-heeled shoes&quot;</bucket>
            </map>
            <map to='#ff7f0e'>
              <bucket>&quot;padded jacket&quot;</bucket>
            </map>
            <map to='#ff7f0e'>
              <bucket>&quot;party dress&quot;</bucket>
            </map>
            <map to='#ff7f0e'>
              <bucket>&quot;slip&quot;</bucket>
            </map>
            <map to='#ff7f0e'>
              <bucket>&quot;swimsuits/one-piece&quot;</bucket>
            </map>
            <map to='#ff7f0e'>
              <bucket>&quot;tea dress&quot;</bucket>
            </map>
            <map to='#ff7f0e'>
              <bucket>&quot;tech covers&quot;</bucket>
            </map>
            <map to='#ff7f0e'>
              <bucket>&quot;visor&quot;</bucket>
            </map>
            <map to='#ff7f0e'>
              <bucket>&quot;wreath &amp; crown&quot;</bucket>
            </map>
            <map to='#ff9896'>
              <bucket>&quot;anorak&quot;</bucket>
            </map>
            <map to='#ff9896'>
              <bucket>&quot;blazer &amp; sportcoat&quot;</bucket>
            </map>
            <map to='#ff9896'>
              <bucket>&quot;bucket hat&quot;</bucket>
            </map>
            <map to='#ff9896'>
              <bucket>&quot;clutch bag - hard&quot;</bucket>
            </map>
            <map to='#ff9896'>
              <bucket>&quot;crop jeans&quot;</bucket>
            </map>
            <map to='#ff9896'>
              <bucket>&quot;dressing gowns &amp; robes&quot;</bucket>
            </map>
            <map to='#ff9896'>
              <bucket>&quot;earrings&quot;</bucket>
            </map>
            <map to='#ff9896'>
              <bucket>&quot;hoodies &amp; track tops&quot;</bucket>
            </map>
            <map to='#ff9896'>
              <bucket>&quot;jumpers &amp; sweaters&quot;</bucket>
            </map>
            <map to='#ff9896'>
              <bucket>&quot;leather skirts&quot;</bucket>
            </map>
            <map to='#ff9896'>
              <bucket>&quot;military shirt&quot;</bucket>
            </map>
            <map to='#ff9896'>
              <bucket>&quot;mini dress&quot;</bucket>
            </map>
            <map to='#ff9896'>
              <bucket>&quot;peasant blouse&quot;</bucket>
            </map>
            <map to='#ff9896'>
              <bucket>&quot;running shoes&quot;</bucket>
            </map>
            <map to='#ff9896'>
              <bucket>&quot;t-shirts &amp; tee&quot;</bucket>
            </map>
            <map to='#ff9896'>
              <bucket>&quot;tote&quot;</bucket>
            </map>
            <map to='#ffbb78'>
              <bucket>&quot;analog&quot;</bucket>
            </map>
            <map to='#ffbb78'>
              <bucket>&quot;beanie&quot;</bucket>
            </map>
            <map to='#ffbb78'>
              <bucket>&quot;boyfriend jeans&quot;</bucket>
            </map>
            <map to='#ffbb78'>
              <bucket>&quot;bracelets&quot;</bucket>
            </map>
            <map to='#ffbb78'>
              <bucket>&quot;charms&quot;</bucket>
            </map>
            <map to='#ffbb78'>
              <bucket>&quot;cover-ups&quot;</bucket>
            </map>
            <map to='#ffbb78'>
              <bucket>&quot;cropped&quot;</bucket>
            </map>
            <map to='#ffbb78'>
              <bucket>&quot;duffel bag&quot;</bucket>
            </map>
            <map to='#ffbb78'>
              <bucket>&quot;high-heeled sandals&quot;</bucket>
            </map>
            <map to='#ffbb78'>
              <bucket>&quot;laptop &amp; tablet bag&quot;</bucket>
            </map>
            <map to='#ffbb78'>
              <bucket>&quot;mules&quot;</bucket>
            </map>
            <map to='#ffbb78'>
              <bucket>&quot;para &amp; army boots&quot;</bucket>
            </map>
            <map to='#ffbb78'>
              <bucket>&quot;pyjamas&quot;</bucket>
            </map>
            <map to='#ffbb78'>
              <bucket>&quot;stole &amp; fur scarf&quot;</bucket>
            </map>
            <map to='#ffbb78'>
              <bucket>&quot;teddie&quot;</bucket>
            </map>
            <map to='#ffbb78'>
              <bucket>&quot;tunic dress&quot;</bucket>
            </map>
          </encoding>
        </style-rule>
      </style>
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;Reino Unido&quot;' />
      </semantic-values>
      <date-options start-of-week='monday' />
      <datasource-dependencies datasource='Parameters'>
        <column alias='Increasing subcategories' caption='IsIncreasing' datatype='integer' name='[Parameter 2]' param-domain-type='list' role='measure' type='quantitative' value='1'>
          <calculation class='tableau' formula='1' />
          <aliases>
            <alias key='0' value='Declining subcategories' />
            <alias key='1' value='Increasing subcategories' />
          </aliases>
          <members>
            <member alias='Increasing subcategories' value='1' />
            <member alias='Declining subcategories' value='0' />
          </members>
        </column>
        <column caption='Low statistics threshold' datatype='real' name='[Parameter 3]' param-domain-type='range' role='measure' type='quantitative' value='5.0'>
          <calculation class='tableau' formula='5.0' />
          <range granularity='1.0' max='20.0' min='0.0' />
        </column>
      </datasource-dependencies>
      <datasource-dependencies datasource='trends_master_weekly (ds.trends_master_weekly) (demo) (copy)'>
        <column caption='Counts_sel' datatype='real' name='[Calculation5]' role='measure' type='quantitative'>
          <calculation class='tableau' formula='if [Parameters].[Parameter 2] = 1 then WINDOW_SUM(SUM([newin_7]*[numitems]), 0, 0)&#10;elseif [Parameters].[Parameter 2] = 0 then WINDOW_SUM(SUM([markdown]*[numitems]), 0, 0)&#10;else 0&#10;end' scope-isolation='false'>
            <table-calc ordering-type='Rows' />
          </calculation>
        </column>
        <column caption='Counts_all' datatype='real' name='[Calculation_7970814111018179]' role='measure' type='quantitative'>
          <calculation class='tableau' formula='WINDOW_SUM(SUM([numitems]), 0, 0)' scope-isolation='false'>
            <table-calc ordering-type='Rows' />
          </calculation>
        </column>
        <column-instance column='[Calculation5]' derivation='User' name='[usr:Calculation5:qk]' pivot='key' type='quantitative'>
          <table-calc ordering-type='Rows' />
        </column-instance>
        <column-instance column='[Calculation_7970814111018179]' derivation='User' name='[usr:Calculation_7970814111018179:qk]' pivot='key' type='quantitative'>
          <table-calc ordering-type='Rows' />
        </column-instance>
      </datasource-dependencies>
    </datasource>
    <datasource caption='trends 2 (no subcat filter)' inline='true' name='trends_master_weekly (ds.trends_master_weekly) (demo) (copy)' version='8.3'>
      <connection class='greenplum' dbname='demo' expected-driver-version='PostgreSQL Unicode' odbc-native-protocol='yes' port='9999' server='localhost' username='gpadmin'>
        <relation name='trends_master_weekly' table='[ds].[trends_master_weekly]' type='table' />
        <metadata-records>
          <metadata-record class='column'>
            <remote-name>numitems</remote-name>
            <remote-type>131</remote-type>
            <local-name>[numitems]</local-name>
            <parent-name>[trends_master_weekly]</parent-name>
            <remote-alias>numitems</remote-alias>
            <ordinal>1</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>28</precision>
            <scale>6</scale>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_NUMERIC&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_NUMERIC&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>batch_week</remote-name>
            <remote-type>130</remote-type>
            <local-name>[batch_week]</local-name>
            <parent-name>[trends_master_weekly]</parent-name>
            <remote-alias>batch_week</remote-alias>
            <ordinal>2</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <width>8190</width>
            <contains-null>true</contains-null>
            <cast-to-local-type>true</cast-to-local-type>
            <collation flag='0' name='LEN_RUS' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_WLONGVARCHAR&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_WCHAR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>country</remote-name>
            <remote-type>130</remote-type>
            <local-name>[country]</local-name>
            <parent-name>[trends_master_weekly]</parent-name>
            <remote-alias>country</remote-alias>
            <ordinal>3</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <width>8190</width>
            <contains-null>true</contains-null>
            <cast-to-local-type>true</cast-to-local-type>
            <collation flag='0' name='LEN_RUS' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_WLONGVARCHAR&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_WCHAR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>category</remote-name>
            <remote-type>130</remote-type>
            <local-name>[category]</local-name>
            <parent-name>[trends_master_weekly]</parent-name>
            <remote-alias>category</remote-alias>
            <ordinal>4</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <width>8190</width>
            <contains-null>true</contains-null>
            <cast-to-local-type>true</cast-to-local-type>
            <collation flag='0' name='LEN_RUS' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_WLONGVARCHAR&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_WCHAR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>subcategory</remote-name>
            <remote-type>130</remote-type>
            <local-name>[subcategory]</local-name>
            <parent-name>[trends_master_weekly]</parent-name>
            <remote-alias>subcategory</remote-alias>
            <ordinal>5</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <width>8190</width>
            <contains-null>true</contains-null>
            <cast-to-local-type>true</cast-to-local-type>
            <collation flag='0' name='LEN_RUS' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_WLONGVARCHAR&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_WCHAR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>taxonomiccolour</remote-name>
            <remote-type>130</remote-type>
            <local-name>[taxonomiccolour]</local-name>
            <parent-name>[trends_master_weekly]</parent-name>
            <remote-alias>taxonomiccolour</remote-alias>
            <ordinal>6</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <width>8190</width>
            <contains-null>true</contains-null>
            <cast-to-local-type>true</cast-to-local-type>
            <collation flag='0' name='LEN_RUS' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_WLONGVARCHAR&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_WCHAR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>markdown</remote-name>
            <remote-type>3</remote-type>
            <local-name>[markdown]</local-name>
            <parent-name>[trends_master_weekly]</parent-name>
            <remote-alias>markdown</remote-alias>
            <ordinal>7</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <precision>10</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_INTEGER&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_SLONG&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>newin_7</remote-name>
            <remote-type>3</remote-type>
            <local-name>[newin_7]</local-name>
            <parent-name>[trends_master_weekly]</parent-name>
            <remote-alias>newin_7</remote-alias>
            <ordinal>8</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <precision>10</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_INTEGER&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_SLONG&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>newin_30</remote-name>
            <remote-type>3</remote-type>
            <local-name>[newin_30]</local-name>
            <parent-name>[trends_master_weekly]</parent-name>
            <remote-alias>newin_30</remote-alias>
            <ordinal>9</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <precision>10</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_INTEGER&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_SLONG&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>retailername</remote-name>
            <remote-type>130</remote-type>
            <local-name>[retailername]</local-name>
            <parent-name>[trends_master_weekly]</parent-name>
            <remote-alias>retailername</remote-alias>
            <ordinal>10</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <width>8190</width>
            <contains-null>true</contains-null>
            <cast-to-local-type>true</cast-to-local-type>
            <collation flag='0' name='LEN_RUS' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_WLONGVARCHAR&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_WCHAR&quot;</attribute>
            </attributes>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column caption='Counts_sel' datatype='real' name='[Calculation5]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='if [Parameters].[Parameter 2] = 1 then WINDOW_SUM(SUM([newin_7]*[numitems]), 0, 0)&#10;elseif [Parameters].[Parameter 2] = 0 then WINDOW_SUM(SUM([markdown]*[numitems]), 0, 0)&#10;else 0&#10;end' scope-isolation='false'>
          <table-calc ordering-type='Rows' />
        </calculation>
      </column>
      <column caption='Counts_all' datatype='real' name='[Calculation_7970814111018179]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='WINDOW_SUM(SUM([numitems]), 0, 0)' scope-isolation='false'>
          <table-calc ordering-type='Rows' />
        </calculation>
      </column>
      <column datatype='integer' name='[Number of Records]' role='measure' type='quantitative' user:auto-column='numrec'>
        <calculation class='tableau' formula='1' />
      </column>
      <column caption='Category' datatype='string' name='[category]' role='dimension' type='nominal'>
      </column>
      <column caption='Country' datatype='string' name='[country]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal'>
      </column>
      <column caption='Markdown' datatype='integer' name='[markdown]' role='measure' type='quantitative'>
      </column>
      <column caption='Newin 30' datatype='integer' name='[newin_30]' role='measure' type='quantitative'>
      </column>
      <column caption='Newin 7' datatype='integer' name='[newin_7]' role='measure' type='quantitative'>
      </column>
      <column caption='Numitems' datatype='real' name='[numitems]' role='measure' type='quantitative'>
      </column>
      <column caption='Retailername' datatype='string' name='[retailername]' role='dimension' type='nominal'>
      </column>
      <column caption='Subcategory' datatype='string' name='[subcategory]' role='dimension' type='nominal'>
      </column>
      <column caption='Taxonomiccolour' datatype='string' name='[taxonomiccolour]' role='dimension' type='nominal'>
      </column>
      <column-instance column='[subcategory]' derivation='None' name='[none:subcategory:nk]' pivot='key' type='nominal' />
      <extract count='-1' enabled='true' units='records'>
        <connection class='dataengine' dbname='/Users/elliedobson/Documents/Work/Customers/TRG/Code/ExtractedData/trends_master_weekly (ds.trends_master_weekly) (demo) copy 1.tde' schema='Extract' tablename='Extract' update-time='08/18/2014 02:11:29 PM'>
          <relation name='Extract' table='[Extract].[Extract]' type='table' />
          <calculations>
            <calculation column='[Number of Records]' formula='1' />
          </calculations>
          <refresh>
            <refresh-event add-from-file-path='' increment-value='%null%' refresh-type='create' rows-inserted='6257681' timestamp-start='2014-08-18 14:11:29.797' />
          </refresh>
          <metadata-records>
            <metadata-record class='column'>
              <remote-name>Number of Records</remote-name>
              <remote-type>16</remote-type>
              <local-name>[Number of Records]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Number of Records</remote-alias>
              <ordinal>0</ordinal>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>1</approx-count>
              <contains-null>false</contains-null>
              <statistics>
                <statistic aggregation='Min' datatype='integer'>1</statistic>
                <statistic aggregation='Max' datatype='integer'>1</statistic>
              </statistics>
              <attributes>
                <attribute datatype='string' name='DebugRemoteMetadata (ordered)'>&quot;asc&quot;</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>1</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;sint8&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>batch_week</remote-name>
              <remote-type>129</remote-type>
              <local-name>[batch_week]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>batch_week</remote-alias>
              <ordinal>1</ordinal>
              <family>trends_master_weekly</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>40</approx-count>
              <scale>1</scale>
              <width>100</width>
              <contains-null>false</contains-null>
              <collation flag='0' name='LEN_RUS' />
              <statistics>
                <statistic aggregation='Min' datatype='string'>&quot;2013.44&quot;</statistic>
                <statistic aggregation='Max' datatype='string'>&quot;2014.30&quot;</statistic>
              </statistics>
              <attributes>
                <attribute datatype='string' name='DebugRemoteCollation'>&quot;en_US&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;heap&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>400</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (sort-position)'>3</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (sort-sense)'>&quot;asc&quot;</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>2</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;str&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>category</remote-name>
              <remote-type>129</remote-type>
              <local-name>[category]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>category</remote-alias>
              <ordinal>2</ordinal>
              <family>trends_master_weekly</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>30</approx-count>
              <scale>1</scale>
              <width>100</width>
              <contains-null>false</contains-null>
              <collation flag='0' name='LEN_RUS' />
              <statistics>
                <statistic aggregation='Min' datatype='string'>&quot;bags&quot;</statistic>
                <statistic aggregation='Max' datatype='string'>&quot;watches&quot;</statistic>
              </statistics>
              <attributes>
                <attribute datatype='string' name='DebugRemoteCollation'>&quot;en_US&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;heap&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>400</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (sort-position)'>2</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (sort-sense)'>&quot;asc&quot;</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>2</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;str&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>country</remote-name>
              <remote-type>129</remote-type>
              <local-name>[country]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>country</remote-alias>
              <ordinal>3</ordinal>
              <family>trends_master_weekly</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>3</approx-count>
              <scale>1</scale>
              <width>100</width>
              <contains-null>false</contains-null>
              <collation flag='0' name='LEN_RUS' />
              <statistics>
                <statistic aggregation='Min' datatype='string'>&quot;au&quot;</statistic>
                <statistic aggregation='Max' datatype='string'>&quot;us&quot;</statistic>
              </statistics>
              <attributes>
                <attribute datatype='string' name='DebugRemoteCollation'>&quot;en_US&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;heap&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (ordered)'>&quot;asc&quot;</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>400</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (sort-position)'>0</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (sort-sense)'>&quot;asc&quot;</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>1</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;str&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>markdown</remote-name>
              <remote-type>16</remote-type>
              <local-name>[markdown]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>markdown</remote-alias>
              <ordinal>4</ordinal>
              <family>trends_master_weekly</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>2</approx-count>
              <contains-null>false</contains-null>
              <statistics>
                <statistic aggregation='Min' datatype='integer'>0</statistic>
                <statistic aggregation='Max' datatype='integer'>1</statistic>
              </statistics>
              <attributes>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>1</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (sort-position)'>6</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (sort-sense)'>&quot;asc&quot;</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;sint8&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>newin_30</remote-name>
              <remote-type>16</remote-type>
              <local-name>[newin_30]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>newin_30</remote-alias>
              <ordinal>5</ordinal>
              <family>trends_master_weekly</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>2</approx-count>
              <contains-null>false</contains-null>
              <statistics>
                <statistic aggregation='Min' datatype='integer'>0</statistic>
                <statistic aggregation='Max' datatype='integer'>1</statistic>
              </statistics>
              <attributes>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>1</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (sort-position)'>7</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (sort-sense)'>&quot;asc&quot;</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;sint8&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>newin_7</remote-name>
              <remote-type>16</remote-type>
              <local-name>[newin_7]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>newin_7</remote-alias>
              <ordinal>6</ordinal>
              <family>trends_master_weekly</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>2</approx-count>
              <contains-null>false</contains-null>
              <statistics>
                <statistic aggregation='Min' datatype='integer'>0</statistic>
                <statistic aggregation='Max' datatype='integer'>1</statistic>
              </statistics>
              <attributes>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>1</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (sort-position)'>8</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (sort-sense)'>&quot;asc&quot;</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;sint8&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>numitems</remote-name>
              <remote-type>4</remote-type>
              <local-name>[numitems]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>numitems</remote-alias>
              <ordinal>7</ordinal>
              <family>trends_master_weekly</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>3850</approx-count>
              <contains-null>false</contains-null>
              <statistics>
                <statistic aggregation='Min' datatype='real'>1.0</statistic>
                <statistic aggregation='Max' datatype='real'>79736.0</statistic>
              </statistics>
              <attributes>
                <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;array&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (sort-position)'>9</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (sort-sense)'>&quot;asc&quot;</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>2</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;float&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>retailername</remote-name>
              <remote-type>129</remote-type>
              <local-name>[retailername]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>retailername</remote-alias>
              <ordinal>8</ordinal>
              <family>trends_master_weekly</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>89</approx-count>
              <scale>1</scale>
              <width>100</width>
              <contains-null>false</contains-null>
              <collation flag='0' name='LEN_RUS' />
              <statistics>
                <statistic aggregation='Min' datatype='string'>&quot;abercrombie &amp; fitch&quot;</statistic>
                <statistic aggregation='Max' datatype='string'>&quot;zara&quot;</statistic>
              </statistics>
              <attributes>
                <attribute datatype='string' name='DebugRemoteCollation'>&quot;en_US&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;heap&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>400</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (sort-position)'>4</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (sort-sense)'>&quot;asc&quot;</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>2</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;str&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>subcategory</remote-name>
              <remote-type>129</remote-type>
              <local-name>[subcategory]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>subcategory</remote-alias>
              <ordinal>9</ordinal>
              <family>trends_master_weekly</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>323</approx-count>
              <scale>1</scale>
              <width>100</width>
              <contains-null>false</contains-null>
              <collation flag='0' name='LEN_RUS' />
              <statistics>
                <statistic aggregation='Min' datatype='string'>&quot;3/4 lengths&quot;</statistic>
                <statistic aggregation='Max' datatype='string'>&quot;wreath &amp; crown&quot;</statistic>
              </statistics>
              <attributes>
                <attribute datatype='string' name='DebugRemoteCollation'>&quot;en_US&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;heap&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>400</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (sort-position)'>5</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (sort-sense)'>&quot;asc&quot;</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>2</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;str&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>taxonomiccolour</remote-name>
              <remote-type>129</remote-type>
              <local-name>[taxonomiccolour]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>taxonomiccolour</remote-alias>
              <ordinal>10</ordinal>
              <family>trends_master_weekly</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>16</approx-count>
              <scale>1</scale>
              <width>100</width>
              <contains-null>false</contains-null>
              <collation flag='0' name='LEN_RUS' />
              <statistics>
                <statistic aggregation='Min' datatype='string'>&quot;black&quot;</statistic>
                <statistic aggregation='Max' datatype='string'>&quot;yellow&quot;</statistic>
              </statistics>
              <attributes>
                <attribute datatype='string' name='DebugRemoteCollation'>&quot;en_US&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;heap&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>400</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (sort-position)'>1</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (sort-sense)'>&quot;asc&quot;</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>1</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;str&quot;</attribute>
              </attributes>
            </metadata-record>
          </metadata-records>
        </connection>
      </extract>
      <layout dim-ordering='alphabetic' dim-percentage='0.470244' measure-ordering='alphabetic' measure-percentage='0.376585' show-structure='true' />
      <style>
        <style-rule element='mark'>
          <encoding attr='color' field='[none:subcategory:nk]' type='palette'>
            <map to='#17becf'>
              <bucket>&quot;fit &amp; flare dress&quot;</bucket>
            </map>
            <map to='#17becf'>
              <bucket>&quot;sundress&quot;</bucket>
            </map>
            <map to='#17becf'>
              <bucket>&quot;trilby&quot;</bucket>
            </map>
            <map to='#1f77b4'>
              <bucket>&quot;baker boy &amp; news boy&quot;</bucket>
            </map>
            <map to='#1f77b4'>
              <bucket>&quot;cable&quot;</bucket>
            </map>
            <map to='#1f77b4'>
              <bucket>&quot;maxi dress&quot;</bucket>
            </map>
            <map to='#2ca02c'>
              <bucket>&quot;beret&quot;</bucket>
            </map>
            <map to='#2ca02c'>
              <bucket>&quot;eyelash&quot;</bucket>
            </map>
            <map to='#2ca02c'>
              <bucket>&quot;lace dress&quot;</bucket>
            </map>
            <map to='#2ca02c'>
              <bucket>&quot;shirt dress&quot;</bucket>
            </map>
            <map to='#7f7f7f'>
              <bucket>&quot;floppy hat&quot;</bucket>
            </map>
            <map to='#7f7f7f'>
              <bucket>&quot;skater dress&quot;</bucket>
            </map>
            <map to='#7f7f7f'>
              <bucket>&quot;unclassified&quot;</bucket>
            </map>
            <map to='#8c564b'>
              <bucket>&quot;deerstalker &amp; trapper hat&quot;</bucket>
            </map>
            <map to='#8c564b'>
              <bucket>&quot;prom dress&quot;</bucket>
            </map>
            <map to='#8c564b'>
              <bucket>&quot;slim fit&quot;</bucket>
            </map>
            <map to='#9467bd'>
              <bucket>&quot;cloche&quot;</bucket>
            </map>
            <map to='#9467bd'>
              <bucket>&quot;pointelle&quot;</bucket>
            </map>
            <map to='#9467bd'>
              <bucket>&quot;t-shirt dress&quot;</bucket>
            </map>
            <map to='#98df8a'>
              <bucket>&quot;boater&quot;</bucket>
            </map>
            <map to='#98df8a'>
              <bucket>&quot;carrot jeans&quot;</bucket>
            </map>
            <map to='#98df8a'>
              <bucket>&quot;fine gauge&quot;</bucket>
            </map>
            <map to='#98df8a'>
              <bucket>&quot;wrap&quot;</bucket>
            </map>
            <map to='#9edae5'>
              <bucket>&quot;kimono&quot;</bucket>
            </map>
            <map to='#9edae5'>
              <bucket>&quot;sweater &amp; jumper dress&quot;</bucket>
            </map>
            <map to='#9edae5'>
              <bucket>&quot;turban&quot;</bucket>
            </map>
            <map to='#aec7e8'>
              <bucket>&quot;balaclava&quot;</bucket>
            </map>
            <map to='#aec7e8'>
              <bucket>&quot;bootcut&quot;</bucket>
            </map>
            <map to='#aec7e8'>
              <bucket>&quot;cardigans&quot;</bucket>
            </map>
            <map to='#aec7e8'>
              <bucket>&quot;coat dress&quot;</bucket>
            </map>
            <map to='#aec7e8'>
              <bucket>&quot;tank dress&quot;</bucket>
            </map>
            <map to='#aec7e8'>
              <bucket>&quot;veil &amp; fascinator&quot;</bucket>
            </map>
            <map to='#bcbd22'>
              <bucket>&quot;bodycon dress&quot;</bucket>
            </map>
            <map to='#bcbd22'>
              <bucket>&quot;straw hat&quot;</bucket>
            </map>
            <map to='#c49c94'>
              <bucket>&quot;ear muffs&quot;</bucket>
            </map>
            <map to='#c49c94'>
              <bucket>&quot;loose fit jeans&quot;</bucket>
            </map>
            <map to='#c49c94'>
              <bucket>&quot;sheath dress&quot;</bucket>
            </map>
            <map to='#c5b0d5'>
              <bucket>&quot;cossack hat&quot;</bucket>
            </map>
            <map to='#c5b0d5'>
              <bucket>&quot;flare jeans&quot;</bucket>
            </map>
            <map to='#c5b0d5'>
              <bucket>&quot;pinafore dress&quot;</bucket>
            </map>
            <map to='#c5b0d5'>
              <bucket>&quot;poncho&quot;</bucket>
            </map>
            <map to='#c7c7c7'>
              <bucket>&quot;slip dress&quot;</bucket>
            </map>
            <map to='#c7c7c7'>
              <bucket>&quot;stetson &amp; western&quot;</bucket>
            </map>
            <map to='#c7c7c7'>
              <bucket>&quot;western &amp; rider jacket&quot;</bucket>
            </map>
            <map to='#d62728'>
              <bucket>&quot;bowler hat&quot;</bucket>
            </map>
            <map to='#d62728'>
              <bucket>&quot;fluffy&quot;</bucket>
            </map>
            <map to='#d62728'>
              <bucket>&quot;midi dress&quot;</bucket>
            </map>
            <map to='#d62728'>
              <bucket>&quot;smock dress&quot;</bucket>
            </map>
            <map to='#dbdb8d'>
              <bucket>&quot;drop waist dress&quot;</bucket>
            </map>
            <map to='#dbdb8d'>
              <bucket>&quot;strapless dress&quot;</bucket>
            </map>
            <map to='#dbdb8d'>
              <bucket>&quot;sun hat&quot;</bucket>
            </map>
            <map to='#e377c2'>
              <bucket>&quot;fascinator&quot;</bucket>
            </map>
            <map to='#e377c2'>
              <bucket>&quot;shapewear/shape suits&quot;</bucket>
            </map>
            <map to='#e377c2'>
              <bucket>&quot;shift dress&quot;</bucket>
            </map>
            <map to='#e377c2'>
              <bucket>&quot;skinny&quot;</bucket>
            </map>
            <map to='#f7b6d2'>
              <bucket>&quot;fedoras&quot;</bucket>
            </map>
            <map to='#f7b6d2'>
              <bucket>&quot;straight leg&quot;</bucket>
            </map>
            <map to='#ff7f0e'>
              <bucket>&quot;baseball cap&quot;</bucket>
            </map>
            <map to='#ff7f0e'>
              <bucket>&quot;chunky&quot;</bucket>
            </map>
            <map to='#ff7f0e'>
              <bucket>&quot;party dress&quot;</bucket>
            </map>
            <map to='#ff7f0e'>
              <bucket>&quot;tea dress&quot;</bucket>
            </map>
            <map to='#ff7f0e'>
              <bucket>&quot;visor&quot;</bucket>
            </map>
            <map to='#ff9896'>
              <bucket>&quot;bucket hat&quot;</bucket>
            </map>
            <map to='#ff9896'>
              <bucket>&quot;crop jeans&quot;</bucket>
            </map>
            <map to='#ff9896'>
              <bucket>&quot;jumpers &amp; sweaters&quot;</bucket>
            </map>
            <map to='#ff9896'>
              <bucket>&quot;mini dress&quot;</bucket>
            </map>
            <map to='#ffbb78'>
              <bucket>&quot;beanie&quot;</bucket>
            </map>
            <map to='#ffbb78'>
              <bucket>&quot;boyfriend jeans&quot;</bucket>
            </map>
            <map to='#ffbb78'>
              <bucket>&quot;cropped&quot;</bucket>
            </map>
            <map to='#ffbb78'>
              <bucket>&quot;tunic dress&quot;</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[none:subcategory:nk]&#10;[:Measure Names]' type='palette'>
            <map-pri to='multiordinal_blue'>
              <bucket>&quot;boyfriend jeans&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_brown'>
              <bucket>&quot;flare jeans&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_gold'>
              <bucket>&quot;bootcut&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_gray'>
              <bucket>&quot;crop jeans&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_green'>
              <bucket>&quot;western &amp; rider jacket&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_orange'>
              <bucket>&quot;skinny&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_pink'>
              <bucket>&quot;unclassified&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_purple'>
              <bucket>&quot;loose fit jeans&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_red'>
              <bucket>&quot;carrot jeans&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_teal'>
              <bucket>&quot;slim fit&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_teal'>
              <bucket>&quot;straight leg&quot;</bucket>
            </map-pri>
          </encoding>
        </style-rule>
      </style>
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;Reino Unido&quot;' />
      </semantic-values>
      <date-options start-of-week='monday' />
      <datasource-dependencies datasource='Parameters'>
        <column alias='Increasing subcategories' caption='IsIncreasing' datatype='integer' name='[Parameter 2]' param-domain-type='list' role='measure' type='quantitative' value='1'>
          <calculation class='tableau' formula='1' />
          <aliases>
            <alias key='0' value='Declining subcategories' />
            <alias key='1' value='Increasing subcategories' />
          </aliases>
          <members>
            <member alias='Increasing subcategories' value='1' />
            <member alias='Declining subcategories' value='0' />
          </members>
        </column>
      </datasource-dependencies>
    </datasource>
  </datasources>
  <datasource-relationships>
    <datasource-dependencies datasource='greenplum.41866.548072407400'>
      <column datatype='string' name='[batch_week]' role='dimension' type='nominal'>
      </column>
      <column caption='Category' datatype='string' name='[category]' role='dimension' type='nominal'>
      </column>
      <column caption='Country' datatype='string' name='[country]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal'>
      </column>
      <column-instance column='[batch_week]' derivation='None' name='[none:batch_week:nk]' pivot='key' type='nominal' />
      <column-instance column='[category]' derivation='None' name='[none:category:nk]' pivot='key' type='nominal' />
      <column-instance column='[country]' derivation='None' name='[none:country:nk]' pivot='key' type='nominal' />
      <column-instance column='[retailername]' derivation='None' name='[none:retailername:nk]' pivot='key' type='nominal' />
      <column-instance column='[taxonomiccolour]' derivation='None' name='[none:taxonomiccolour:nk]' pivot='key' type='nominal' />
      <column caption='Retailername' datatype='string' name='[retailername]' role='dimension' type='nominal'>
      </column>
      <column caption='Taxonomiccolour' datatype='string' name='[taxonomiccolour]' role='dimension' type='nominal'>
      </column>
    </datasource-dependencies>
    <datasource-dependencies datasource='trends_master_weekly (ds.trends_master_weekly) (demo) (copy)'>
      <column datatype='string' name='[batch_week]' role='dimension' type='nominal'>
      </column>
      <column caption='Category' datatype='string' name='[category]' role='dimension' type='nominal'>
      </column>
      <column caption='Country' datatype='string' name='[country]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal'>
      </column>
      <column-instance column='[batch_week]' derivation='None' name='[none:batch_week:nk]' pivot='key' type='nominal' />
      <column-instance column='[category]' derivation='None' name='[none:category:nk]' pivot='key' type='nominal' />
      <column-instance column='[country]' derivation='None' name='[none:country:nk]' pivot='key' type='nominal' />
      <column-instance column='[retailername]' derivation='None' name='[none:retailername:nk]' pivot='key' type='nominal' />
      <column-instance column='[taxonomiccolour]' derivation='None' name='[none:taxonomiccolour:nk]' pivot='key' type='nominal' />
      <column caption='Retailername' datatype='string' name='[retailername]' role='dimension' type='nominal'>
      </column>
      <column caption='Taxonomiccolour' datatype='string' name='[taxonomiccolour]' role='dimension' type='nominal'>
      </column>
    </datasource-dependencies>
    <datasource-relationship source='greenplum.41866.548072407400' target='trends_master_weekly (ds.trends_master_weekly) (demo) (copy)'>
      <column-mapping>
        <map key='[greenplum.41866.548072407400].[none:batch_week:nk]' value='[trends_master_weekly (ds.trends_master_weekly) (demo) (copy)].[none:batch_week:nk]' />
        <map key='[greenplum.41866.548072407400].[none:category:nk]' value='[trends_master_weekly (ds.trends_master_weekly) (demo) (copy)].[none:category:nk]' />
        <map key='[greenplum.41866.548072407400].[none:country:nk]' value='[trends_master_weekly (ds.trends_master_weekly) (demo) (copy)].[none:country:nk]' />
        <map key='[greenplum.41866.548072407400].[none:retailername:nk]' value='[trends_master_weekly (ds.trends_master_weekly) (demo) (copy)].[none:retailername:nk]' />
        <map key='[greenplum.41866.548072407400].[none:taxonomiccolour:nk]' value='[trends_master_weekly (ds.trends_master_weekly) (demo) (copy)].[none:taxonomiccolour:nk]' />
      </column-mapping>
    </datasource-relationship>
    <datasource-relationship source='trends_master_weekly (ds.trends_master_weekly) (demo) (copy)' target='trends_master_weekly (ds.trends_master_weekly) (demo) (copy)'>
      <column-mapping>
        <map key='[trends_master_weekly (ds.trends_master_weekly) (demo) (copy)].[none:batch_week:nk]' value='[trends_master_weekly (ds.trends_master_weekly) (demo) (copy)].[none:batch_week:nk]' />
        <map key='[trends_master_weekly (ds.trends_master_weekly) (demo) (copy)].[none:category:nk]' value='[trends_master_weekly (ds.trends_master_weekly) (demo) (copy)].[none:category:nk]' />
        <map key='[trends_master_weekly (ds.trends_master_weekly) (demo) (copy)].[none:country:nk]' value='[trends_master_weekly (ds.trends_master_weekly) (demo) (copy)].[none:country:nk]' />
        <map key='[trends_master_weekly (ds.trends_master_weekly) (demo) (copy)].[none:retailername:nk]' value='[trends_master_weekly (ds.trends_master_weekly) (demo) (copy)].[none:retailername:nk]' />
        <map key='[trends_master_weekly (ds.trends_master_weekly) (demo) (copy)].[none:taxonomiccolour:nk]' value='[trends_master_weekly (ds.trends_master_weekly) (demo) (copy)].[none:taxonomiccolour:nk]' />
      </column-mapping>
    </datasource-relationship>
  </datasource-relationships>
  <worksheets>
    <worksheet name='CondensedRatio'>
      <layout-options>
        <title>
          <formatted-text>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='trends 1' name='greenplum.41866.548072407400' />
            <datasource caption='trends 2 (no subcat filter)' name='trends_master_weekly (ds.trends_master_weekly) (demo) (copy)' />
            <datasource name='Parameters' />
          </datasources>
          <datasource-dependencies datasource='greenplum.41866.548072407400'>
            <column caption='BinaryRatio' datatype='real' name='[Calculation_0970814164744604]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='if [Calculation1 1 1] &gt; 1 then [Calculation1 1 1] else 0 end' scope-isolation='false'>
                <table-calc ordering-type='Rows' />
              </calculation>
            </column>
            <column datatype='string' name='[batch_week]' role='dimension' type='nominal'>
            </column>
            <column caption='Category' datatype='string' name='[category]' role='dimension' type='nominal'>
            </column>
            <column caption='Country' datatype='string' name='[country]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal'>
            </column>
            <column-instance column='[batch_week]' derivation='None' name='[none:batch_week:nk]' pivot='key' type='nominal' />
            <column-instance column='[category]' derivation='None' name='[none:category:nk]' pivot='key' type='nominal' />
            <column-instance column='[country]' derivation='None' name='[none:country:nk]' pivot='key' type='nominal' />
            <column-instance column='[retailername]' derivation='None' name='[none:retailername:nk]' pivot='key' type='nominal' />
            <column-instance column='[subcategory]' derivation='None' name='[none:subcategory:nk]' pivot='key' type='nominal' />
            <column-instance column='[taxonomiccolour]' derivation='None' name='[none:taxonomiccolour:nk]' pivot='key' type='nominal' />
            <column caption='Retailername' datatype='string' name='[retailername]' role='dimension' type='nominal'>
            </column>
            <column caption='Subcategory' datatype='string' name='[subcategory]' role='dimension' type='nominal'>
            </column>
            <column caption='Taxonomiccolour' datatype='string' name='[taxonomiccolour]' role='dimension' type='nominal'>
            </column>
            <column-instance column='[Calculation_0970814164744604]' derivation='User' name='[usr:Calculation_0970814164744604:qk]' pivot='key' type='quantitative'>
              <table-calc ordering-type='Rows' />
              <table-calc field='[greenplum.41866.548072407400].[Calculation3 1 1]' ordering-type='Rows' />
              <table-calc field='[trends_master_weekly (ds.trends_master_weekly) (demo) (copy)].[Calculation_7970814111018179]' ordering-type='Rows' />
              <table-calc field='[greenplum.41866.548072407400].[Calculation1 1 1]' ordering-type='Rows' />
              <table-calc field='[trends_master_weekly (ds.trends_master_weekly) (demo) (copy)].[Calculation5]' ordering-type='Rows' />
              <table-calc field='[greenplum.41866.548072407400].[Calculation1]' ordering-type='Rows' />
            </column-instance>
          </datasource-dependencies>
          <datasource-dependencies datasource='trends_master_weekly (ds.trends_master_weekly) (demo) (copy)'>
            <column caption='Category' datatype='string' name='[category]' role='dimension' type='nominal'>
            </column>
            <column caption='Country' datatype='string' name='[country]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal'>
            </column>
          </datasource-dependencies>
          <filter class='categorical' column='[greenplum.41866.548072407400].[none:category:nk]' filter-group='8'>
            <groupfilter function='member' level='[none:category:nk]' member='&quot;trousers/pants&quot;' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[greenplum.41866.548072407400].[none:country:nk]' filter-group='3'>
            <groupfilter function='member' level='[none:country:nk]' member='&quot;uk&quot;' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[greenplum.41866.548072407400].[none:retailername:nk]' filter-group='6'>
            <groupfilter function='union' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[none:retailername:nk]' member='&quot;h&amp;m&quot;' />
              <groupfilter function='member' level='[none:retailername:nk]' member='&quot;house of fraser&quot;' />
              <groupfilter function='member' level='[none:retailername:nk]' member='&quot;john lewis&quot;' />
              <groupfilter function='member' level='[none:retailername:nk]' member='&quot;topshop&quot;' />
            </groupfilter>
          </filter>
          <sort class='alphabetic' column='[greenplum.41866.548072407400].[none:retailername:nk]' direction='ASC' />
          <filter class='categorical' column='[greenplum.41866.548072407400].[none:subcategory:nk]' filter-group='7'>
            <groupfilter function='level-members' level='[none:subcategory:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[greenplum.41866.548072407400].[none:taxonomiccolour:nk]' filter-group='5'>
            <groupfilter function='level-members' level='[none:taxonomiccolour:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[greenplum.41866.548072407400].[none:country:nk]</column>
            <column>[greenplum.41866.548072407400].[none:category:nk]</column>
            <column>[greenplum.41866.548072407400].[none:taxonomiccolour:nk]</column>
            <column>[greenplum.41866.548072407400].[none:retailername:nk]</column>
            <column>[greenplum.41866.548072407400].[none:subcategory:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <format attr='render-fold-reversed' value='true' />
          </style-rule>
          <style-rule element='header'>
            <format attr='width' field='[greenplum.41866.548072407400].[none:retailername:nk]' value='372' />
            <format attr='border-style' data-class='subtotal' scope='cols' value='none' />
            <format attr='border-style' data-class='subtotal' scope='rows' value='none' />
          </style-rule>
          <style-rule element='field-labels-decoration'>
            <format attr='text-orientation' value='-90' />
          </style-rule>
          <style-rule element='label'>
            <format attr='display' field='[greenplum.41866.548072407400].[none:batch_week:nk]' value='false' />
            <format attr='font-size' field='[greenplum.41866.548072407400].[none:retailername:nk]' value='12' />
          </style-rule>
          <style-rule element='pane'>
            <format attr='border-style' data-class='subtotal' scope='cols' value='none' />
            <format attr='border-style' data-class='subtotal' scope='rows' value='none' />
          </style-rule>
          <style-rule element='worksheet'>
            <format attr='display-field-labels' scope='cols' value='false' />
            <format attr='display-field-labels' scope='rows' value='false' />
          </style-rule>
          <style-rule element='refline'>
            <format attr='fill-above' id='refline0' value='#cde5bc' />
            <format attr='fill-below' id='refline0' value='#ebd1d1' />
            <format attr='stroke-color' id='refline0' value='#000000' />
            <format attr='line-pattern' id='refline0' value='dashed' />
          </style-rule>
          <style-rule element='table-div'>
            <format attr='line-pattern' scope='cols' value='none' />
            <format attr='line-pattern' scope='rows' value='none' />
          </style-rule>
          <style-rule element='quick-filter'>
            <format attr='title' field='[greenplum.41866.548072407400].[none:subcategory:nk]' value='Possible subcategories&#10;' />
          </style-rule>
        </style>
        <panes>
          <pane>
            <view>
              <breakdown value='on' />
            </view>
            <mark class='Circle' />
            <encodings>
              <color column='[greenplum.41866.548072407400].[none:subcategory:nk]' />
              <size column='[greenplum.41866.548072407400].[usr:Calculation_0970814164744604:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-line-first' value='true' />
                <format attr='mark-labels-line-last' value='true' />
                <format attr='mark-labels-range-min' value='true' />
                <format attr='mark-labels-range-max' value='true' />
                <format attr='mark-labels-mode' value='all' />
                <format attr='mark-labels-range-scope' value='pane' />
                <format attr='mark-labels-range-field' value='' />
                <format attr='mark-labels-show' value='false' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[greenplum.41866.548072407400].[none:retailername:nk]</rows>
        <cols>[greenplum.41866.548072407400].[none:batch_week:nk]</cols>
        <join-lod-include-overrides>
          <column>[trends_master_weekly (ds.trends_master_weekly) (demo) (copy)].[category]</column>
          <column>[trends_master_weekly (ds.trends_master_weekly) (demo) (copy)].[country]</column>
        </join-lod-include-overrides>
        <show-full-range>
          <column>[greenplum.41866.548072407400].[batch_date]</column>
        </show-full-range>
      </table>
    </worksheet>
    <worksheet name='Counts_all'>
      <layout-options>
        <title>
          <formatted-text>
            <run fontalignment='0'>Product counts </run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='trends 1' name='greenplum.41866.548072407400' />
            <datasource caption='trends 2 (no subcat filter)' name='trends_master_weekly (ds.trends_master_weekly) (demo) (copy)' />
            <datasource name='Parameters' />
          </datasources>
          <datasource-dependencies datasource='Parameters'>
            <column caption='1' datatype='real' name='[Parameter 1]' param-domain-type='any' role='measure' type='quantitative' value='1.0'>
              <calculation class='tableau' formula='1.0' />
            </column>
          </datasource-dependencies>
          <datasource-dependencies datasource='greenplum.41866.548072407400'>
            <column caption='Counts_all_subcat' datatype='real' default-format='p0.00%' name='[Calculation1]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='WINDOW_SUM(SUM([numitems]), 0, 0)' scope-isolation='false'>
                <table-calc ordering-type='Rows' />
              </calculation>
            </column>
            <column caption='Counts_sel_subcat' datatype='real' default-format='p0.00%' name='[Calculation3 1 1]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='if [Parameters].[Parameter 2] = 1 then WINDOW_SUM(SUM([newin_7]*[numitems]), 0, 0)&#10;elseif [Parameters].[Parameter 2] = 0 then WINDOW_SUM(SUM([markdown]*[numitems]), 0, 0)&#10;else 0&#10;end' scope-isolation='false'>
                <table-calc ordering-type='Rows' />
              </calculation>
            </column>
            <column datatype='string' name='[batch_week]' role='dimension' type='nominal'>
            </column>
            <column caption='Category' datatype='string' name='[category]' role='dimension' type='nominal'>
            </column>
            <column caption='Country' datatype='string' name='[country]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal'>
            </column>
            <column-instance column='[batch_week]' derivation='None' name='[none:batch_week:nk]' pivot='key' type='nominal' />
            <column-instance column='[category]' derivation='None' name='[none:category:nk]' pivot='key' type='nominal' />
            <column-instance column='[country]' derivation='None' name='[none:country:nk]' pivot='key' type='nominal' />
            <column-instance column='[retailername]' derivation='None' name='[none:retailername:nk]' pivot='key' type='nominal' />
            <column-instance column='[subcategory]' derivation='None' name='[none:subcategory:nk]' pivot='key' type='nominal' />
            <column-instance column='[taxonomiccolour]' derivation='None' name='[none:taxonomiccolour:nk]' pivot='key' type='nominal' />
            <column caption='Numitems' datatype='real' name='[numitems]' role='measure' type='quantitative'>
            </column>
            <column caption='Retailername' datatype='string' name='[retailername]' role='dimension' type='nominal'>
            </column>
            <column caption='Subcategory' datatype='string' name='[subcategory]' role='dimension' type='nominal'>
            </column>
            <column-instance column='[numitems]' derivation='Sum' name='[sum:numitems:qk]' pivot='key' type='quantitative' />
            <column caption='Taxonomiccolour' datatype='string' name='[taxonomiccolour]' role='dimension' type='nominal'>
            </column>
            <column-instance column='[Calculation1]' derivation='User' name='[usr:Calculation1:qk:1]' pivot='key' type='quantitative'>
              <table-calc ordering-type='Rows' />
            </column-instance>
            <column-instance column='[Calculation3 1 1]' derivation='User' name='[usr:Calculation3 1 1:qk]' pivot='key' type='quantitative'>
              <table-calc ordering-type='Rows' />
            </column-instance>
          </datasource-dependencies>
          <datasource-dependencies datasource='trends_master_weekly (ds.trends_master_weekly) (demo) (copy)'>
            <column caption='Counts_sel' datatype='real' name='[Calculation5]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='if [Parameters].[Parameter 2] = 1 then WINDOW_SUM(SUM([newin_7]*[numitems]), 0, 0)&#10;elseif [Parameters].[Parameter 2] = 0 then WINDOW_SUM(SUM([markdown]*[numitems]), 0, 0)&#10;else 0&#10;end' scope-isolation='false'>
                <table-calc ordering-type='Rows' />
              </calculation>
            </column>
            <column caption='Counts_all' datatype='real' name='[Calculation_7970814111018179]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='WINDOW_SUM(SUM([numitems]), 0, 0)' scope-isolation='false'>
                <table-calc ordering-type='Rows' />
              </calculation>
            </column>
            <column caption='Category' datatype='string' name='[category]' role='dimension' type='nominal'>
            </column>
            <column caption='Country' datatype='string' name='[country]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal'>
            </column>
            <column caption='Retailername' datatype='string' name='[retailername]' role='dimension' type='nominal'>
            </column>
            <column caption='Taxonomiccolour' datatype='string' name='[taxonomiccolour]' role='dimension' type='nominal'>
            </column>
            <column-instance column='[Calculation5]' derivation='User' name='[usr:Calculation5:qk]' pivot='key' type='quantitative'>
              <table-calc ordering-type='Rows' />
            </column-instance>
            <column-instance column='[Calculation_7970814111018179]' derivation='User' name='[usr:Calculation_7970814111018179:qk]' pivot='key' type='quantitative'>
              <table-calc ordering-type='Rows' />
            </column-instance>
          </datasource-dependencies>
          <filter class='categorical' column='[greenplum.41866.548072407400].[none:category:nk]' filter-group='8'>
            <groupfilter function='member' level='[none:category:nk]' member='&quot;trousers/pants&quot;' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[greenplum.41866.548072407400].[none:country:nk]' filter-group='3'>
            <groupfilter function='member' level='[none:country:nk]' member='&quot;uk&quot;' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[greenplum.41866.548072407400].[none:retailername:nk]' filter-group='6'>
            <groupfilter function='union' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[none:retailername:nk]' member='&quot;h&amp;m&quot;' />
              <groupfilter function='member' level='[none:retailername:nk]' member='&quot;house of fraser&quot;' />
              <groupfilter function='member' level='[none:retailername:nk]' member='&quot;john lewis&quot;' />
              <groupfilter function='member' level='[none:retailername:nk]' member='&quot;topshop&quot;' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[greenplum.41866.548072407400].[none:subcategory:nk]' filter-group='7'>
            <groupfilter function='level-members' level='[none:subcategory:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <sort class='computed' column='[greenplum.41866.548072407400].[none:subcategory:nk]' direction='ASC' using='[greenplum.41866.548072407400].[sum:numitems:qk]'>
          </sort>
          <filter class='categorical' column='[greenplum.41866.548072407400].[none:taxonomiccolour:nk]' filter-group='5'>
            <groupfilter function='level-members' level='[none:taxonomiccolour:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[greenplum.41866.548072407400].[none:country:nk]</column>
            <column>[greenplum.41866.548072407400].[none:category:nk]</column>
            <column>[greenplum.41866.548072407400].[none:taxonomiccolour:nk]</column>
            <column>[greenplum.41866.548072407400].[none:retailername:nk]</column>
            <column>[greenplum.41866.548072407400].[none:subcategory:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <format attr='height' field='[greenplum.41866.548072407400].[none:batch_week:nk]' value='71' />
            <format attr='display' class='0' field='[trends_master_weekly (ds.trends_master_weekly) (demo) (copy)].[usr:Calculation_7970814111018179:qk]' scope='rows' value='false' />
            <format attr='subtitle' class='0' field='[trends_master_weekly (ds.trends_master_weekly) (demo) (copy)].[usr:Calculation5:qk]' scope='rows' value='' />
            <format attr='auto-subtitle' class='0' field='[trends_master_weekly (ds.trends_master_weekly) (demo) (copy)].[usr:Calculation5:qk]' scope='rows' value='true' />
            <format attr='display' class='0' field='[trends_master_weekly (ds.trends_master_weekly) (demo) (copy)].[usr:Calculation5:qk]' scope='rows' value='false' />
            <format attr='render-fold-reversed' value='true' />
            <format attr='display' class='0' field='[greenplum.41866.548072407400].[usr:Calculation1:qk:1]' scope='rows' value='true' />
            <encoding attr='space' class='0' field='[trends_master_weekly (ds.trends_master_weekly) (demo) (copy)].[usr:Calculation_7970814111018179:qk]' field-type='quantitative' fold='true' scope='rows' synchronized='true' type='space' />
            <format attr='title' class='0' field='[greenplum.41866.548072407400].[usr:Calculation1:qk:1]' scope='rows' value='Expected: Counts (all)' />
            <format attr='subtitle' class='0' field='[greenplum.41866.548072407400].[usr:Calculation1:qk:1]' scope='rows' value='' />
            <format attr='auto-subtitle' class='0' field='[greenplum.41866.548072407400].[usr:Calculation1:qk:1]' scope='rows' value='true' />
            <format attr='subtitle' class='0' field='[greenplum.41866.548072407400].[usr:Calculation3 1 1:qk]' scope='rows' value='' />
            <format attr='auto-subtitle' class='0' field='[greenplum.41866.548072407400].[usr:Calculation3 1 1:qk]' scope='rows' value='true' />
            <format attr='display' class='0' field='[greenplum.41866.548072407400].[usr:Calculation3 1 1:qk]' scope='rows' value='true' />
            <encoding attr='space' class='0' field='[trends_master_weekly (ds.trends_master_weekly) (demo) (copy)].[usr:Calculation5:qk]' field-type='quantitative' fold='true' scale='log' scope='rows' synchronized='true' type='space' />
            <format attr='title' class='0' field='[greenplum.41866.548072407400].[usr:Calculation3 1 1:qk]' scope='rows' value='Observed: Counts(newin/markdown)' />
            <format attr='width' field='[greenplum.41866.548072407400].[usr:Calculation1:qk:1]' value='64' />
            <format attr='width' field='[trends_master_weekly (ds.trends_master_weekly) (demo) (copy)].[usr:Calculation_7970814111018179:qk]' value='64' />
            <format attr='width' field='[greenplum.41866.548072407400].[usr:Calculation3 1 1:qk]' value='64' />
            <format attr='width' field='[trends_master_weekly (ds.trends_master_weekly) (demo) (copy)].[usr:Calculation5:qk]' value='64' />
          </style-rule>
          <style-rule element='cell'>
            <format attr='border-color' value='#000000' />
            <format attr='border-style' value='none' />
          </style-rule>
          <style-rule element='header'>
            <format attr='border-color' value='#000000' />
            <format attr='border-style' value='none' />
            <format attr='border-style' scope='cols' value='none' />
            <format attr='border-style' data-class='subtotal' value='none' />
          </style-rule>
          <style-rule element='label'>
            <format attr='text-orientation' field='[greenplum.41866.548072407400].[none:batch_week:nk]' value='-90' />
            <format attr='text-format' field='[trends_master_weekly (ds.trends_master_weekly) (demo) (copy)].[usr:Calculation_7970814111018179:qk]' value='N' />
            <format attr='text-format' field='[trends_master_weekly (ds.trends_master_weekly) (demo) (copy)].[usr:Calculation5:qk]' value='N' />
            <format attr='text-format' field='[greenplum.41866.548072407400].[usr:Calculation3 1 1:qk]' value='N' />
            <format attr='text-format' field='[greenplum.41866.548072407400].[usr:Calculation1:qk:1]' value='N' />
            <format attr='display' field='[greenplum.41866.548072407400].[none:batch_week:nk]' value='false' />
          </style-rule>
          <style-rule element='mark'>
            <encoding attr='color' field='[Parameters].[Parameter 1]' type='custom-interpolated'>
              <color-palette custom='true' name='' type='ordered-sequential'>
                <color>#cacaca</color>
                <color>#b5b5b5</color>
                <color>#a1a1a1</color>
                <color>#8d8d8d</color>
                <color>#797979</color>
                <color>#646464</color>
                <color>#505050</color>
                <color>#3c3c3c</color>
                <color>#282828</color>
                <color>#141414</color>
                <color>#000000</color>
              </color-palette>
            </encoding>
            <encoding attr='color' field='[trends_master_weekly (ds.trends_master_weekly) (demo) (copy)].[usr:Calculation5:qk]' max='0.0' min='0.0' type='custom-interpolated'>
              <color-palette custom='true' name='' type='ordered-diverging'>
                <color>#000000</color>
                <color>#212121</color>
                <color>#434343</color>
                <color>#656565</color>
                <color>#868686</color>
                <color>#a8a8a8</color>
                <color>#cacaca</color>
                <color>#a8a8a8</color>
                <color>#868686</color>
                <color>#646464</color>
                <color>#434343</color>
                <color>#212121</color>
                <color>#000000</color>
              </color-palette>
            </encoding>
            <encoding attr='color' field='[trends_master_weekly (ds.trends_master_weekly) (demo) (copy)].[usr:Calculation_7970814111018179:qk]' max='0.0' min='0.0' type='custom-interpolated'>
              <color-palette custom='true' name='' type='ordered-diverging'>
                <color>#000000</color>
                <color>#212121</color>
                <color>#434343</color>
                <color>#656565</color>
                <color>#868686</color>
                <color>#a8a8a8</color>
                <color>#cacaca</color>
                <color>#a8a8a8</color>
                <color>#868686</color>
                <color>#646464</color>
                <color>#434343</color>
                <color>#212121</color>
                <color>#000000</color>
              </color-palette>
            </encoding>
          </style-rule>
          <style-rule element='pane'>
            <format attr='border-color' value='#000000' />
            <format attr='border-width' value='1' />
            <format attr='border-style' value='none' />
            <format attr='border-style' data-class='subtotal' value='none' />
            <format attr='border-style' data-class='total' value='none' />
          </style-rule>
          <style-rule element='worksheet'>
            <format attr='display-field-labels' scope='cols' value='false' />
          </style-rule>
          <style-rule element='refline'>
            <format attr='fill-above' id='refline0' value='#00000000' />
            <format attr='fill-below' id='refline0' value='#00000000' />
            <format attr='stroke-color' id='refline0' value='#000000' />
            <format attr='line-pattern' id='refline0' value='dashed' />
          </style-rule>
          <style-rule element='table-div'>
            <format attr='line-pattern' scope='cols' value='solid' />
            <format attr='line-pattern' scope='rows' value='solid' />
          </style-rule>
          <style-rule element='header-div'>
            <format attr='line-pattern' scope='rows' value='none' />
            <format attr='line-pattern' scope='cols' value='solid' />
          </style-rule>
          <style-rule element='title'>
            <format attr='border-style' value='none' />
          </style-rule>
          <style-rule element='quick-filter'>
            <format attr='title' field='[greenplum.41866.548072407400].[none:country:nk]' value='Country&#10;'>
              <formatted-text>
                <run>Country&#10;</run>
              </formatted-text>
            </format>
          </style-rule>
        </style>
        <panes>
          <pane id='17'>
            <view>
              <breakdown value='on' />
            </view>
            <mark class='Line' />
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-show' value='false' />
                <format attr='mark-color' value='#820000' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='minwidth' value='1539' />
                <format attr='maxwidth' value='1539' />
                <format attr='minheight' value='216' />
                <format attr='maxheight' value='216' />
                <format attr='aspect' value='0' />
              </style-rule>
            </style>
          </pane>
          <pane id='26' y-axis-name='[trends_master_weekly (ds.trends_master_weekly) (demo) (copy)].[usr:Calculation_7970814111018179:qk]'>
            <view>
              <breakdown value='on' />
            </view>
            <mark class='Line' />
            <encodings>
              <color column='[trends_master_weekly (ds.trends_master_weekly) (demo) (copy)].[usr:Calculation_7970814111018179:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-show' value='false' />
                <format attr='mark-color' value='#820000' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='minwidth' value='1539' />
                <format attr='maxwidth' value='1539' />
                <format attr='minheight' value='294' />
                <format attr='maxheight' value='294' />
                <format attr='aspect' value='0' />
              </style-rule>
            </style>
          </pane>
          <pane id='27' y-axis-name='[trends_master_weekly (ds.trends_master_weekly) (demo) (copy)].[usr:Calculation5:qk]'>
            <view>
              <breakdown value='on' />
            </view>
            <mark class='Line' />
            <encodings>
              <color column='[trends_master_weekly (ds.trends_master_weekly) (demo) (copy)].[usr:Calculation5:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-show' value='false' />
                <format attr='mark-color' value='#820000' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='minwidth' value='1539' />
                <format attr='maxwidth' value='1539' />
                <format attr='minheight' value='216' />
                <format attr='maxheight' value='216' />
                <format attr='aspect' value='0' />
              </style-rule>
            </style>
          </pane>
          <pane id='30' y-axis-name='[greenplum.41866.548072407400].[usr:Calculation1:qk:1]'>
            <view>
              <breakdown value='on' />
            </view>
            <mark class='Bar' />
            <encodings>
              <color column='[greenplum.41866.548072407400].[none:subcategory:nk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-show' value='false' />
                <format attr='mark-color' value='#820000' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='minwidth' value='1539' />
                <format attr='maxwidth' value='1539' />
                <format attr='minheight' value='216' />
                <format attr='maxheight' value='216' />
                <format attr='aspect' value='0' />
              </style-rule>
            </style>
          </pane>
          <pane id='31' y-axis-name='[greenplum.41866.548072407400].[usr:Calculation3 1 1:qk]'>
            <view>
              <breakdown value='on' />
            </view>
            <mark class='Bar' />
            <encodings>
              <color column='[greenplum.41866.548072407400].[none:subcategory:nk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-show' value='false' />
                <format attr='mark-color' value='#820000' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='minwidth' value='1539' />
                <format attr='maxwidth' value='1539' />
                <format attr='minheight' value='216' />
                <format attr='maxheight' value='216' />
                <format attr='aspect' value='0' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>([greenplum.41866.548072407400].[usr:Calculation1:qk:1] + ([trends_master_weekly (ds.trends_master_weekly) (demo) (copy)].[usr:Calculation_7970814111018179:qk] + ([greenplum.41866.548072407400].[usr:Calculation3 1 1:qk] + [trends_master_weekly (ds.trends_master_weekly) (demo) (copy)].[usr:Calculation5:qk])))</rows>
        <cols>[greenplum.41866.548072407400].[none:batch_week:nk]</cols>
        <join-lod-include-overrides>
          <column>[trends_master_weekly (ds.trends_master_weekly) (demo) (copy)].[category]</column>
          <column>[trends_master_weekly (ds.trends_master_weekly) (demo) (copy)].[country]</column>
          <column>[trends_master_weekly (ds.trends_master_weekly) (demo) (copy)].[retailername]</column>
          <column>[trends_master_weekly (ds.trends_master_weekly) (demo) (copy)].[taxonomiccolour]</column>
        </join-lod-include-overrides>
        <percentages enabled='true' mode='row' />
      </table>
    </worksheet>
    <worksheet name='Ratio'>
      <table>
        <view>
          <datasources>
            <datasource caption='trends 1' name='greenplum.41866.548072407400' />
            <datasource caption='trends 2 (no subcat filter)' name='trends_master_weekly (ds.trends_master_weekly) (demo) (copy)' />
            <datasource name='Parameters' />
          </datasources>
          <datasource-dependencies datasource='greenplum.41866.548072407400'>
            <column caption='Ratio' datatype='real' default-format='p0.00%' name='[Calculation1 1 1]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='if([Calculation3 1 1]&gt;[Parameters].[Parameter 3]) then (([Calculation3 1 1]/[trends_master_weekly (ds.trends_master_weekly) (demo) (copy)].[Calculation5])/([Calculation1]/[trends_master_weekly (ds.trends_master_weekly) (demo) (copy)].[Calculation_7970814111018179]))&#10;else 0&#10;end' scope-isolation='false'>
                <table-calc ordering-type='Rows' />
              </calculation>
            </column>
            <column datatype='string' name='[batch_week]' role='dimension' type='nominal'>
            </column>
            <column caption='Category' datatype='string' name='[category]' role='dimension' type='nominal'>
            </column>
            <column caption='Country' datatype='string' name='[country]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal'>
            </column>
            <column-instance column='[batch_week]' derivation='None' name='[none:batch_week:nk]' pivot='key' type='nominal' />
            <column-instance column='[category]' derivation='None' name='[none:category:nk]' pivot='key' type='nominal' />
            <column-instance column='[country]' derivation='None' name='[none:country:nk]' pivot='key' type='nominal' />
            <column-instance column='[retailername]' derivation='None' name='[none:retailername:nk]' pivot='key' type='nominal' />
            <column-instance column='[subcategory]' derivation='None' name='[none:subcategory:nk]' pivot='key' type='nominal' />
            <column-instance column='[taxonomiccolour]' derivation='None' name='[none:taxonomiccolour:nk]' pivot='key' type='nominal' />
            <column caption='Retailername' datatype='string' name='[retailername]' role='dimension' type='nominal'>
            </column>
            <column caption='Subcategory' datatype='string' name='[subcategory]' role='dimension' type='nominal'>
            </column>
            <column caption='Taxonomiccolour' datatype='string' name='[taxonomiccolour]' role='dimension' type='nominal'>
            </column>
            <column-instance column='[Calculation1 1 1]' derivation='User' name='[usr:Calculation1 1 1:qk:1]' pivot='key' type='quantitative'>
              <table-calc ordering-type='Rows' />
              <table-calc field='[trends_master_weekly (ds.trends_master_weekly) (demo) (copy)].[Calculation_7970814111018179]' ordering-type='Rows' />
              <table-calc field='[greenplum.41866.548072407400].[Calculation3 1 1]' ordering-type='Rows' />
              <table-calc field='[greenplum.41866.548072407400].[Calculation1]' ordering-type='Rows' />
              <table-calc field='[trends_master_weekly (ds.trends_master_weekly) (demo) (copy)].[Calculation5]' ordering-type='Rows' />
            </column-instance>
          </datasource-dependencies>
          <filter class='categorical' column='[greenplum.41866.548072407400].[none:category:nk]' filter-group='8'>
            <groupfilter function='member' level='[none:category:nk]' member='&quot;trousers/pants&quot;' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[greenplum.41866.548072407400].[none:country:nk]' filter-group='3'>
            <groupfilter function='member' level='[none:country:nk]' member='&quot;uk&quot;' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[greenplum.41866.548072407400].[none:retailername:nk]' filter-group='6'>
            <groupfilter function='union' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[none:retailername:nk]' member='&quot;h&amp;m&quot;' />
              <groupfilter function='member' level='[none:retailername:nk]' member='&quot;house of fraser&quot;' />
              <groupfilter function='member' level='[none:retailername:nk]' member='&quot;john lewis&quot;' />
              <groupfilter function='member' level='[none:retailername:nk]' member='&quot;topshop&quot;' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[greenplum.41866.548072407400].[none:subcategory:nk]' filter-group='7'>
            <groupfilter function='level-members' level='[none:subcategory:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[greenplum.41866.548072407400].[none:taxonomiccolour:nk]' filter-group='5'>
            <groupfilter function='level-members' level='[none:taxonomiccolour:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[greenplum.41866.548072407400].[none:retailername:nk]</column>
            <column>[greenplum.41866.548072407400].[none:taxonomiccolour:nk]</column>
            <column>[greenplum.41866.548072407400].[none:subcategory:nk]</column>
            <column>[greenplum.41866.548072407400].[none:category:nk]</column>
            <column>[greenplum.41866.548072407400].[none:country:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <format attr='title' class='0' field='[greenplum.41866.548072407400].[usr:Calculation1 1 1:qk:1]' scope='rows' value='Ratio: Expected/Observed' />
            <format attr='subtitle' class='0' field='[greenplum.41866.548072407400].[usr:Calculation1 1 1:qk:1]' scope='rows' value='' />
            <format attr='auto-subtitle' class='0' field='[greenplum.41866.548072407400].[usr:Calculation1 1 1:qk:1]' scope='rows' value='true' />
            <format attr='width' field='[greenplum.41866.548072407400].[usr:Calculation1 1 1:qk:1]' value='64' />
          </style-rule>
          <style-rule element='label'>
            <format attr='text-format' field='[greenplum.41866.548072407400].[usr:Calculation1 1 1:qk:1]' value='N' />
          </style-rule>
          <style-rule element='worksheet'>
            <format attr='display-field-labels' scope='cols' value='false' />
          </style-rule>
          <style-rule element='refline'>
            <format attr='fill-above' id='refline0' value='#00000000' />
            <format attr='fill-below' id='refline0' value='#00000000' />
            <format attr='stroke-color' id='refline0' value='#000000' />
            <format attr='line-pattern' id='refline0' value='dashed' />
          </style-rule>
        </style>
        <panes>
          <pane>
            <view>
              <breakdown value='off' />
            </view>
            <mark class='Area' />
            <encodings>
              <color column='[greenplum.41866.548072407400].[none:subcategory:nk]' />
            </encodings>
            <reference-line axis-column='[greenplum.41866.548072407400].[usr:Calculation1 1 1:qk:1]' formula='average' id='refline0' label='Expected=Observed' label-type='custom' scope='per-pane' value-column='[greenplum.41866.548072407400].[usr:Calculation1 1 1:qk:1]' z-order='1' />
          </pane>
        </panes>
        <rows>[greenplum.41866.548072407400].[usr:Calculation1 1 1:qk:1]</rows>
        <cols>[greenplum.41866.548072407400].[none:batch_week:nk]</cols>
      </table>
    </worksheet>
  </worksheets>
  <dashboards>
    <dashboard name='Trends Analysis'>
      <style>
        <style-rule element='dash-subtitle'>
          <format attr='background-color' value='#00000000' />
        </style-rule>
        <style-rule element='dash-container'>
          <format attr='border-style' id='dash-zone_6' value='none' />
        </style-rule>
        <style-rule element='parameter-ctrl'>
          <format attr='font-size' value='12' />
          <format attr='background-color' value='#ffffff' />
        </style-rule>
        <style-rule element='parameter-ctrl-title'>
          <format attr='font-size' value='12' />
        </style-rule>
      </style>
      <zones>
        <zone h='100000' id='34' type='layout-basic' w='100000' x='0' y='0'>
          <zone h='43377' id='19' name='Counts_all' w='87735' x='12265' y='0'>
          </zone>
          <zone fixed-size='291' h='74928' id='6' is-fixed='true' param='vert' type='layout-flow' w='12265' x='0' y='0'>
            <zone fixed-size='46' h='8322' id='31' is-fixed='true' param='[Parameters].[Parameter 2]' type='paramctrl' w='12265' x='0' y='0'>
              <formatted-text>
                <run>Analysis type</run>
              </formatted-text>
            </zone>
            <zone fixed-size='74' h='10338' id='22' is-fixed='true' name='Counts_all' param='[greenplum.41866.548072407400].[none:country:nk]' type='filter' w='12265' x='0' y='8322'>
            </zone>
            <zone fixed-size='70' h='10338' id='23' is-fixed='true' name='Counts_all' param='[greenplum.41866.548072407400].[none:category:nk]' type='filter' w='12265' x='0' y='18660'>
            </zone>
            <zone fixed-size='52' h='8609' id='25' is-fixed='true' name='Counts_all' param='[greenplum.41866.548072407400].[none:subcategory:nk]' type='filter' w='12265' x='0' y='28998'>
            </zone>
            <zone fixed-size='49' h='8178' id='26' is-fixed='true' name='Counts_all' param='[greenplum.41866.548072407400].[none:taxonomiccolour:nk]' type='filter' w='12265' x='0' y='37607'>
            </zone>
            <zone fixed-size='51' h='8465' id='27' is-fixed='true' name='Counts_all' param='[greenplum.41866.548072407400].[none:retailername:nk]' type='filter' w='12265' x='0' y='45785'>
            </zone>
            <zone fixed-size='81' h='10338' id='32' is-fixed='true' param='[Parameters].[Parameter 3]' type='paramctrl' w='12265' x='0' y='54250'>
              <formatted-text>
                <run fontsize='8'>Low statistics threshold</run>
              </formatted-text>
            </zone>
            <zone fixed-size='277' h='10340' id='29' is-fixed='true' name='Counts_all' pane-specification-id='30' param='[greenplum.41866.548072407400].[none:subcategory:nk]' type='color' w='12265' x='0' y='64588'>
            </zone>
          </zone>
          <zone h='31551' id='33' name='Ratio' w='87735' x='12265' y='43377'>
          </zone>
          <zone h='25072' id='30' name='CondensedRatio' w='100000' x='0' y='74928'>
          </zone>
        </zone>
      </zones>
    </dashboard>
  </dashboards>
  <windows show-side-pane='false'>
    <window class='schema' source-height='-1' />
    <window auto-hidden='0' class='worksheet' maximized='0' name='Counts_all'>
      <cards>
        <edge name='left'>
          <strip size='270'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card pane-specification-id='27' param='[trends_master_weekly (ds.trends_master_weekly) (demo) (copy)].[usr:Calculation5:qk]' type='color' />
            <card pane-specification-id='26' param='[trends_master_weekly (ds.trends_master_weekly) (demo) (copy)].[usr:Calculation_7970814111018179:qk]' type='color' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='50'>
            <card type='columns' />
          </strip>
          <strip size='31'>
            <card type='rows' />
          </strip>
        </edge>
      </cards>
      <highlight>
        <color-one-way>
          <field>[greenplum.41855.572053194400 (copy)].[:Measure Names]</field>
          <field>[greenplum.41855.572053194400 (copy)].[none:Calculation_2550806181752437:nk]</field>
          <field>[greenplum.41855.572053194400 (copy)].[none:category:nk]</field>
          <field>[greenplum.41855.572053194400 (copy)].[none:country:nk]</field>
          <field>[greenplum.41855.572053194400 (copy)].[none:facetbrand:nk]</field>
          <field>[greenplum.41855.572053194400 (copy)].[none:newin_7:qk]</field>
          <field>[greenplum.41855.572053194400 (copy)].[none:retailername:nk]</field>
          <field>[greenplum.41855.572053194400 (copy)].[none:subcategory:nk]</field>
          <field>[greenplum.41855.572053194400 (copy)].[none:taxonomiccolour:nk]</field>
          <field>[greenplum.41855.572053194400 (copy)].[yr:batch_date:ok]</field>
          <field>[greenplum.41864.699977557900].[none:retailername:nk]</field>
          <field>[greenplum.41866.548072407400].[none:batch_week:nk]</field>
          <field>[greenplum.41866.548072407400].[none:subcategory:nk]</field>
          <field>[greenplum.41866.548072407400].[none:week:qk]</field>
          <field>[greenplum.41866.548072407400].[none:year:qk]</field>
          <field>[trends_master_weekly (ds.trends_master_weekly) (demo) (copy)].[none:batch_week:nk]</field>
          <field>[trends_master_weekly (ds.trends_master_weekly) (demo) (copy)].[usr:Calculation_7970814111018179:qk]</field>
        </color-one-way>
      </highlight>
      <viewpoint>
      </viewpoint>
    </window>
    <window auto-hidden='0' class='worksheet' maximized='0' name='CondensedRatio'>
      <cards>
        <edge name='left'>
          <strip size='270'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card pane-specification-id='0' param='[greenplum.41866.548072407400].[none:subcategory:nk]' type='color' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='50'>
            <card type='columns' />
          </strip>
          <strip size='31'>
            <card type='rows' />
          </strip>
        </edge>
      </cards>
      <highlight>
        <color-one-way>
          <field>[Parameters].[Parameter 4]</field>
          <field>[greenplum.41855.572053194400 (copy)].[:Measure Names]</field>
          <field>[greenplum.41855.572053194400 (copy)].[none:Calculation_2550806181752437:nk]</field>
          <field>[greenplum.41855.572053194400 (copy)].[none:category:nk]</field>
          <field>[greenplum.41855.572053194400 (copy)].[none:country:nk]</field>
          <field>[greenplum.41855.572053194400 (copy)].[none:facetbrand:nk]</field>
          <field>[greenplum.41855.572053194400 (copy)].[none:newin_7:qk]</field>
          <field>[greenplum.41855.572053194400 (copy)].[none:retailername:nk]</field>
          <field>[greenplum.41855.572053194400 (copy)].[none:subcategory:nk]</field>
          <field>[greenplum.41855.572053194400 (copy)].[none:taxonomiccolour:nk]</field>
          <field>[greenplum.41855.572053194400 (copy)].[yr:batch_date:ok]</field>
          <field>[greenplum.41864.699977557900].[none:retailername:nk]</field>
          <field>[greenplum.41864.699977557900].[twk:batch_date:ok]</field>
          <field>[greenplum.41864.699977557900].[twk:batch_date:qk]</field>
          <field>[greenplum.41866.548072407400].[none:batch_week:nk]</field>
          <field>[greenplum.41866.548072407400].[none:subcategory:nk]</field>
        </color-one-way>
      </highlight>
      <viewpoint>
      </viewpoint>
    </window>
    <window auto-hidden='0' class='worksheet' maximized='0' name='Ratio'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card pane-specification-id='0' param='[greenplum.41866.548072407400].[none:subcategory:nk]' type='color' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='31'>
            <card type='columns' />
          </strip>
          <strip size='31'>
            <card type='rows' />
          </strip>
        </edge>
      </cards>
      <highlight>
        <color-one-way>
          <field>[greenplum.41866.548072407400].[none:batch_week:nk]</field>
          <field>[greenplum.41866.548072407400].[none:subcategory:nk]</field>
        </color-one-way>
      </highlight>
      <viewpoint>
      </viewpoint>
    </window>
    <window auto-hidden='0' class='dashboard' maximized='1' name='Trends Analysis'>
      <active id='31' />
      <zones>
        <zone name='Counts_all'>
          <viewpoint>
            <zoom type='entire-view' />
          </viewpoint>
          <highlight>
            <color-one-way>
              <field>[greenplum.41864.699977557900].[none:subcategory:nk]</field>
            </color-one-way>
          </highlight>
          <selection-collection>
            <node-selection select-tuples='false'>
              <oriented-node-reference orientation='vertical'>
                <node-reference>
                  <axis>[greenplum.41866.548072407400].[usr:Calculation1:qk:1]</axis>
                </node-reference>
                <page-reference>
                </page-reference>
              </oriented-node-reference>
            </node-selection>
          </selection-collection>
        </zone>
        <zone custom-title='true' mode='compact' name='' param='[Parameters].[Parameter 2]' type='paramctrl' />
        <zone mode='radiolist' name='Counts_all' param='[greenplum.41866.548072407400].[none:country:nk]' type='filter' />
        <zone mode='dropdown' name='Counts_all' param='[greenplum.41866.548072407400].[none:category:nk]' type='filter' />
        <zone mode='checkdropdown' name='Counts_all' param='[greenplum.41866.548072407400].[none:subcategory:nk]' type='filter' values='relevant' />
        <zone mode='checkdropdown' name='Counts_all' param='[greenplum.41866.548072407400].[none:taxonomiccolour:nk]' type='filter' values='relevant' />
        <zone mode='checkdropdown' name='Counts_all' param='[greenplum.41866.548072407400].[none:retailername:nk]' type='filter' values='relevant' />
        <zone mode='slider' name='' param='[Parameters].[Parameter 3]' type='paramctrl' />
        <zone name='Counts_all' pane-specification-id='30' param='[greenplum.41866.548072407400].[none:subcategory:nk]' type='color' />
        <zone name='Ratio'>
          <viewpoint>
            <zoom type='entire-view' />
          </viewpoint>
        </zone>
        <zone name='CondensedRatio'>
          <viewpoint>
            <zoom type='entire-view' />
          </viewpoint>
          <highlight>
            <color-one-way>
              <field>[greenplum.41864.699977557900].[none:subcategory:nk]</field>
            </color-one-way>
          </highlight>
        </zone>
      </zones>
    </window>
  </windows>
  <thumbnails>
    <thumbnail height='384' name='Counts_all' width='384'>
      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
      7pRdYQ5ljQAAAABJRU5ErkJggg==
    </thumbnail>
    <thumbnail height='384' name='CondensedRatio' width='384'>
      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
      9tuz2bS3pNrv3T4/rRo2J/Wgn23fvZfNeQWazBEROQa1LgC+tK5ce2FTHEDW2ne47o5/sH5v
      ERUVFZSV5PP5xGe57dHxrDvoMdsWTmf07//C0szcap8YRETk6Go0AFHYfw799+2W912V5fQm
      cu1947igcQYeSln57n307dKOq351NYOat2DIL+9i8e4cPCkN6Hl2X9q3SIdQKTunjef8C+5k
      fWF0/7Z/iCOPS58lROT0V6MBMDiqIuA6yo7WAVhgWeCuGorloPFZQ3nsub9z/cX98XlcZO/Y
      zrv/+S/zdufg9Prp2v8i/u+xp/lw+ie88dyfObtLKwB6dGlCrNMCHESwMFgYnIdt23K4KreL
      EwvPYSf6u7xVd5hzWxi3pQvBROS0ZBlTQ3MmJkL25g0sX7meMmcGAy44i9hDLgWIlOcx/8ul
      5BSHadi2O12aJR8oUjRETtZm5s5fxOYtmZRFHPgCAeo1qE/7Dl1p0SSDgMdJJFTG2iVfMG3u
      Ri4YeRXtGyVDtJwNCxaxNruQ1AbtOPPMpngPSl20LIfPZi+itMxB01adaHdGGq6DIlCW/Q2f
      zFsNsSl07tKJxsmxuhhMRE47NReAE8REI4TDEQyVZwE5nU4ch1w7YKIRQuEobrfrwBW9IiLy
      nWp9AEREpGbUurOARETk5FAARERsSgEQEbEpBUBExKYUABERm1IARERsSgEQEbEpBUBExKYU
      ABERm1IARERsSgEQEbEpBUBExKYUABERm1IARERsSgEQEbEpBUBExKYUABERm1IARERsSgEQ
      EbEpBUBExKYUABERm1IARERsSgEQEbEpBUBExKYUABERm1IARERsSgEQEbEpBUBExKYUABER
      m1IARERsSgEQEbEpBUBExKYUABERm1IARERsSgEQEbEpBUBExKYUABERm1IARERsSgEQEbEp
      BUBExKYUABERm1IARERsSgEQEbEpBUBExKYUABERm1IARERsSgEQEbEpBUBExKYUABERm1IA
      RERsSgEQEbEpBUBExKYUABERm1IARERsSgEQEbEpBUBExKYUABERm1IARERsSgEQEbEpBUBE
      xKYUABERm1IARERsSgEQEbEpBUBExKYUABERm1IARERsSgEQEbEpBUBExKYUABERm1IARERs
      SgEQEbEpBUBExKZcp3Lj0UiI8ooQxoDb68Pj+in1yBAKVhAKRcDhxOfz4bCOZzWGUKiCYCgC
      lhN/wFdLq2wIlpURjBqcTjder+f4nq+I1BqnNACFW5fy6sRpZAd99L98NIPbppzK4RybaCmL
      pr/LJ/NWEsjoxvW3jKSu+zhWEyxk7sfv8fHcr/EltuXW/7uOFOeJH+6PFilg2ssvMWfbXpp2
      7MVlPxtOvZjaOFAR+aFO6ZvN0l0bePPVf/L0C6+wMrP4VA7l2EXLWf/ZdP7xt3H8+7W5FEeO
      czXBIub87z0eHzeO5/85nYLgiR3mCRMpYMHrE/j7uMeZ+OFUcsrCp3pEIvIjndIAGBMEokSB
      8qg5lUM5LkFjqNzv53Hco7cssPb93+Cm9s6qWPirvnJYaPpH5DRwSqeA6nUdyXufDSISNcSn
      ZpzKoRw7ZyJXPTyeoXc+Bt4A6d5TPSARkWNTgwEwRCIRwqEwONx4nFHyc/aQk1+MJyaJ1Hqp
      +NwB6qV5MIDT5QKihIIhIlGD0+XC5XId4R2xIRqJEAqFMYDHV/2gaTQSpqhgL3v3FhA2YDm9
      1E1NIzHu0IO0B63H4cLjsijO20N2TiEObxxpGen43d/xNtdyEhOfhDcmHhxODl3UREIUF+aT
      k1tARTiKy+MjMakOdRJisKxje/scjYQoKcxjb24BwXAUHC5i4hKom5yEz33oPHzVa2jA5XLh
      cjqpKC5gd/ZeyoJRPD4/Kan1iPUf7YCFIRyqIG9PNvklZeDyUjcllQS/g/AxjltEareaC0A0
      yPJP3+XFf79PaaeRjO5ayhNPTyCvsBSPP4Hu/c/j6sGdeOP1/7CjPIbLbrqfoU0K+MPDT7I1
      ay9tzh7CDdddTf246jsqEy7ji2lv8sKbn2E5ndz51L/pluoBIFS6m8mvvsjbn8wnL6+oKgAe
      kpLrMuyaW7nuknPYvzYTZdOSTxn/99fIbnUhvx2cwOOPP0dOfjEOTwztuvbgzj88QNOEo+wo
      o8V89sarTPx4LolNBnLv2BtIdQMYCvdu4s2XX2XGguXk5xcTjERxub3EJSTQos8Ibr/2EprW
      9R95vdW2ESJr7SJenjCR5eu+Ja+giFBVAPwxcWQ0a8fPR93AkG7N8O6rYDiHV+5/jP9lRxl8
      2XV0cHzFC69PZWvWXspDEdxeP2kNm/Gz625neN+2+A6ZBNy9fgEvPTueBetzKCqrAKeHpIZt
      uXjEIMIVx3mgQ0RqJ1NTIiVmxtP3mqYWxopJNmmpSQao+ucxZw+/z8z/9A3TrWWqiUtvYZ6Z
      sdlEQ3vMXy5pbwDjO/MSM3nZDhONVl9tafZmc//IjpXLxI4wm8oixkQjpjRrlbmndzdTJ85v
      cDiN1x8wsbGxxu91GweY+LppZtjYd82usrCJGmNMNGSWvfuUaWdh8CeZ9LS6B40P06rb9WZN
      Xvjozy+UY1679SqTDKZN5zvMlrLKH5cXbjUPXtzQxAV8Bqfb+GNiTGxsrAn4vcZhYVwxSeaC
      a+4wq7OKTNQYEyraYR6+4xIDmNSMq8w3pftfQLNxxitmcIM04/e4DC63CcTEmrjYWBPw+4wF
      xuHymLrpw8x/PttowvteqIot5u5OrQ0Ot0lMqW/SUxKM0+E2/kCgagyWsRxOU6fteebpactN
      RdXjotGw2bJwkunZqaXxuzAOp8sEYmJNTIzfuNxuk5Ccaup4PKY+mL6XX2/W7i0/cf+tiMgp
      UaMHgR2AIxmMq5ScojBtu/XhvMGD6Nu/L72uuoyGcZXTFxZVx0JdKVxxyyj8QPmyRXy5cDVl
      keqHV3dtXMi0t1cCXi69/xqa+RxU5G9i3K/H8PT8JZQYD52GX8/Tb33MsuWLeXf8WC7p2IxQ
      wR4+Gncb97w8neJQdP92HQmAv4w9ucW07NKL8wYPol/vs+gx+te0TPzu0xydVesAR9X/GtZN
      Gc8jH2ynyBFPp6vvYfKMuSz7ahlT33qWEYO6EinNY9qED/jv+wu+88B3tGwz94+5iU937MKT
      3JBzb3+EGfMWsWL5Umb8918MG9iTQDjI3p0f8dR7n1BW9Zz2jYtoiPzsTMrcyZx3wT1M+ugT
      prz1Eldf0h+HZchd8xlvTHqXbbkVgKEkcxG/ue9RvlyxESsmiUtvuIsP/jef+Z9N5q5fdsEX
      LSY3GCTzh/6fLyK1Xs0fBN4LJMfSvPdIXv7HQ3RvkkjhrkxCMelE16w7bPGMbsMZ1Owupnyb
      xQezFnL7lf0IJPiqfhtlxez3WAZQ50wu7tceokHWfjad95evoszp5cyLb+Hff/k97Rok4QBa
      Nm9Bu14diLv+Bl5bvIPZH0xk6dA+9GsWW7nKfCDRR3Ln83nutSc5p3UKpXsyKfbUO44XJ8g3
      yxZUftm6Pw/+9hbO75iGBbRs0ZLO7RuytsMlbE62KI7mURGKcrSZ+OwV0/lgRwRIYtioexl/
      /yiSYyqnupo2b8WEtm24+ZLhvLUyi0WLNlIciRDLIcFKasrVd/+Vh8dcTJLPDfTh7N5nUZ4z
      jLdnf8Oi5ZvJzCumRZJh+cyprP9qFQ63l6G//gN/v/8WGiX5gPY0a9GGekk388gLH5Nbcswv
      iojUUiflNFBXUTG/uOkOzmpaF5flok56Y+rFe464rDO2MT+//DwANnzyIat3Fx34ZUUWU/71
      OQAdB/ajc7NUohUFzPtqMWt3FhGIbcnNv/nN/p1/1dZp2HEQt153CQCbF65jxfLNhA9+852f
      z4jRd9CvTRpuy0lCvUbUTzqe03ocuP1Vj/t2HrNnzGBPfun+3yY268ur77zDuxP/w5hLBhDr
      PvrL70/vyT+efoo/PTaWm0aeT2Kg+usVSG3Kmd0aVn4ThCOdh9qmW29GDh9Iou9AZnwprbli
      QPvKb0qCmHCUcFkhS1dtZFMu+AMd+dUtN1bt/AEsYus24RfXXUuj+vWO9QURkVrspJwG6nB6
      aN8m7dD3p0dkOT30HDyKXuNnsSB/GW9NW8XgVgNwYNi5eArvbi/A4W7CsH7n0qBOgFDRXnbn
      7KIM8EUy2fDVZ7zzjUU4emBKxOF2k799Q+U3RfkUFxRTfWbJRcd2GSfgxXDRuvdAEnyzKMjL
      5PkHbuStJ+6j56ARnD+kP907tKFJ7750iI3B46p8NY52OVVcozMZ9etOVJSXUVpaxvZvN1FY
      kE9e7i42rVvNzFkf8t7UpQee42FrsMioV5fUpJjDzqRyuw/EzQFUFBWQuXkDQSCm68X0bRJz
      2LqSW/bi4nopLN+w+5hfFRGpnU5OAKz2NEwO/KBlLctB/TO602t4FxZMWsy0f7/O9jH9aOwu
      4KM33qQ0GKJBtw706duFgMuipKyU4uw9AJQX5/H4DVd9zxaKyC4uJFxt/r01jevGH9+Tqz56
      mp93E0/+bh5PTljG+h172FNWypQJTzFlwlMADLnyBoYNG8awIefSKDn26GuyHOzatIR3332f
      WV/M5pPZSygpqziGsSSQHNuG+KOe7ll9W5ZV+Z+CFQTHET6YWN4UOvfywZxjGIKI1GonJQAW
      ycT5f/hsU6BuBj3P7kna1MUUbpvKpyv2cGXqOj5YvItQNIa2zc6mU4s6Ve9sLayqr3z+llz5
      q/OJIXr0K3MNtGueiGUOXqIOcf4T81K4PHW48t43OKPH/5i35CuWr17CvPmL2bw7H4BP3nqR
      L2ZMZ/Hdf+WJm39O4lHWU75rNb+5/Rbe+XRJ5Q8si2btetKyaQYNGjSkQUYSK6a/zvsLNh1l
      DQ48Li9u57Gdu2+CR3vtHBzpqgwR+ek6SVcCH9t9YyxXDH36nEPblpOZuaqYT19ZSJtey9i0
      ZTuB5Az6XHIR9QKVUygurxd/Qh0A/DFdufPRsTR0mO+8NYPL68df7c6jYY44iX5cLHyxyfS8
      aARdhwwjPyebnVmZbPlmLf+b8grPTJxH+d7t/PfV6dw8Yghdj3j/uxBfvjqWKZ9XTvF0G3oV
      d9w4ik4tm5EYH0NMTCw+Z5Dnt338HQE4FlEqDyQAHkP0SIuEC1i3rLbeqEhEjkftvPMwDtLa
      9WFo+zb4TBmrv3yJf/7nczJzQ6Q26ceIoa32H09w+wPUrVcPD1BeMYNZC/MJxKjHe+kAAA/D
      SURBVCeQkHDwvxh2znqDC4dfzJjbH+OLZVupkUuayrJ48aG7OLf3eVxx+8vkhD2kZDSiQ9ee
      DB95HU+8PotX77qgctG169iWc5RTasK5rPriW6IRQ0bXC3lo7Dh+MXwQHc5oQcP66dRJjCNY
      uI0FCxeekGF74xJp0Kxt5Wu46mk+XJl7SAQMBVuXMDFr7wnZnojUDrU0AGB5Uxk+sidx8Rbr
      Vk1j4mfzKQI6jxxFs/gDh5OdvgT6dDiTM+oGKCsq4pkH/s7/1mQR3DfHb8Ls3vgFf73ncebN
      +YJPPl9CfolVM0/cqmD59HeYteBz5s/5iPnLtxCJGizLqrz9Q0UeOdur7nparyEpsb4jr8fh
      wFEXsCBUXkFhWZDoQdMvwcKdfPDsk7yzquo5HsdtqA/m9CXSq1MP2taNoaykmHFPPs/qzH0R
      MJTkbGPiK8+xbbuuAhA5nZzSm8F9NwfN+l5F38BLTM7PrvpZW0Zf3KX6/s7ho/35w7m427us
      //hL1q96lTtuWM+vrrmS7i0y2Ll+Be+/PYFpWzOBBHoNGM7ZPRpxjFPjP4yvAVddPZjnFr/I
      9uWzePj3N7Nx1HX0blefivwspk/7gP++XXkUtcewTjSpFwfkHGFFflLqubEsyN64lHH3jcXc
      fS3dmyeRuX4pH374Pu/8Z+qBxbflUhg2pB7vuB0e2g0ayoiz3mHDtHmsmfwEN5bs4lc/P4+G
      sWHmTH6BCR8uILvo+1clIj8dNRqAMAdm148+5XL0PbE7oTXXju7Huw+/gwEaXzSS3g3jDlvO
      V6clv312PBV3jOSpT3ewfv7HPPL1QuL8XipKiykoLMFyezijy8+4656raRDnAcJEOHB04nim
      hCpvZn3w83PT7er7+b8vV/HUO0tYtfBTHl27lIQYL9FwBTm5+UQdblr1HMQfxvySBgleKD3w
      ChisyvU4Yhh2+x/p/+oIZhYW8NXsCdy+bhrxfjflpYUUFJXiC7Tg3B6GL75YQ3TP+yzf+gQt
      OqQAFvvOFdo3tsNYVUtY1v7n709uwc3jxrJ2wygmbclkwbsvsvZ/E/E6DYX5uYQdXnweF+VB
      /R0AkdNFDQbASUqDlvQdMIC9vrOIPcKcizepPt16n0NaqZcGR7w5movev7iFK+bkshu4/KbB
      xHqPcDWB5SSx+VmMfXcl/V/7J6+8/iFbyyuIGrAcTrze+gy/5teMue4CEvY93FgkpDTh7AED
      SKczdbzH+FJYHhq2ak+/AQNIaN6eQNXz8yU25OEXpnL+pW/ywpsf8W1mLhFjsBxOmrf20uvi
      6xl91cW0Sq887TTqjqHzGd0ZNqAQT3IXYl0AFoHGg3hnxWyeHf8MU+etJhSu/JORHm9jug64
      mBtvup7Aznk88eg4vi6A7J0F0CEFHAHantWLAckFtG/VCM8R+pre9hwGDCiE1h2pm+Dd/xom
      ndGfV79awLn/fJrXpsyhIhgiGjV4zr6QX/32N7Tb/iF/+NcsunRqS5xPfw1M5KfOMsacqNNf
      aoko5aXF5OcVEsHC4XQTl5BIjM/Dyb6bcai8lPzcfMojBqfbRUx8PPF+3zHdDjoaDlKQn09p
      RQjL4SYmPp7YgK9mprD2bzRCaUkhBUVlhMOG2Dp1SIz16yRQkdPMaRgAERH5IWrtWUAiIlKz
      FAAREZtSAEREbEoBEBGxKQVARMSmFAAREZtSAEREbEoBEBGxKQVARMSmFAAREZtSAEREbEoB
      EBGxKQVARMSmFAAREZtSAEREbEoBEBGxKQVARMSmFAAREZtSAEREbEoBEBGxKQVARMSmFAAR
      EZtSAEREbEoBEBGxKQVARMSmFAAREZtSAEREbEoBEBGxKQVARMSmFAAREZtSAEREbEoBEBGx
      KQVARMSmFAAREZtSAEREbEoBEBGxKQVARMSmFAAREZtSAEREbEoBEBGxKQVARMSmFAAREZtS
      AEREbEoBEBGxKQVARMSmFAAREZtSAEREbEoBEBGxKQVARMSmFAAREZtSAEREbEoBEBGxKQVA
      RMSmFAAREZtSAEREbEoBEBGxKQVARMSmFAAREZtSAEREbEoBEBGxKQVARMSmFAAREZtSAERE
      bEoBEBGxKQVARMSmFAAREZtSAEREbEoBEBGxKQVARMSmFAAREZtSAEREbEoBEBGxKdepHsCJ
      EyRry3aKQxBXpy6pdRJwWse/tvLiHDKzcohYHtIb1yfO4z5xQxURqQVOn08AwV08ddvNXHXl
      Dfzrv3Mpjf641a2Z/QZXXHklV175exZvzT0xYxQRqUVOn08AJkTuylUs3Rah+wVFRM2PW11h
      /k6WLFsGQHFJ5AQMUESkdjl9AmD5aX7eIIbtKadt68QfNf0jImIHp08APPW47YnxjIka3H4/
      AeepHpCISO1WgwEwhIMVlJcHMZaLuLjA4YtEg5SUVRCJWrh9AfxuBxhDuLyU0lAEl9eP3+Oi
      vDCbb9ZvYHd+CW5fMk3btKR+agLV9/FOnC4XrqjB5XBy+AcAQ6iihC2b1rE9K4+yYJiGbTpx
      RrMMHBWllFaEcbrd+Pz+H3hgJELh3p2sX7+R3KIKwElqo5a0a9kQj1v1EZGfAFNDIqXZ5ukH
      rjKA8cf0N2tKD18ma8EE061ViiG2vhn1xEwTNMZEQhXmpdu7G8BccseD5oWxN5t0MFT7l2yG
      /OJBs2Jr9oGVVWwyIxtnGKhrxjzwhskPHfhVsDjXfPHOC6Zfg0PXk2KGX/mQ+esNXY3fjek2
      dKT5aneFMcaYmW/eU7XMmeaDrzIPGnXIbPt6pnlw1IWm3mHjwvjOvtxMmrnMFJQGa+R1FRE5
      UWrsE4ABolQdiTUBjvye2A3Gqlz6oAWcrkQA3h//CO8Dgfg6nNXlTOr6Iqz+7Au2RXL45M1H
      CCc1YOozo/FWPS7JGMCJhWf/JwATKmbupOe59u6/sG0v1ElvTM+evUjylLN8wed8+NbDfLh/
      zFHgu04fMuxZ9yl3jR7J2/OLAWjRqQed2zShbO9WFi1dSfa8Sdz0y8Xc/Zd/cMOIwST69GlA
      RGqn2nEMwADBI/8qJq4vfxx/B4N6daaOL8pXU97k8SceZt5WmPXm03z98LWcWedo5+gb9m6a
      zauvPkvm3kLq1m/CPX9+lpGDe5PgrmDp/ybxyJ+fZNayLT9omJGSHTw57ineXVgCpHLepddw
      191X06VVAyryspg7/W3ueGg8ezI38/cHn+eM5u25sFfD0+hcWxE5ndSOAByNw8Pvnvsbt47s
      js9VuRvNGH0b5QWZbHzgZfYWrWPL3vKjBsBEylk570tmL8wigpOrHvo3N4/sQ8BT+a78nItv
      4LFwGdffOZY1WcXfM5gIG2f/hxmfzSYUcdPr/Cv42/g/0qFBAKdlQZ06jBjdhDqeIi4cM57d
      mz9l0owvOPfMK4n16lOAiNQ+tfvNaZtfctmgtvt3/gBOT4C0lAwSqr6PfMcJ/+HSIlauWsLW
      IFgJPbj+8gM7fwCn20f38y/izJYtv/+FMBVsX7+TvD0V+JOSGX7TLXRsGFO586/i8sbSb+SN
      jEzzA+XMXbuF0lD42J+3iMhJUKsDEF83joDz+IcYCYcozs2p/KZdH5omHP5O3BXfkGEtEvF+
      32aiIQr2llNWBn6/hy7tGxzxxXP6GtB9WBsAtqzPpCSki8hEpHaq1QFo0jSFWM/xz1JZWDgc
      VY/fkEPoSAs53CQ1cuL4vlkay0l8sgefH4IRw7aCiiMvZjkJBOpUfhMCfuQVySIiNaVGA2Ad
      4Wz8AwwmGsV8xw7S63BxpDP6f/gADJajarffOBnXUbYVifyA/XQ0SkFeiLJy8DgtGiR6j7Yg
      4VBZ5Zf+qpOcRERqoRoLgOV0k+iPJxYwhAgfNhMSJW/PDspLv+/g6/FzuD3EJGdUfrNsHpsK
      Dp+PNxW5LNtYyvfO1FgOPF4nLidUBMNs2rb3iCeMhst3s3TOfAASAtWPEYiI1CY1FgCH0016
      TDJ1gWh0I19vK6j2+0hpLnMWLiczp7SmhoDLG6BZw9bUAwzzeWHKqkPONo2ya/UCpq3cSuj7
      7h7q9NGsbVPq1gtQUpDLlElvsKv48Gps+fIjpq+u/LpPn9Yk+Twn5smIiJxgNTcFZDnwOd34
      gFBFJi+PnURmUeU78Gi4nAXvTeDFVxaSX+GruSE4/XTr248e3RqCMbzzxN28Nnt9VQQMBZmr
      eGb8M6zYuPMHrM1Fy97n0qlZcxyhMr78z4s89fx75JXuO7IQYduyj7j1/mfIAkg8k8E9u+H3
      1OrDLCJiYzV3HYDlpVX/7nTp1YCNC3bw6cQb6bviRQadcxbbv3qTTxeX4Pf7cLvD+4+V/tDj
      pUdbNnrIMlgO0jr35/c3XMWOrPEsW/kZNw4YwvsXnk+HFg7mT32RuRsiGAPf9T5937Z8qV34
      49hbWX79H1mxcSvj7hnJtI8v5eI+rcndsJTp02ewNT+KNxDDtXf8gpEDOuJyaApIRGqnGgyA
      Rb02fbn917+lKPQSHy1Zx+Y1S3hxzRKwXKS1OZfRl3Vj8ttvsCYrCt6DhlL1pvnIt3S2sA46
      NOxwOPb/PFz1YHPQBxvLCtD3uvt4yu/m3nGTmLdiA9OmvMA0wO1PoHPvLjg3fc32XdnVtuJ2
      eQgApbiIWvtXRpNzrueVZ7w8Ou555i1aztefT+brzw88rmWX3lx06SXccstN1NMtSUWkFrOM
      +a7zcE6ASBnfrFzKjHmLycktpCIUxpeQQsdeg+jfMZU5X8xmV36QlmcN4OxWKVjRKN8sm8Gc
      lZmkte7GgLPa4Tv47pomQvbG1cybu5Q8h4MBP/sljeNdEClm/uSPWFds0aZzT7p1bszBsy/G
      BFm7eD4z5y0mp6CYqNNFav0W9Ojegql33M6fZn5Jh6GX8fK/J9A51cferSv57PMllFKP8y45
      l0Z1DtzN1ETDZG9Zy7wFC1n3bRYl4Qgel4/4Okl07tGXbp3OINatqR8Rqd1qPgCAMQYTDRMM
      RYhGozhdbjwe9485wfN4B0IkHCIUjmAsC7fbgyu6i79eOIIHZyyoFoAfIhqNEAqGiBiDw3Lg
      crtxOhzoxB8R+Sk4KfcCsiwLy+nG5zzFf1jdsnC6PVQbRvT4j4Q7HE68utuniPxEaZ5CRMSm
      FAATpdCYqr9f8N1/DUBE5HRyUo4B1Gqmgq2rV/NtXglxiWmc0bYlMS5N4ovI6U8BEBGxKU0B
      iYjYlAIgImJTCoCIiE0pACIiNqUAiIjYlAIgImJTCoCIiE0pACIiNqUAiIjYlAIgImJTCoCI
      iE0pACIiNqUAiIjYlAIgImJTCoCIiE0pACIiNqUAiIjYlAIgImJTCoCIiE0pACIiNqUAiIjY
      lAIgImJTCoCIiE0pACIiNqUAiIjYlAIgImJTCoCIiE0pACIiNvX/VInLZho1JQIAAAAASUVO
      RK5CYII=
    </thumbnail>
    <thumbnail height='384' name='Ratio' width='384'>
      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
      lEtBu8WaHtaFDaUDUBKd0GUHzNR0ADdAGK4aABmz5DLeKB3gq1vYUv9UF/8HEukBAF3dU/D5
      K78U92WoIcVDPqrRZQd02YFMWJ6MlNZgkJApJbAUVEqZ+lkAXrDlud/QDsDeHUPKKlriw+4J
      aP1wMGaVcb6l7Yf3du3wtJiX5ASYMqvUADApk5+hNAwDa9asqfy3lBLMw6fAOUc2636XIaWE
      lBKZjHsHic6R7nMIIcAYC/W+onMk7xwAQr+vwj5HoOdDppCdO3d6ev1LL73k6fW9vb1yy5Yt
      oZ6jr69Pbt68OdRzDAwMyLfeeivUcwwODso333wz1HMMDw/LDRs2hHqON998Uw4ODoZ6jrfe
      ekv29/eHeo7NmzfLvr6+UM+xZcsW2dvbG+o5tm3bJt99991Qz7F9+3a5a9euUM+xc+dOuWPH
      jlDP8c4778ht27b5OkcicwAEQRBE+CQyB+AF0zSRz1tVF/l8HitXrsSnP/1pTJrUOCv/y1/+
      EqeeeioeffRRPPPMMzjqqKNw+eWXN3Q3TdPEgw8+iFNPPRV33nkncrkcLr30UnzgAx9oeI47
      7rgDCxcuxMKFC129DyklfvGLX6BQKEDTNLzyyiu45JJL8KEPfajh3/T19eGHP/whNmzYgNmz
      Z+OEE07AX//1Xzd8H1JKPP3003jyySdhmiZmzpyJSy+9FAcddJCra3SDEAL3338/NmzYgCuu
      uAL77bcf7r//fvzN3/xNw78ZHBzEI488gg9/+MP42c9+hrlz5+LLX/4yOjvVxetXrlyJJ598
      Eueeey7+4i/+AsuXL8cnP/lJ9PT0OL7eMAwsW7YMBx10EH7zm9+gWCzi+uuvx/Tp0x1fL6VE
      LperuPyPPPIIzjnnHPT09DR0zV9//XVMmjQJuq7jzjvvxJQpU3D11Vdjr732avg+nn/+eUya
      NAlr1qzBiy++iI9+9KM466yzGn7nf/zjH/HSSy/h8ssvR0eHu8d93bp1+NWvfoWPfOQjeOih
      h7Bo0SKcf/75Te+re++9F88++yyy2Sze//734/LLL2/42QLA5s2b8ZOf/AT9/f2YMGECTj/9
      dCxevNhTyKcVL7/8Mh544AGceuqp+MQnPoGnnnoKRx11FPbdd9+G7+Pxxx9HT08P1qxZgx07
      duCqq67CAQcc0PD1+Xy+UsG1bNkynH322ejp6WkYwtm+fTv6+/sxa9YsLF26FNlsFl/+8pcx
      d+7chu/jtddeQ39/P4aHh/HUU09h3rx5uPTSSxt+Vhs3bsSyZctw1VVXYeLE5j0D2RtvvPHG
      pq9IIJMnT668+c2bN+OUU07Bm2++iWeffRZPPPEEurq6MH/+/MrrZ82aVfMQ/su//AsWLlyI
      ZcuW4aabbsL//d//IZvNYs6cOQCAiRMnYsqUKZW/eeWVV7Bp0yasWbMGxx9/PD71qU/h3/7t
      33DyySc3PMePf/xjDA4O4rHHHsN+++2HffbZp+YL6+rqwtSpUyt/s3HjRvz+979HJpPBwMAA
      rrrqKvzoRz/CiSee2PAct9xyCy6++GLMmzcPhmFg9+7dmDhxYuV9TJgwAdOmTav8zebNm7Fi
      xQpce+21OOWUU3D44YfjjjvuwCc/+cmG57jjjjvw/e9/H08//TRWrFiBFStW4D3veQ9mzZpV
      Ocf06dMrf7N9+3Y8//zzOP/88/GNb3wDixYtwiOPPIJTTz214Tluu+02zJ8/H9/73vdw4403
      Ip/Po7e3F4ccckjlHDNmzKj8za9//Wt89atfxcqVKyvXlMlk8L73vc/xHJxz3HXXXbj22mvx
      gx/8ADNmzMCqVatw9NFHVzYK06ZNQ1dXV+U7+sUvfoFSqYQnn3wSp5xyChYvXowHH3wQxx57
      rOM5hBC48MIL8eijj2Lt2rVYvnw5du/ejYULF2LCBKt6aurUqZg4cWLlHCtXroSu63j44Ydx
      zTXX4Mgjj8R9992Hj3/8447nME0TP/jBD7Bo0SKsXLkS3/rWt/DLX/4Shx56KKZOtTR3pkyZ
      gu7u7so5XnrpJbz66qt46KGH0NHRgblz544xBPXv45ZbbsGpp56KpUuX4s4778SqVatw4IEH
      Ytq0aQCAnp4eTJo0qXKO3/72txBC4NJLL8WaNWtwyimnYNmyZTjuuOMafh//+I//iCuuuAJn
      nHEGjjvuODzyyCM45JBDKgZ28uTJNc/5K6+8gssuuwy/+93vKt/54OAgjjrqqIbv44477sDV
      V1+Nhx9+GIVCAW+88Qbmzp1bMbA9PT0153j++eexfv16rFu3Dvvvvz/OO+883HvvvTj++OMb
      3rtf+9rX8K//+q/YsGEDHn30UezYsQNHHXVUxfhNnjwZPT09lXO89tprWLduHZ566ilceuml
      +NjHPoa7774bixcvbvg+br31Vpx44ol49NFHceONN+KVV15BV1dXxZBNmjSpZqOxadMm/O53
      v8Py5cuh6zoOOeSQyj1Yf45UegDVX8Chhx6KX/3qV5WFbN9998VFF11U8/r6G17Xddx///0o
      FouYMGEC+vv70d092qpdv2Pbe++9sWXLFsybNw9vvvkmdF2veb3TOTo6OvC1r30NW7duxf33
      349bb70VN9xwAw477DDHc3R2dqKvrw+apsEwDOzZswe6ro85ZjVCCPT29qKvrw+GYaC7uxul
      0mhXrdM5hoeH0dvbi2nTpmHnzp2O113NZZddhldffRV33HFH5XfVx3U6x+DgIGbPno3bbrsN
      1113HWRdnUH9ORhjmDlzJm655RYcdNBBePrppzF79uya31fvqBYvXoynn34aV155JQ488MDK
      axqdgzFW+SxvvfVWXHvttdi5c2fN6+t3bIwxdHZ24utf/zpmzpyJ119/fcxrqs+RzWbx05/+
      FHfddRemT58OwzBw0003NT1HNpvF448/jj179qCjowMDAwPo6qqtia8+RyaTQTabxZ49e1Ao
      FPD222+jr6+vxtt12nmedNJJ+OhHP4rHHnsMf/u3f4vFixfjc5/7XMPPyjRNbNq0CZqmYWBg
      AO+++27NAlJ/js7OTuzYsQPDw8Po7+9HT08PNK1WDqP+HIwx7NixA11dXRgaGsLIyEjTcxx1
      1FE45phjcNppp+HII4+sHKfZOQCgWCziO9/5Dr7+9a/jrbfewumnn17zeVbDGIOUEl/5ylcg
      pcSePXvGfJb157j11lvx05/+FPl8HosWLcLNN99cc13158hkMnj66acriduRkZGmzyBjDFOm
      TMHmzZshpcSWLVuwZcuWpu8DAP7yL/8SF1xwAZ544gl89atfxZFHHokvfWm0stI+RyqqgNzA
      Oce///u/Y9KkSbj44oubvjafz2PDhg3Ytm0bjj76aLz44os488wzm/7Nq6++iscffxx9fX04
      +OCDcckll1R2RE6sWLECZ5xxBgB3FQ1SSrz00kvQdR3Dw8N4/vnncdlllzV0PwFgaGgIP/rR
      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
    </thumbnail>
    <thumbnail height='384' name='Trends Analysis' width='384'>
      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
    </thumbnail>
  </thumbnails>
</workbook>
