<?xml version='1.0' encoding='utf-8' ?>

<workbook source-platform='mac' version='8.3' xmlns:user='http://www.tableausoftware.com/xml/user'>
  <!-- build 8200.14.0720.2105                                -->
  <preferences>
  </preferences>
  <style-theme name='modern' />
  <datasources>
    <datasource hasconnection='false' inline='true' name='Parameters' version='8.3'>
      <aliases enabled='yes' />
      <column caption='1' datatype='real' name='[Parameter 1]' param-domain-type='any' role='measure' type='quantitative' value='1.0'>
        <calculation class='tableau' formula='1.0' />
      </column>
      <column alias='Poor sellers' caption='Analysis' datatype='string' name='[Parameter 2]' param-domain-type='list' role='measure' type='nominal' value='&quot;worst&quot;'>
        <calculation class='tableau' formula='&quot;worst&quot;' />
        <aliases>
          <alias key='&quot;best&quot;' value='Best sellers' />
          <alias key='&quot;worst&quot;' value='Poor sellers' />
        </aliases>
        <members>
          <member alias='Best sellers' value='&quot;best&quot;' />
          <member alias='Poor sellers' value='&quot;worst&quot;' />
        </members>
      </column>
      <column caption='Low Stats' datatype='real' name='[Parameter 3]' param-domain-type='range' role='measure' type='quantitative' value='5.0'>
        <calculation class='tableau' formula='5.0' />
        <desc>
          <formatted-text>
            <run>Threshold at which stats are too low to calculate ratio</run>
          </formatted-text>
        </desc>
        <range granularity='1.0' max='10.0' min='1.0' />
      </column>
    </datasource>
    <datasource caption='extremesellers (ds.extremesellers) (demo)' inline='true' name='greenplum.41863.764809224500' version='8.3'>
      <connection class='greenplum' dbname='demo' expected-driver-version='PostgreSQL Unicode' odbc-native-protocol='yes' port='9999' server='localhost' username='gpadmin'>
        <relation name='extremesellers' table='[ds].[extremesellers]' type='table' />
        <metadata-records>
          <metadata-record class='column'>
            <remote-name>json_productkey</remote-name>
            <remote-type>130</remote-type>
            <local-name>[json_productkey]</local-name>
            <parent-name>[extremesellers]</parent-name>
            <remote-alias>json_productkey</remote-alias>
            <ordinal>1</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <width>255</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_WVARCHAR&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_WCHAR&quot;</attribute>
              <attribute datatype='string' name='TypeIsVarchar'>&quot;true&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>category</remote-name>
            <remote-type>130</remote-type>
            <local-name>[category]</local-name>
            <parent-name>[extremesellers]</parent-name>
            <remote-alias>category</remote-alias>
            <ordinal>2</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <width>8190</width>
            <contains-null>true</contains-null>
            <cast-to-local-type>true</cast-to-local-type>
            <collation flag='0' name='LEN_RUS' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_WLONGVARCHAR&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_WCHAR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>subcategory</remote-name>
            <remote-type>130</remote-type>
            <local-name>[subcategory]</local-name>
            <parent-name>[extremesellers]</parent-name>
            <remote-alias>subcategory</remote-alias>
            <ordinal>3</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <width>8190</width>
            <contains-null>true</contains-null>
            <cast-to-local-type>true</cast-to-local-type>
            <collation flag='0' name='LEN_RUS' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_WLONGVARCHAR&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_WCHAR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>retailername</remote-name>
            <remote-type>130</remote-type>
            <local-name>[retailername]</local-name>
            <parent-name>[extremesellers]</parent-name>
            <remote-alias>retailername</remote-alias>
            <ordinal>4</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <width>8190</width>
            <contains-null>true</contains-null>
            <cast-to-local-type>true</cast-to-local-type>
            <collation flag='0' name='LEN_RUS' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_WLONGVARCHAR&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_WCHAR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>facetbrand</remote-name>
            <remote-type>130</remote-type>
            <local-name>[facetbrand]</local-name>
            <parent-name>[extremesellers]</parent-name>
            <remote-alias>facetbrand</remote-alias>
            <ordinal>5</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <width>8190</width>
            <contains-null>true</contains-null>
            <cast-to-local-type>true</cast-to-local-type>
            <collation flag='0' name='LEN_RUS' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_WLONGVARCHAR&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_WCHAR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>taxonomiccolour</remote-name>
            <remote-type>130</remote-type>
            <local-name>[taxonomiccolour]</local-name>
            <parent-name>[extremesellers]</parent-name>
            <remote-alias>taxonomiccolour</remote-alias>
            <ordinal>6</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <width>8190</width>
            <contains-null>true</contains-null>
            <cast-to-local-type>true</cast-to-local-type>
            <collation flag='0' name='LEN_RUS' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_WLONGVARCHAR&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_WCHAR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>country</remote-name>
            <remote-type>130</remote-type>
            <local-name>[country]</local-name>
            <parent-name>[extremesellers]</parent-name>
            <remote-alias>country</remote-alias>
            <ordinal>7</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <width>8190</width>
            <contains-null>true</contains-null>
            <cast-to-local-type>true</cast-to-local-type>
            <collation flag='0' name='LEN_RUS' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_WLONGVARCHAR&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_WCHAR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>price_currentdaymode</remote-name>
            <remote-type>5</remote-type>
            <local-name>[price_currentdaymode]</local-name>
            <parent-name>[extremesellers]</parent-name>
            <remote-alias>price_currentdaymode</remote-alias>
            <ordinal>8</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_FLOAT&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_DOUBLE&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>sellers</remote-name>
            <remote-type>130</remote-type>
            <local-name>[sellers]</local-name>
            <parent-name>[extremesellers]</parent-name>
            <remote-alias>sellers</remote-alias>
            <ordinal>9</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <width>8190</width>
            <contains-null>true</contains-null>
            <cast-to-local-type>true</cast-to-local-type>
            <collation flag='0' name='LEN_RUS' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_WLONGVARCHAR&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_WCHAR&quot;</attribute>
            </attributes>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column caption='NormalisedRatio' datatype='real' name='[Calculation_1730812182851096]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='if ([Calculation_5270812182716952 1]&gt;[Parameters].[Parameter 3]) then [Calculation_8450812182825530]/[Calculation_5270812182716952] else -0.01 end' scope-isolation='false'>
          <table-calc ordering-type='Rows' />
        </calculation>
      </column>
      <column caption='ColourField' datatype='string' name='[Calculation_2730813141847173]' role='measure' type='nominal'>
        <calculation class='tableau' formula='if [Calculation_1730812182851096]&gt;1 then &quot;Over-represented&quot; elseif [Calculation_1730812182851096]&lt;0 then &quot;Stats too low&quot; else &quot;Under-represented&quot; end' scope-isolation='false'>
          <table-calc ordering-type='Rows' />
        </calculation>
      </column>
      <column caption='Count in all' datatype='integer' name='[Calculation_5270812182716952 1 1]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='sum(1)' scope-isolation='false' />
      </column>
      <column caption='Count in extreme sellers' datatype='integer' name='[Calculation_5270812182716952 1]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='sum(if [sellers] = [Parameters].[Parameter 2] then 1 else 0 end)' scope-isolation='false' />
      </column>
      <column caption='Ratio in all' datatype='real' name='[Calculation_5270812182716952]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='[Calculation_5270812182716952 1 1]/Total([Calculation_5270812182716952 1 1])' scope-isolation='false'>
          <table-calc ordering-type='Rows' />
        </calculation>
      </column>
      <column caption='Ratio in extreme sellers' datatype='real' name='[Calculation_8450812182825530]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='[Calculation_5270812182716952 1]/Total([Calculation_5270812182716952 1])' scope-isolation='false'>
          <table-calc ordering-type='Rows' />
        </calculation>
      </column>
      <column datatype='integer' name='[Number of Records]' role='measure' type='quantitative' user:auto-column='numrec'>
        <calculation class='tableau' formula='1' />
      </column>
      <column caption='Category' datatype='string' name='[category]' role='dimension' type='nominal'>
      </column>
      <column caption='Country' datatype='string' name='[country]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal'>
      </column>
      <column caption='Facetbrand' datatype='string' name='[facetbrand]' role='dimension' type='nominal'>
      </column>
      <column caption='Json Productkey' datatype='string' name='[json_productkey]' role='dimension' type='nominal'>
      </column>
      <column caption='Price Currentdaymode' datatype='real' name='[price_currentdaymode]' role='measure' type='quantitative'>
      </column>
      <column caption='Retailername' datatype='string' name='[retailername]' role='dimension' type='nominal'>
      </column>
      <column caption='Sellers' datatype='string' name='[sellers]' role='dimension' type='nominal'>
      </column>
      <column caption='Subcategory' datatype='string' name='[subcategory]' role='dimension' type='nominal'>
      </column>
      <column caption='Taxonomiccolour' datatype='string' name='[taxonomiccolour]' role='dimension' type='nominal'>
      </column>
      <column-instance column='[facetbrand]' derivation='None' name='[none:facetbrand:nk]' pivot='key' type='nominal' />
      <column-instance column='[subcategory]' derivation='None' name='[none:subcategory:nk]' pivot='key' type='nominal' />
      <column-instance column='[Calculation_2730813141847173]' derivation='User' name='[usr:Calculation_2730813141847173:nk:1]' pivot='key' type='nominal'>
        <table-calc ordering-type='Rows' />
        <table-calc field='[greenplum.41863.764809224500].[Calculation_1730812182851096]' ordering-type='Rows' />
        <table-calc field='[greenplum.41863.764809224500].[Calculation_8450812182825530]' ordering-type='Rows' />
        <table-calc field='[greenplum.41863.764809224500].[Calculation_5270812182716952]' ordering-type='Rows' />
      </column-instance>
      <layout dim-ordering='alphabetic' dim-percentage='0.5' measure-ordering='alphabetic' measure-percentage='0.4' show-structure='true' />
      <style>
        <style-rule element='mark'>
          <encoding attr='color' field='[none:subcategory:nk]' type='palette'>
            <map to='#17becf'>
              <bucket>&quot;party dress&quot;</bucket>
            </map>
            <map to='#1f77b4'>
              <bucket>&quot;midi dress&quot;</bucket>
            </map>
            <map to='#1f77b4'>
              <bucket>&quot;unclassified&quot;</bucket>
            </map>
            <map to='#2ca02c'>
              <bucket>&quot;shift dress&quot;</bucket>
            </map>
            <map to='#7f7f7f'>
              <bucket>&quot;mini dress&quot;</bucket>
            </map>
            <map to='#8c564b'>
              <bucket>&quot;prom dress&quot;</bucket>
            </map>
            <map to='#9467bd'>
              <bucket>&quot;sheath dress&quot;</bucket>
            </map>
            <map to='#98df8a'>
              <bucket>&quot;slip dress&quot;</bucket>
            </map>
            <map to='#9edae5'>
              <bucket>&quot;fit &amp; flare dress&quot;</bucket>
            </map>
            <map to='#aec7e8'>
              <bucket>&quot;pinafore dress&quot;</bucket>
            </map>
            <map to='#bcbd22'>
              <bucket>&quot;lace dress&quot;</bucket>
            </map>
            <map to='#c49c94'>
              <bucket>&quot;smock dress&quot;</bucket>
            </map>
            <map to='#c5b0d5'>
              <bucket>&quot;bodycon dress&quot;</bucket>
            </map>
            <map to='#c7c7c7'>
              <bucket>&quot;strapless dress&quot;</bucket>
            </map>
            <map to='#d62728'>
              <bucket>&quot;wrap&quot;</bucket>
            </map>
            <map to='#dbdb8d'>
              <bucket>&quot;maxi dress&quot;</bucket>
            </map>
            <map to='#e377c2'>
              <bucket>&quot;tank dress&quot;</bucket>
            </map>
            <map to='#f7b6d2'>
              <bucket>&quot;skater dress&quot;</bucket>
            </map>
            <map to='#ff7f0e'>
              <bucket>&quot;t-shirt dress&quot;</bucket>
            </map>
            <map to='#ff9896'>
              <bucket>&quot;sweater &amp; jumper dress&quot;</bucket>
            </map>
            <map to='#ffbb78'>
              <bucket>&quot;shirt dress&quot;</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[none:facetbrand:nk]' type='palette'>
            <map to='#17becf'>
              <bucket>&quot;alexander wang&quot;</bucket>
            </map>
            <map to='#17becf'>
              <bucket>&quot;attention&quot;</bucket>
            </map>
            <map to='#17becf'>
              <bucket>&quot;bcbgmaxazria&quot;</bucket>
            </map>
            <map to='#17becf'>
              <bucket>&quot;c&amp;c california&quot;</bucket>
            </map>
            <map to='#17becf'>
              <bucket>&quot;christophe lemaire&quot;</bucket>
            </map>
            <map to='#17becf'>
              <bucket>&quot;club l&quot;</bucket>
            </map>
            <map to='#17becf'>
              <bucket>&quot;dotti&quot;</bucket>
            </map>
            <map to='#17becf'>
              <bucket>&quot;dr denim&quot;</bucket>
            </map>
            <map to='#17becf'>
              <bucket>&quot;esprit&quot;</bucket>
            </map>
            <map to='#17becf'>
              <bucket>&quot;fleur wood&quot;</bucket>
            </map>
            <map to='#17becf'>
              <bucket>&quot;heart n soul&quot;</bucket>
            </map>
            <map to='#17becf'>
              <bucket>&quot;joe&apos;s&quot;</bucket>
            </map>
            <map to='#17becf'>
              <bucket>&quot;love&quot;</bucket>
            </map>
            <map to='#17becf'>
              <bucket>&quot;love zooey&quot;</bucket>
            </map>
            <map to='#17becf'>
              <bucket>&quot;lucca couture&quot;</bucket>
            </map>
            <map to='#17becf'>
              <bucket>&quot;marc jacobs&quot;</bucket>
            </map>
            <map to='#17becf'>
              <bucket>&quot;maxmara&quot;</bucket>
            </map>
            <map to='#17becf'>
              <bucket>&quot;numph&quot;</bucket>
            </map>
            <map to='#17becf'>
              <bucket>&quot;olsenboye&quot;</bucket>
            </map>
            <map to='#17becf'>
              <bucket>&quot;sparkle &amp; fade&quot;</bucket>
            </map>
            <map to='#17becf'>
              <bucket>&quot;splendid&quot;</bucket>
            </map>
            <map to='#17becf'>
              <bucket>&quot;t by alexander wang&quot;</bucket>
            </map>
            <map to='#17becf'>
              <bucket>&quot;topshop&quot;</bucket>
            </map>
            <map to='#17becf'>
              <bucket>&quot;u.s. polo assn.&quot;</bucket>
            </map>
            <map to='#17becf'>
              <bucket>&quot;victoria victoria beckham&quot;</bucket>
            </map>
            <map to='#17becf'>
              <bucket>&quot;weavers&quot;</bucket>
            </map>
            <map to='#1f77b4'>
              <bucket>&quot;12th street by cynthia vincent&quot;</bucket>
            </map>
            <map to='#1f77b4'>
              <bucket>&quot;ali ro&quot;</bucket>
            </map>
            <map to='#1f77b4'>
              <bucket>&quot;bolzoni &amp; walsh&quot;</bucket>
            </map>
            <map to='#1f77b4'>
              <bucket>&quot;carven&quot;</bucket>
            </map>
            <map to='#1f77b4'>
              <bucket>&quot;catherine malandrino&quot;</bucket>
            </map>
            <map to='#1f77b4'>
              <bucket>&quot;city chic&quot;</bucket>
            </map>
            <map to='#1f77b4'>
              <bucket>&quot;creatures of the wind&quot;</bucket>
            </map>
            <map to='#1f77b4'>
              <bucket>&quot;damsel in a dress&quot;</bucket>
            </map>
            <map to='#1f77b4'>
              <bucket>&quot;eileen fisher plus&quot;</bucket>
            </map>
            <map to='#1f77b4'>
              <bucket>&quot;fashion star&quot;</bucket>
            </map>
            <map to='#1f77b4'>
              <bucket>&quot;fred perry&quot;</bucket>
            </map>
            <map to='#1f77b4'>
              <bucket>&quot;greylin&quot;</bucket>
            </map>
            <map to='#1f77b4'>
              <bucket>&quot;josie natori&quot;</bucket>
            </map>
            <map to='#1f77b4'>
              <bucket>&quot;jovonnista&quot;</bucket>
            </map>
            <map to='#1f77b4'>
              <bucket>&quot;kimchi blue&quot;</bucket>
            </map>
            <map to='#1f77b4'>
              <bucket>&quot;luxology&quot;</bucket>
            </map>
            <map to='#1f77b4'>
              <bucket>&quot;magaschoni&quot;</bucket>
            </map>
            <map to='#1f77b4'>
              <bucket>&quot;mih jeans&quot;</bucket>
            </map>
            <map to='#1f77b4'>
              <bucket>&quot;nina ricci&quot;</bucket>
            </map>
            <map to='#1f77b4'>
              <bucket>&quot;oak&quot;</bucket>
            </map>
            <map to='#1f77b4'>
              <bucket>&quot;people tree&quot;</bucket>
            </map>
            <map to='#1f77b4'>
              <bucket>&quot;rachel rachel roy&quot;</bucket>
            </map>
            <map to='#1f77b4'>
              <bucket>&quot;rickie freeman for teri jon&quot;</bucket>
            </map>
            <map to='#1f77b4'>
              <bucket>&quot;stella mccartney&quot;</bucket>
            </map>
            <map to='#1f77b4'>
              <bucket>&quot;tfnc&quot;</bucket>
            </map>
            <map to='#1f77b4'>
              <bucket>&quot;tommy hilfiger&quot;</bucket>
            </map>
            <map to='#1f77b4'>
              <bucket>&quot;vix&quot;</bucket>
            </map>
            <map to='#1f77b4'>
              <bucket>&quot;yumi london&quot;</bucket>
            </map>
            <map to='#2ca02c'>
              <bucket>&quot;a.n.a&quot;</bucket>
            </map>
            <map to='#2ca02c'>
              <bucket>&quot;alice &amp; you&quot;</bucket>
            </map>
            <map to='#2ca02c'>
              <bucket>&quot;ax paris&quot;</bucket>
            </map>
            <map to='#2ca02c'>
              <bucket>&quot;charlotterusse&quot;</bucket>
            </map>
            <map to='#2ca02c'>
              <bucket>&quot;daisy fuentes&quot;</bucket>
            </map>
            <map to='#2ca02c'>
              <bucket>&quot;derek lam&quot;</bucket>
            </map>
            <map to='#2ca02c'>
              <bucket>&quot;french connection&quot;</bucket>
            </map>
            <map to='#2ca02c'>
              <bucket>&quot;gloria vanderbilt&quot;</bucket>
            </map>
            <map to='#2ca02c'>
              <bucket>&quot;goldie&quot;</bucket>
            </map>
            <map to='#2ca02c'>
              <bucket>&quot;iska&quot;</bucket>
            </map>
            <map to='#2ca02c'>
              <bucket>&quot;ivy &amp; blu&quot;</bucket>
            </map>
            <map to='#2ca02c'>
              <bucket>&quot;jessica howard&quot;</bucket>
            </map>
            <map to='#2ca02c'>
              <bucket>&quot;jigsaw&quot;</bucket>
            </map>
            <map to='#2ca02c'>
              <bucket>&quot;johnny was&quot;</bucket>
            </map>
            <map to='#2ca02c'>
              <bucket>&quot;label by five twelve&quot;</bucket>
            </map>
            <map to='#2ca02c'>
              <bucket>&quot;marni&quot;</bucket>
            </map>
            <map to='#2ca02c'>
              <bucket>&quot;martin grant&quot;</bucket>
            </map>
            <map to='#2ca02c'>
              <bucket>&quot;moda&quot;</bucket>
            </map>
            <map to='#2ca02c'>
              <bucket>&quot;ny collection&quot;</bucket>
            </map>
            <map to='#2ca02c'>
              <bucket>&quot;pins and needles&quot;</bucket>
            </map>
            <map to='#2ca02c'>
              <bucket>&quot;rachel roy&quot;</bucket>
            </map>
            <map to='#2ca02c'>
              <bucket>&quot;sacai&quot;</bucket>
            </map>
            <map to='#2ca02c'>
              <bucket>&quot;sharagano&quot;</bucket>
            </map>
            <map to='#2ca02c'>
              <bucket>&quot;sofia by vix&quot;</bucket>
            </map>
            <map to='#2ca02c'>
              <bucket>&quot;tahari by asl&quot;</bucket>
            </map>
            <map to='#2ca02c'>
              <bucket>&quot;the ragged priest&quot;</bucket>
            </map>
            <map to='#2ca02c'>
              <bucket>&quot;traffic people&quot;</bucket>
            </map>
            <map to='#2ca02c'>
              <bucket>&quot;unique&quot;</bucket>
            </map>
            <map to='#2ca02c'>
              <bucket>&quot;xhilaration&quot;</bucket>
            </map>
            <map to='#7f7f7f'>
              <bucket>&quot;10 crosby derek lam&quot;</bucket>
            </map>
            <map to='#7f7f7f'>
              <bucket>&quot;alice &amp; olivia&quot;</bucket>
            </map>
            <map to='#7f7f7f'>
              <bucket>&quot;be bop&quot;</bucket>
            </map>
            <map to='#7f7f7f'>
              <bucket>&quot;beloved&quot;</bucket>
            </map>
            <map to='#7f7f7f'>
              <bucket>&quot;cooperative&quot;</bucket>
            </map>
            <map to='#7f7f7f'>
              <bucket>&quot;cusp by neiman marcus&quot;</bucket>
            </map>
            <map to='#7f7f7f'>
              <bucket>&quot;diesel&quot;</bucket>
            </map>
            <map to='#7f7f7f'>
              <bucket>&quot;eci&quot;</bucket>
            </map>
            <map to='#7f7f7f'>
              <bucket>&quot;escada&quot;</bucket>
            </map>
            <map to='#7f7f7f'>
              <bucket>&quot;foxcroft&quot;</bucket>
            </map>
            <map to='#7f7f7f'>
              <bucket>&quot;jil sander&quot;</bucket>
            </map>
            <map to='#7f7f7f'>
              <bucket>&quot;kamalikulture&quot;</bucket>
            </map>
            <map to='#7f7f7f'>
              <bucket>&quot;lily rose&quot;</bucket>
            </map>
            <map to='#7f7f7f'>
              <bucket>&quot;lipsy&quot;</bucket>
            </map>
            <map to='#7f7f7f'>
              <bucket>&quot;maison jules&quot;</bucket>
            </map>
            <map to='#7f7f7f'>
              <bucket>&quot;maiyet&quot;</bucket>
            </map>
            <map to='#7f7f7f'>
              <bucket>&quot;muse&quot;</bucket>
            </map>
            <map to='#7f7f7f'>
              <bucket>&quot;muubaa&quot;</bucket>
            </map>
            <map to='#7f7f7f'>
              <bucket>&quot;peter pilotto&quot;</bucket>
            </map>
            <map to='#7f7f7f'>
              <bucket>&quot;route 66&quot;</bucket>
            </map>
            <map to='#7f7f7f'>
              <bucket>&quot;see by chloãžã‡ãžâ_&quot;</bucket>
            </map>
            <map to='#7f7f7f'>
              <bucket>&quot;sejour&quot;</bucket>
            </map>
            <map to='#7f7f7f'>
              <bucket>&quot;soft joie&quot;</bucket>
            </map>
            <map to='#7f7f7f'>
              <bucket>&quot;striders edge&quot;</bucket>
            </map>
            <map to='#7f7f7f'>
              <bucket>&quot;sugarhill boutique&quot;</bucket>
            </map>
            <map to='#7f7f7f'>
              <bucket>&quot;vanessa virginia&quot;</bucket>
            </map>
            <map to='#7f7f7f'>
              <bucket>&quot;velvet heartãžâãžâ_&quot;</bucket>
            </map>
            <map to='#8c564b'>
              <bucket>&quot;alternative&quot;</bucket>
            </map>
            <map to='#8c564b'>
              <bucket>&quot;bcbg&quot;</bucket>
            </map>
            <map to='#8c564b'>
              <bucket>&quot;boutique&quot;</bucket>
            </map>
            <map to='#8c564b'>
              <bucket>&quot;by zoãžã‡ãžâ_&quot;</bucket>
            </map>
            <map to='#8c564b'>
              <bucket>&quot;dolan&quot;</bucket>
            </map>
            <map to='#8c564b'>
              <bucket>&quot;ellen tracy&quot;</bucket>
            </map>
            <map to='#8c564b'>
              <bucket>&quot;emilio pucci&quot;</bucket>
            </map>
            <map to='#8c564b'>
              <bucket>&quot;go silk&quot;</bucket>
            </map>
            <map to='#8c564b'>
              <bucket>&quot;helmut lang&quot;</bucket>
            </map>
            <map to='#8c564b'>
              <bucket>&quot;house of holland&quot;</bucket>
            </map>
            <map to='#8c564b'>
              <bucket>&quot;kenzo&quot;</bucket>
            </map>
            <map to='#8c564b'>
              <bucket>&quot;l&apos;amour&quot;</bucket>
            </map>
            <map to='#8c564b'>
              <bucket>&quot;laundry by shelli segal&quot;</bucket>
            </map>
            <map to='#8c564b'>
              <bucket>&quot;lilly pulitzer¨&quot;</bucket>
            </map>
            <map to='#8c564b'>
              <bucket>&quot;miss tina&quot;</bucket>
            </map>
            <map to='#8c564b'>
              <bucket>&quot;missoni&quot;</bucket>
            </map>
            <map to='#8c564b'>
              <bucket>&quot;moschino&quot;</bucket>
            </map>
            <map to='#8c564b'>
              <bucket>&quot;new look&quot;</bucket>
            </map>
            <map to='#8c564b'>
              <bucket>&quot;Not found&quot;</bucket>
            </map>
            <map to='#8c564b'>
              <bucket>&quot;pink tartan&quot;</bucket>
            </map>
            <map to='#8c564b'>
              <bucket>&quot;presley skye&quot;</bucket>
            </map>
            <map to='#8c564b'>
              <bucket>&quot;river island&quot;</bucket>
            </map>
            <map to='#8c564b'>
              <bucket>&quot;the row&quot;</bucket>
            </map>
            <map to='#8c564b'>
              <bucket>&quot;the whitepepper&quot;</bucket>
            </map>
            <map to='#8c564b'>
              <bucket>&quot;three dots plus&quot;</bucket>
            </map>
            <map to='#8c564b'>
              <bucket>&quot;tsumori chisato&quot;</bucket>
            </map>
            <map to='#8c564b'>
              <bucket>&quot;yumi&quot;</bucket>
            </map>
            <map to='#9467bd'>
              <bucket>&quot;3.1 phillip lim&quot;</bucket>
            </map>
            <map to='#9467bd'>
              <bucket>&quot;akris&quot;</bucket>
            </map>
            <map to='#9467bd'>
              <bucket>&quot;as u wish&quot;</bucket>
            </map>
            <map to='#9467bd'>
              <bucket>&quot;bongo&quot;</bucket>
            </map>
            <map to='#9467bd'>
              <bucket>&quot;cope&quot;</bucket>
            </map>
            <map to='#9467bd'>
              <bucket>&quot;diesel¨&quot;</bucket>
            </map>
            <map to='#9467bd'>
              <bucket>&quot;eight sixty&quot;</bucket>
            </map>
            <map to='#9467bd'>
              <bucket>&quot;halo&quot;</bucket>
            </map>
            <map to='#9467bd'>
              <bucket>&quot;heartloom&quot;</bucket>
            </map>
            <map to='#9467bd'>
              <bucket>&quot;joyrich&quot;</bucket>
            </map>
            <map to='#9467bd'>
              <bucket>&quot;kardashian kollection&quot;</bucket>
            </map>
            <map to='#9467bd'>
              <bucket>&quot;la cera&quot;</bucket>
            </map>
            <map to='#9467bd'>
              <bucket>&quot;le ciel&quot;</bucket>
            </map>
            <map to='#9467bd'>
              <bucket>&quot;love21&quot;</bucket>
            </map>
            <map to='#9467bd'>
              <bucket>&quot;lucabella&quot;</bucket>
            </map>
            <map to='#9467bd'>
              <bucket>&quot;maeve&quot;</bucket>
            </map>
            <map to='#9467bd'>
              <bucket>&quot;mango&quot;</bucket>
            </map>
            <map to='#9467bd'>
              <bucket>&quot;michael van der ham&quot;</bucket>
            </map>
            <map to='#9467bd'>
              <bucket>&quot;nonoo&quot;</bucket>
            </map>
            <map to='#9467bd'>
              <bucket>&quot;oasis&quot;</bucket>
            </map>
            <map to='#9467bd'>
              <bucket>&quot;reiss&quot;</bucket>
            </map>
            <map to='#9467bd'>
              <bucket>&quot;rewind&quot;</bucket>
            </map>
            <map to='#9467bd'>
              <bucket>&quot;selected&quot;</bucket>
            </map>
            <map to='#9467bd'>
              <bucket>&quot;simply vera vera wang&quot;</bucket>
            </map>
            <map to='#9467bd'>
              <bucket>&quot;the odells&quot;</bucket>
            </map>
            <map to='#9467bd'>
              <bucket>&quot;troubadour&quot;</bucket>
            </map>
            <map to='#9467bd'>
              <bucket>&quot;won hundred&quot;</bucket>
            </map>
            <map to='#98df8a'>
              <bucket>&quot;acne studios&quot;</bucket>
            </map>
            <map to='#98df8a'>
              <bucket>&quot;band of outsiders&quot;</bucket>
            </map>
            <map to='#98df8a'>
              <bucket>&quot;collective concepts&quot;</bucket>
            </map>
            <map to='#98df8a'>
              <bucket>&quot;comme des garons&quot;</bucket>
            </map>
            <map to='#98df8a'>
              <bucket>&quot;dieselãžâãžâ_å â€”â¾â€™_&quot;</bucket>
            </map>
            <map to='#98df8a'>
              <bucket>&quot;dream out loud by selena gomez&quot;</bucket>
            </map>
            <map to='#98df8a'>
              <bucket>&quot;ganni&quot;</bucket>
            </map>
            <map to='#98df8a'>
              <bucket>&quot;gottex&quot;</bucket>
            </map>
            <map to='#98df8a'>
              <bucket>&quot;jessica simpson&quot;</bucket>
            </map>
            <map to='#98df8a'>
              <bucket>&quot;jonathan simkhai&quot;</bucket>
            </map>
            <map to='#98df8a'>
              <bucket>&quot;jovonista&quot;</bucket>
            </map>
            <map to='#98df8a'>
              <bucket>&quot;kaliko&quot;</bucket>
            </map>
            <map to='#98df8a'>
              <bucket>&quot;lacoste&quot;</bucket>
            </map>
            <map to='#98df8a'>
              <bucket>&quot;maison scotch&quot;</bucket>
            </map>
            <map to='#98df8a'>
              <bucket>&quot;mcginn&quot;</bucket>
            </map>
            <map to='#98df8a'>
              <bucket>&quot;mcq alexander mcqueen&quot;</bucket>
            </map>
            <map to='#98df8a'>
              <bucket>&quot;michael kors&quot;</bucket>
            </map>
            <map to='#98df8a'>
              <bucket>&quot;nanette lepore&quot;</bucket>
            </map>
            <map to='#98df8a'>
              <bucket>&quot;opening ceremony&quot;</bucket>
            </map>
            <map to='#98df8a'>
              <bucket>&quot;paige&quot;</bucket>
            </map>
            <map to='#98df8a'>
              <bucket>&quot;rachel zoe&quot;</bucket>
            </map>
            <map to='#98df8a'>
              <bucket>&quot;robert rodriguez&quot;</bucket>
            </map>
            <map to='#98df8a'>
              <bucket>&quot;speechless&quot;</bucket>
            </map>
            <map to='#98df8a'>
              <bucket>&quot;tamara mellon&quot;</bucket>
            </map>
            <map to='#98df8a'>
              <bucket>&quot;theory&quot;</bucket>
            </map>
            <map to='#98df8a'>
              <bucket>&quot;thom browne&quot;</bucket>
            </map>
            <map to='#98df8a'>
              <bucket>&quot;tylho&quot;</bucket>
            </map>
            <map to='#98df8a'>
              <bucket>&quot;volume one&quot;</bucket>
            </map>
            <map to='#9edae5'>
              <bucket>&quot;212 collection&quot;</bucket>
            </map>
            <map to='#9edae5'>
              <bucket>&quot;antipodium&quot;</bucket>
            </map>
            <map to='#9edae5'>
              <bucket>&quot;bcx&quot;</bucket>
            </map>
            <map to='#9edae5'>
              <bucket>&quot;bisou bisou&quot;</bucket>
            </map>
            <map to='#9edae5'>
              <bucket>&quot;christopher kane&quot;</bucket>
            </map>
            <map to='#9edae5'>
              <bucket>&quot;cluny&quot;</bucket>
            </map>
            <map to='#9edae5'>
              <bucket>&quot;eileen fisher&quot;</bucket>
            </map>
            <map to='#9edae5'>
              <bucket>&quot;evil twin&quot;</bucket>
            </map>
            <map to='#9edae5'>
              <bucket>&quot;f21&quot;</bucket>
            </map>
            <map to='#9edae5'>
              <bucket>&quot;g-star&quot;</bucket>
            </map>
            <map to='#9edae5'>
              <bucket>&quot;hurley&quot;</bucket>
            </map>
            <map to='#9edae5'>
              <bucket>&quot;jones new york collection&quot;</bucket>
            </map>
            <map to='#9edae5'>
              <bucket>&quot;lucky brand&quot;</bucket>
            </map>
            <map to='#9edae5'>
              <bucket>&quot;madison leigh&quot;</bucket>
            </map>
            <map to='#9edae5'>
              <bucket>&quot;mara hoffman&quot;</bucket>
            </map>
            <map to='#9edae5'>
              <bucket>&quot;michael michael kors plus&quot;</bucket>
            </map>
            <map to='#9edae5'>
              <bucket>&quot;no boundaries&quot;</bucket>
            </map>
            <map to='#9edae5'>
              <bucket>&quot;paul &amp; joe&quot;</bucket>
            </map>
            <map to='#9edae5'>
              <bucket>&quot;see by chloe&quot;</bucket>
            </map>
            <map to='#9edae5'>
              <bucket>&quot;staring at stars&quot;</bucket>
            </map>
            <map to='#9edae5'>
              <bucket>&quot;tahari&quot;</bucket>
            </map>
            <map to='#9edae5'>
              <bucket>&quot;tahari by asl petite&quot;</bucket>
            </map>
            <map to='#9edae5'>
              <bucket>&quot;tory burch&quot;</bucket>
            </map>
            <map to='#9edae5'>
              <bucket>&quot;valentino&quot;</bucket>
            </map>
            <map to='#9edae5'>
              <bucket>&quot;vivienne westwood&quot;</bucket>
            </map>
            <map to='#9edae5'>
              <bucket>&quot;weekend max mara&quot;</bucket>
            </map>
            <map to='#aec7e8'>
              <bucket>&quot;18 and east&quot;</bucket>
            </map>
            <map to='#aec7e8'>
              <bucket>&quot;3.1 phillip lim for target&quot;</bucket>
            </map>
            <map to='#aec7e8'>
              <bucket>&quot;amanda lane&quot;</bucket>
            </map>
            <map to='#aec7e8'>
              <bucket>&quot;bzr&quot;</bucket>
            </map>
            <map to='#aec7e8'>
              <bucket>&quot;calvin klein&quot;</bucket>
            </map>
            <map to='#aec7e8'>
              <bucket>&quot;cloth &amp; stone&quot;</bucket>
            </map>
            <map to='#aec7e8'>
              <bucket>&quot;current elliott&quot;</bucket>
            </map>
            <map to='#aec7e8'>
              <bucket>&quot;d.ra&quot;</bucket>
            </map>
            <map to='#aec7e8'>
              <bucket>&quot;daniel rainn&quot;</bucket>
            </map>
            <map to='#aec7e8'>
              <bucket>&quot;east&quot;</bucket>
            </map>
            <map to='#aec7e8'>
              <bucket>&quot;gucci&quot;</bucket>
            </map>
            <map to='#aec7e8'>
              <bucket>&quot;holding horses&quot;</bucket>
            </map>
            <map to='#aec7e8'>
              <bucket>&quot;iro&quot;</bucket>
            </map>
            <map to='#aec7e8'>
              <bucket>&quot;james perse&quot;</bucket>
            </map>
            <map to='#aec7e8'>
              <bucket>&quot;jones new york sport&quot;</bucket>
            </map>
            <map to='#aec7e8'>
              <bucket>&quot;lowie&quot;</bucket>
            </map>
            <map to='#aec7e8'>
              <bucket>&quot;maggy london&quot;</bucket>
            </map>
            <map to='#aec7e8'>
              <bucket>&quot;michael stars&quot;</bucket>
            </map>
            <map to='#aec7e8'>
              <bucket>&quot;mink pink&quot;</bucket>
            </map>
            <map to='#aec7e8'>
              <bucket>&quot;oh my love&quot;</bucket>
            </map>
            <map to='#aec7e8'>
              <bucket>&quot;olive &amp; oak&quot;</bucket>
            </map>
            <map to='#aec7e8'>
              <bucket>&quot;philosophy&quot;</bucket>
            </map>
            <map to='#aec7e8'>
              <bucket>&quot;ralph lauren&quot;</bucket>
            </map>
            <map to='#aec7e8'>
              <bucket>&quot;rebecca taylor&quot;</bucket>
            </map>
            <map to='#aec7e8'>
              <bucket>&quot;steven alan&quot;</bucket>
            </map>
            <map to='#aec7e8'>
              <bucket>&quot;studio m&quot;</bucket>
            </map>
            <map to='#aec7e8'>
              <bucket>&quot;the addison story&quot;</bucket>
            </map>
            <map to='#aec7e8'>
              <bucket>&quot;the portland collection by pendleton&quot;</bucket>
            </map>
            <map to='#bcbd22'>
              <bucket>&quot;alfani&quot;</bucket>
            </map>
            <map to='#bcbd22'>
              <bucket>&quot;apt. 9&quot;</bucket>
            </map>
            <map to='#bcbd22'>
              <bucket>&quot;boutique by jaeger&quot;</bucket>
            </map>
            <map to='#bcbd22'>
              <bucket>&quot;chandi and lia&quot;</bucket>
            </map>
            <map to='#bcbd22'>
              <bucket>&quot;dieselîî_š—¾’_&quot;</bucket>
            </map>
            <map to='#bcbd22'>
              <bucket>&quot;donna karan&quot;</bucket>
            </map>
            <map to='#bcbd22'>
              <bucket>&quot;faded glory&quot;</bucket>
            </map>
            <map to='#bcbd22'>
              <bucket>&quot;hatley&quot;</bucket>
            </map>
            <map to='#bcbd22'>
              <bucket>&quot;i.madeline&quot;</bucket>
            </map>
            <map to='#bcbd22'>
              <bucket>&quot;indication by eci&quot;</bucket>
            </map>
            <map to='#bcbd22'>
              <bucket>&quot;j.crew&quot;</bucket>
            </map>
            <map to='#bcbd22'>
              <bucket>&quot;just female&quot;</bucket>
            </map>
            <map to='#bcbd22'>
              <bucket>&quot;karen millen&quot;</bucket>
            </map>
            <map to='#bcbd22'>
              <bucket>&quot;liz claiborne&quot;</bucket>
            </map>
            <map to='#bcbd22'>
              <bucket>&quot;loro piana&quot;</bucket>
            </map>
            <map to='#bcbd22'>
              <bucket>&quot;lucy love&quot;</bucket>
            </map>
            <map to='#bcbd22'>
              <bucket>&quot;nicole miller&quot;</bucket>
            </map>
            <map to='#bcbd22'>
              <bucket>&quot;nine &amp; co&quot;</bucket>
            </map>
            <map to='#bcbd22'>
              <bucket>&quot;rebecca minkoff&quot;</bucket>
            </map>
            <map to='#bcbd22'>
              <bucket>&quot;shoshanna&quot;</bucket>
            </map>
            <map to='#bcbd22'>
              <bucket>&quot;sister jane&quot;</bucket>
            </map>
            <map to='#bcbd22'>
              <bucket>&quot;sl fashions&quot;</bucket>
            </map>
            <map to='#bcbd22'>
              <bucket>&quot;studio one&quot;</bucket>
            </map>
            <map to='#bcbd22'>
              <bucket>&quot;vince&quot;</bucket>
            </map>
            <map to='#bcbd22'>
              <bucket>&quot;vince camuto&quot;</bucket>
            </map>
            <map to='#bcbd22'>
              <bucket>&quot;wal g&quot;</bucket>
            </map>
            <map to='#c49c94'>
              <bucket>&quot;a wear&quot;</bucket>
            </map>
            <map to='#c49c94'>
              <bucket>&quot;allen allen&quot;</bucket>
            </map>
            <map to='#c49c94'>
              <bucket>&quot;anglomania&quot;</bucket>
            </map>
            <map to='#c49c94'>
              <bucket>&quot;bdg&quot;</bucket>
            </map>
            <map to='#c49c94'>
              <bucket>&quot;carhartt&quot;</bucket>
            </map>
            <map to='#c49c94'>
              <bucket>&quot;costa blanca&quot;</bucket>
            </map>
            <map to='#c49c94'>
              <bucket>&quot;dolce vita&quot;</bucket>
            </map>
            <map to='#c49c94'>
              <bucket>&quot;emma cook&quot;</bucket>
            </map>
            <map to='#c49c94'>
              <bucket>&quot;equipment&quot;</bucket>
            </map>
            <map to='#c49c94'>
              <bucket>&quot;hilfiger denim&quot;</bucket>
            </map>
            <map to='#c49c94'>
              <bucket>&quot;jag jeans&quot;</bucket>
            </map>
            <map to='#c49c94'>
              <bucket>&quot;l&apos;wren scott&quot;</bucket>
            </map>
            <map to='#c49c94'>
              <bucket>&quot;lbk&quot;</bucket>
            </map>
            <map to='#c49c94'>
              <bucket>&quot;line &amp; dot&quot;</bucket>
            </map>
            <map to='#c49c94'>
              <bucket>&quot;missoni mare&quot;</bucket>
            </map>
            <map to='#c49c94'>
              <bucket>&quot;motel&quot;</bucket>
            </map>
            <map to='#c49c94'>
              <bucket>&quot;only@macys&quot;</bucket>
            </map>
            <map to='#c49c94'>
              <bucket>&quot;phase eight&quot;</bucket>
            </map>
            <map to='#c49c94'>
              <bucket>&quot;proenza schouler&quot;</bucket>
            </map>
            <map to='#c49c94'>
              <bucket>&quot;religion&quot;</bucket>
            </map>
            <map to='#c49c94'>
              <bucket>&quot;rochas&quot;</bucket>
            </map>
            <map to='#c49c94'>
              <bucket>&quot;sachin + babi&quot;</bucket>
            </map>
            <map to='#c49c94'>
              <bucket>&quot;thakoon&quot;</bucket>
            </map>
            <map to='#c49c94'>
              <bucket>&quot;tommy bahama&quot;</bucket>
            </map>
            <map to='#c49c94'>
              <bucket>&quot;two by vince camuto&quot;</bucket>
            </map>
            <map to='#c49c94'>
              <bucket>&quot;urban renewal&quot;</bucket>
            </map>
            <map to='#c49c94'>
              <bucket>&quot;y.a.s&quot;</bucket>
            </map>
            <map to='#c5b0d5'>
              <bucket>&quot;4.collective&quot;</bucket>
            </map>
            <map to='#c5b0d5'>
              <bucket>&quot;alexander mcqueen&quot;</bucket>
            </map>
            <map to='#c5b0d5'>
              <bucket>&quot;band of gypsies&quot;</bucket>
            </map>
            <map to='#c5b0d5'>
              <bucket>&quot;boss hugo boss&quot;</bucket>
            </map>
            <map to='#c5b0d5'>
              <bucket>&quot;burberry&quot;</bucket>
            </map>
            <map to='#c5b0d5'>
              <bucket>&quot;charter club&quot;</bucket>
            </map>
            <map to='#c5b0d5'>
              <bucket>&quot;cheap monday&quot;</bucket>
            </map>
            <map to='#c5b0d5'>
              <bucket>&quot;darian group&quot;</bucket>
            </map>
            <map to='#c5b0d5'>
              <bucket>&quot;eliza j&quot;</bucket>
            </map>
            <map to='#c5b0d5'>
              <bucket>&quot;haute hippie&quot;</bucket>
            </map>
            <map to='#c5b0d5'>
              <bucket>&quot;kate spade new york&quot;</bucket>
            </map>
            <map to='#c5b0d5'>
              <bucket>&quot;kenneth cole new york&quot;</bucket>
            </map>
            <map to='#c5b0d5'>
              <bucket>&quot;lazy oaf&quot;</bucket>
            </map>
            <map to='#c5b0d5'>
              <bucket>&quot;made&quot;</bucket>
            </map>
            <map to='#c5b0d5'>
              <bucket>&quot;mademoiselle tara&quot;</bucket>
            </map>
            <map to='#c5b0d5'>
              <bucket>&quot;minkpink&quot;</bucket>
            </map>
            <map to='#c5b0d5'>
              <bucket>&quot;mint velvet&quot;</bucket>
            </map>
            <map to='#c5b0d5'>
              <bucket>&quot;monki&quot;</bucket>
            </map>
            <map to='#c5b0d5'>
              <bucket>&quot;o&apos;neill&quot;</bucket>
            </map>
            <map to='#c5b0d5'>
              <bucket>&quot;oscar de la renta&quot;</bucket>
            </map>
            <map to='#c5b0d5'>
              <bucket>&quot;planet gold&quot;</bucket>
            </map>
            <map to='#c5b0d5'>
              <bucket>&quot;rick owens&quot;</bucket>
            </map>
            <map to='#c5b0d5'>
              <bucket>&quot;t tahari&quot;</bucket>
            </map>
            <map to='#c5b0d5'>
              <bucket>&quot;the podolls&quot;</bucket>
            </map>
            <map to='#c5b0d5'>
              <bucket>&quot;true decadence&quot;</bucket>
            </map>
            <map to='#c5b0d5'>
              <bucket>&quot;wood wood&quot;</bucket>
            </map>
            <map to='#c5b0d5'>
              <bucket>&quot;xoxo&quot;</bucket>
            </map>
            <map to='#c7c7c7'>
              <bucket>&quot;agb&quot;</bucket>
            </map>
            <map to='#c7c7c7'>
              <bucket>&quot;alice &amp; trixie&quot;</bucket>
            </map>
            <map to='#c7c7c7'>
              <bucket>&quot;bottega veneta&quot;</bucket>
            </map>
            <map to='#c7c7c7'>
              <bucket>&quot;carmakoma&quot;</bucket>
            </map>
            <map to='#c7c7c7'>
              <bucket>&quot;crimson coast&quot;</bucket>
            </map>
            <map to='#c7c7c7'>
              <bucket>&quot;denim &amp; supply - ralph lauren&quot;</bucket>
            </map>
            <map to='#c7c7c7'>
              <bucket>&quot;evan picone&quot;</bucket>
            </map>
            <map to='#c7c7c7'>
              <bucket>&quot;freak of nature&quot;</bucket>
            </map>
            <map to='#c7c7c7'>
              <bucket>&quot;glamorous&quot;</bucket>
            </map>
            <map to='#c7c7c7'>
              <bucket>&quot;i heart ronson&quot;</bucket>
            </map>
            <map to='#c7c7c7'>
              <bucket>&quot;j brand&quot;</bucket>
            </map>
            <map to='#c7c7c7'>
              <bucket>&quot;joe fresh&quot;</bucket>
            </map>
            <map to='#c7c7c7'>
              <bucket>&quot;lira&quot;</bucket>
            </map>
            <map to='#c7c7c7'>
              <bucket>&quot;lisa marie fernandez&quot;</bucket>
            </map>
            <map to='#c7c7c7'>
              <bucket>&quot;lucky brand jeans&quot;</bucket>
            </map>
            <map to='#c7c7c7'>
              <bucket>&quot;my michelle&quot;</bucket>
            </map>
            <map to='#c7c7c7'>
              <bucket>&quot;neon rose&quot;</bucket>
            </map>
            <map to='#c7c7c7'>
              <bucket>&quot;rag &amp; bone&quot;</bucket>
            </map>
            <map to='#c7c7c7'>
              <bucket>&quot;ruby rocks&quot;</bucket>
            </map>
            <map to='#c7c7c7'>
              <bucket>&quot;see by chlož&quot;</bucket>
            </map>
            <map to='#c7c7c7'>
              <bucket>&quot;simone rocha&quot;</bucket>
            </map>
            <map to='#c7c7c7'>
              <bucket>&quot;stetson&quot;</bucket>
            </map>
            <map to='#c7c7c7'>
              <bucket>&quot;toast&quot;</bucket>
            </map>
            <map to='#c7c7c7'>
              <bucket>&quot;ultra flirt&quot;</bucket>
            </map>
            <map to='#c7c7c7'>
              <bucket>&quot;versace collection&quot;</bucket>
            </map>
            <map to='#c7c7c7'>
              <bucket>&quot;wrapper&quot;</bucket>
            </map>
            <map to='#d62728'>
              <bucket>&quot;a.l.c.&quot;</bucket>
            </map>
            <map to='#d62728'>
              <bucket>&quot;addison&quot;</bucket>
            </map>
            <map to='#d62728'>
              <bucket>&quot;ann demeulemeester&quot;</bucket>
            </map>
            <map to='#d62728'>
              <bucket>&quot;baum und pferdgarten&quot;</bucket>
            </map>
            <map to='#d62728'>
              <bucket>&quot;bcbgeneration&quot;</bucket>
            </map>
            <map to='#d62728'>
              <bucket>&quot;dana buchman&quot;</bucket>
            </map>
            <map to='#d62728'>
              <bucket>&quot;dieselï‘&quot;</bucket>
            </map>
            <map to='#d62728'>
              <bucket>&quot;dknyc&quot;</bucket>
            </map>
            <map to='#d62728'>
              <bucket>&quot;echo design&quot;</bucket>
            </map>
            <map to='#d62728'>
              <bucket>&quot;edun&quot;</bucket>
            </map>
            <map to='#d62728'>
              <bucket>&quot;grace elements&quot;</bucket>
            </map>
            <map to='#d62728'>
              <bucket>&quot;guess&quot;</bucket>
            </map>
            <map to='#d62728'>
              <bucket>&quot;jnby&quot;</bucket>
            </map>
            <map to='#d62728'>
              <bucket>&quot;jones new york&quot;</bucket>
            </map>
            <map to='#d62728'>
              <bucket>&quot;kin by john lewis&quot;</bucket>
            </map>
            <map to='#d62728'>
              <bucket>&quot;kut from the kloth&quot;</bucket>
            </map>
            <map to='#d62728'>
              <bucket>&quot;larry levine&quot;</bucket>
            </map>
            <map to='#d62728'>
              <bucket>&quot;maison martin margiela&quot;</bucket>
            </map>
            <map to='#d62728'>
              <bucket>&quot;melissa masse&quot;</bucket>
            </map>
            <map to='#d62728'>
              <bucket>&quot;melissa masse plus&quot;</bucket>
            </map>
            <map to='#d62728'>
              <bucket>&quot;merona&quot;</bucket>
            </map>
            <map to='#d62728'>
              <bucket>&quot;nicki minaj&quot;</bucket>
            </map>
            <map to='#d62728'>
              <bucket>&quot;rag &amp; bone/jean&quot;</bucket>
            </map>
            <map to='#d62728'>
              <bucket>&quot;rsvp&quot;</bucket>
            </map>
            <map to='#d62728'>
              <bucket>&quot;topshop unique&quot;</bucket>
            </map>
            <map to='#d62728'>
              <bucket>&quot;vero moda&quot;</bucket>
            </map>
            <map to='#d62728'>
              <bucket>&quot;wetseal&quot;</bucket>
            </map>
            <map to='#d62728'>
              <bucket>&quot;whit&quot;</bucket>
            </map>
            <map to='#d62728'>
              <bucket>&quot;zadig &amp; voltaire&quot;</bucket>
            </map>
            <map to='#dbdb8d'>
              <bucket>&quot;armani&quot;</bucket>
            </map>
            <map to='#dbdb8d'>
              <bucket>&quot;back by ann sofie back&quot;</bucket>
            </map>
            <map to='#dbdb8d'>
              <bucket>&quot;c &amp; c california&quot;</bucket>
            </map>
            <map to='#dbdb8d'>
              <bucket>&quot;chalayan grey line&quot;</bucket>
            </map>
            <map to='#dbdb8d'>
              <bucket>&quot;christin michaels&quot;</bucket>
            </map>
            <map to='#dbdb8d'>
              <bucket>&quot;dknyc plus&quot;</bucket>
            </map>
            <map to='#dbdb8d'>
              <bucket>&quot;donna morgan&quot;</bucket>
            </map>
            <map to='#dbdb8d'>
              <bucket>&quot;eskandar&quot;</bucket>
            </map>
            <map to='#dbdb8d'>
              <bucket>&quot;finders keepers&quot;</bucket>
            </map>
            <map to='#dbdb8d'>
              <bucket>&quot;halston heritage&quot;</bucket>
            </map>
            <map to='#dbdb8d'>
              <bucket>&quot;jaclyn smith&quot;</bucket>
            </map>
            <map to='#dbdb8d'>
              <bucket>&quot;karen kane&quot;</bucket>
            </map>
            <map to='#dbdb8d'>
              <bucket>&quot;lauren ralph lauren&quot;</bucket>
            </map>
            <map to='#dbdb8d'>
              <bucket>&quot;louise amstrup&quot;</bucket>
            </map>
            <map to='#dbdb8d'>
              <bucket>&quot;love reigns&quot;</bucket>
            </map>
            <map to='#dbdb8d'>
              <bucket>&quot;maje&quot;</bucket>
            </map>
            <map to='#dbdb8d'>
              <bucket>&quot;no. 21&quot;</bucket>
            </map>
            <map to='#dbdb8d'>
              <bucket>&quot;nw3&quot;</bucket>
            </map>
            <map to='#dbdb8d'>
              <bucket>&quot;sonia rykiel&quot;</bucket>
            </map>
            <map to='#dbdb8d'>
              <bucket>&quot;sophie hulme&quot;</bucket>
            </map>
            <map to='#dbdb8d'>
              <bucket>&quot;suno&quot;</bucket>
            </map>
            <map to='#dbdb8d'>
              <bucket>&quot;tibi&quot;</bucket>
            </map>
            <map to='#dbdb8d'>
              <bucket>&quot;unconditional&quot;</bucket>
            </map>
            <map to='#dbdb8d'>
              <bucket>&quot;warehouse&quot;</bucket>
            </map>
            <map to='#dbdb8d'>
              <bucket>&quot;worthington&quot;</bucket>
            </map>
            <map to='#e377c2'>
              <bucket>&quot;a. byer&quot;</bucket>
            </map>
            <map to='#e377c2'>
              <bucket>&quot;aryn k&quot;</bucket>
            </map>
            <map to='#e377c2'>
              <bucket>&quot;bb dakota&quot;</bucket>
            </map>
            <map to='#e377c2'>
              <bucket>&quot;belstaff&quot;</bucket>
            </map>
            <map to='#e377c2'>
              <bucket>&quot;carmen marc valvo&quot;</bucket>
            </map>
            <map to='#e377c2'>
              <bucket>&quot;dex&quot;</bucket>
            </map>
            <map to='#e377c2'>
              <bucket>&quot;double d ranchwear&quot;</bucket>
            </map>
            <map to='#e377c2'>
              <bucket>&quot;erdem&quot;</bucket>
            </map>
            <map to='#e377c2'>
              <bucket>&quot;hive &amp; honey&quot;</bucket>
            </map>
            <map to='#e377c2'>
              <bucket>&quot;jarlo&quot;</bucket>
            </map>
            <map to='#e377c2'>
              <bucket>&quot;jason wu&quot;</bucket>
            </map>
            <map to='#e377c2'>
              <bucket>&quot;lafayette 148 new york&quot;</bucket>
            </map>
            <map to='#e377c2'>
              <bucket>&quot;lela rose&quot;</bucket>
            </map>
            <map to='#e377c2'>
              <bucket>&quot;lennie&quot;</bucket>
            </map>
            <map to='#e377c2'>
              <bucket>&quot;little mistress&quot;</bucket>
            </map>
            <map to='#e377c2'>
              <bucket>&quot;madison marcus&quot;</bucket>
            </map>
            <map to='#e377c2'>
              <bucket>&quot;moulinette soeurs&quot;</bucket>
            </map>
            <map to='#e377c2'>
              <bucket>&quot;paul smith&quot;</bucket>
            </map>
            <map to='#e377c2'>
              <bucket>&quot;planet&quot;</bucket>
            </map>
            <map to='#e377c2'>
              <bucket>&quot;qmack&quot;</bucket>
            </map>
            <map to='#e377c2'>
              <bucket>&quot;rare&quot;</bucket>
            </map>
            <map to='#e377c2'>
              <bucket>&quot;roberto cavalli&quot;</bucket>
            </map>
            <map to='#e377c2'>
              <bucket>&quot;saks fifth avenue&quot;</bucket>
            </map>
            <map to='#e377c2'>
              <bucket>&quot;three dots&quot;</bucket>
            </map>
            <map to='#e377c2'>
              <bucket>&quot;twenty8twelve&quot;</bucket>
            </map>
            <map to='#e377c2'>
              <bucket>&quot;velvet&quot;</bucket>
            </map>
            <map to='#e377c2'>
              <bucket>&quot;y&apos;s by yohji yamamoto&quot;</bucket>
            </map>
            <map to='#f7b6d2'>
              <bucket>&quot;adrianna papell&quot;</bucket>
            </map>
            <map to='#f7b6d2'>
              <bucket>&quot;bella dahl&quot;</bucket>
            </map>
            <map to='#f7b6d2'>
              <bucket>&quot;betsey johnson&quot;</bucket>
            </map>
            <map to='#f7b6d2'>
              <bucket>&quot;canyon river blues&quot;</bucket>
            </map>
            <map to='#f7b6d2'>
              <bucket>&quot;catherine malandrino for designation&quot;</bucket>
            </map>
            <map to='#f7b6d2'>
              <bucket>&quot;croft &amp; barrow&quot;</bucket>
            </map>
            <map to='#f7b6d2'>
              <bucket>&quot;dusen dusen&quot;</bucket>
            </map>
            <map to='#f7b6d2'>
              <bucket>&quot;eric and lani&quot;</bucket>
            </map>
            <map to='#f7b6d2'>
              <bucket>&quot;j.w. anderson&quot;</bucket>
            </map>
            <map to='#f7b6d2'>
              <bucket>&quot;jennifer lopez&quot;</bucket>
            </map>
            <map to='#f7b6d2'>
              <bucket>&quot;lc lauren conrad&quot;</bucket>
            </map>
            <map to='#f7b6d2'>
              <bucket>&quot;lida baday&quot;</bucket>
            </map>
            <map to='#f7b6d2'>
              <bucket>&quot;lili&apos;s closet&quot;</bucket>
            </map>
            <map to='#f7b6d2'>
              <bucket>&quot;little white lies&quot;</bucket>
            </map>
            <map to='#f7b6d2'>
              <bucket>&quot;msgm&quot;</bucket>
            </map>
            <map to='#f7b6d2'>
              <bucket>&quot;pepe&quot;</bucket>
            </map>
            <map to='#f7b6d2'>
              <bucket>&quot;plus moda&quot;</bucket>
            </map>
            <map to='#f7b6d2'>
              <bucket>&quot;r13&quot;</bucket>
            </map>
            <map to='#f7b6d2'>
              <bucket>&quot;rock &amp; republic&quot;</bucket>
            </map>
            <map to='#f7b6d2'>
              <bucket>&quot;saloni&quot;</bucket>
            </map>
            <map to='#f7b6d2'>
              <bucket>&quot;sam &amp; lavi&quot;</bucket>
            </map>
            <map to='#f7b6d2'>
              <bucket>&quot;velvet by graham and spencer&quot;</bucket>
            </map>
            <map to='#f7b6d2'>
              <bucket>&quot;viva vena&quot;</bucket>
            </map>
            <map to='#f7b6d2'>
              <bucket>&quot;weekend by maxmara&quot;</bucket>
            </map>
            <map to='#f7b6d2'>
              <bucket>&quot;ymc&quot;</bucket>
            </map>
            <map to='#f7b6d2'>
              <bucket>&quot;z spoke zac posen&quot;</bucket>
            </map>
            <map to='#ff7f0e'>
              <bucket>&quot;2nd day&quot;</bucket>
            </map>
            <map to='#ff7f0e'>
              <bucket>&quot;ab studio&quot;</bucket>
            </map>
            <map to='#ff7f0e'>
              <bucket>&quot;amanda uprichard&quot;</bucket>
            </map>
            <map to='#ff7f0e'>
              <bucket>&quot;american rag&quot;</bucket>
            </map>
            <map to='#ff7f0e'>
              <bucket>&quot;anne klein&quot;</bucket>
            </map>
            <map to='#ff7f0e'>
              <bucket>&quot;carolina herrera&quot;</bucket>
            </map>
            <map to='#ff7f0e'>
              <bucket>&quot;cherokee&quot;</bucket>
            </map>
            <map to='#ff7f0e'>
              <bucket>&quot;cut25&quot;</bucket>
            </map>
            <map to='#ff7f0e'>
              <bucket>&quot;dagmar&quot;</bucket>
            </map>
            <map to='#ff7f0e'>
              <bucket>&quot;danny &amp; nicole&quot;</bucket>
            </map>
            <map to='#ff7f0e'>
              <bucket>&quot;derek lam for designation&quot;</bucket>
            </map>
            <map to='#ff7f0e'>
              <bucket>&quot;diane von furstenberg&quot;</bucket>
            </map>
            <map to='#ff7f0e'>
              <bucket>&quot;elie tahari&quot;</bucket>
            </map>
            <map to='#ff7f0e'>
              <bucket>&quot;freya&quot;</bucket>
            </map>
            <map to='#ff7f0e'>
              <bucket>&quot;hobbs&quot;</bucket>
            </map>
            <map to='#ff7f0e'>
              <bucket>&quot;inc&quot;</bucket>
            </map>
            <map to='#ff7f0e'>
              <bucket>&quot;indikka&quot;</bucket>
            </map>
            <map to='#ff7f0e'>
              <bucket>&quot;kelly wearstler&quot;</bucket>
            </map>
            <map to='#ff7f0e'>
              <bucket>&quot;maid in love&quot;</bucket>
            </map>
            <map to='#ff7f0e'>
              <bucket>&quot;marchesa voyage&quot;</bucket>
            </map>
            <map to='#ff7f0e'>
              <bucket>&quot;milly&quot;</bucket>
            </map>
            <map to='#ff7f0e'>
              <bucket>&quot;ostwald helgason&quot;</bucket>
            </map>
            <map to='#ff7f0e'>
              <bucket>&quot;plenty by tracy reese&quot;</bucket>
            </map>
            <map to='#ff7f0e'>
              <bucket>&quot;robbie bee&quot;</bucket>
            </map>
            <map to='#ff7f0e'>
              <bucket>&quot;royal robbins&quot;</bucket>
            </map>
            <map to='#ff7f0e'>
              <bucket>&quot;studio 1&quot;</bucket>
            </map>
            <map to='#ff7f0e'>
              <bucket>&quot;stylestalker&quot;</bucket>
            </map>
            <map to='#ff7f0e'>
              <bucket>&quot;tiny&quot;</bucket>
            </map>
            <map to='#ff9896'>
              <bucket>&quot;aeo&quot;</bucket>
            </map>
            <map to='#ff9896'>
              <bucket>&quot;ariat&quot;</bucket>
            </map>
            <map to='#ff9896'>
              <bucket>&quot;bobeau&quot;</bucket>
            </map>
            <map to='#ff9896'>
              <bucket>&quot;edme &amp; esyllte&quot;</bucket>
            </map>
            <map to='#ff9896'>
              <bucket>&quot;etro&quot;</bucket>
            </map>
            <map to='#ff9896'>
              <bucket>&quot;hale bob&quot;</bucket>
            </map>
            <map to='#ff9896'>
              <bucket>&quot;iz byer california&quot;</bucket>
            </map>
            <map to='#ff9896'>
              <bucket>&quot;joie&quot;</bucket>
            </map>
            <map to='#ff9896'>
              <bucket>&quot;jovonna&quot;</bucket>
            </map>
            <map to='#ff9896'>
              <bucket>&quot;juicy couture&quot;</bucket>
            </map>
            <map to='#ff9896'>
              <bucket>&quot;karen kane plus&quot;</bucket>
            </map>
            <map to='#ff9896'>
              <bucket>&quot;kensie&quot;</bucket>
            </map>
            <map to='#ff9896'>
              <bucket>&quot;lands&apos; end&quot;</bucket>
            </map>
            <map to='#ff9896'>
              <bucket>&quot;lavish alice&quot;</bucket>
            </map>
            <map to='#ff9896'>
              <bucket>&quot;mary katrantzou&quot;</bucket>
            </map>
            <map to='#ff9896'>
              <bucket>&quot;metaphor&quot;</bucket>
            </map>
            <map to='#ff9896'>
              <bucket>&quot;mossimo&quot;</bucket>
            </map>
            <map to='#ff9896'>
              <bucket>&quot;noisy may&quot;</bucket>
            </map>
            <map to='#ff9896'>
              <bucket>&quot;parker&quot;</bucket>
            </map>
            <map to='#ff9896'>
              <bucket>&quot;r&amp;k originals&quot;</bucket>
            </map>
            <map to='#ff9896'>
              <bucket>&quot;raoul&quot;</bucket>
            </map>
            <map to='#ff9896'>
              <bucket>&quot;sanctuary&quot;</bucket>
            </map>
            <map to='#ff9896'>
              <bucket>&quot;teri jon&quot;</bucket>
            </map>
            <map to='#ff9896'>
              <bucket>&quot;tracy reese&quot;</bucket>
            </map>
            <map to='#ff9896'>
              <bucket>&quot;vicky tiel&quot;</bucket>
            </map>
            <map to='#ff9896'>
              <bucket>&quot;whistles&quot;</bucket>
            </map>
            <map to='#ff9896'>
              <bucket>&quot;zero + maria cornejo&quot;</bucket>
            </map>
            <map to='#ffbb78'>
              <bucket>&quot;7 for all mankind&quot;</bucket>
            </map>
            <map to='#ffbb78'>
              <bucket>&quot;adam lippes&quot;</bucket>
            </map>
            <map to='#ffbb78'>
              <bucket>&quot;aqua&quot;</bucket>
            </map>
            <map to='#ffbb78'>
              <bucket>&quot;bar iii&quot;</bucket>
            </map>
            <map to='#ffbb78'>
              <bucket>&quot;chicos&quot;</bucket>
            </map>
            <map to='#ffbb78'>
              <bucket>&quot;cynthia steffe&quot;</bucket>
            </map>
            <map to='#ffbb78'>
              <bucket>&quot;day birger et mikkelsen&quot;</bucket>
            </map>
            <map to='#ffbb78'>
              <bucket>&quot;dkny&quot;</bucket>
            </map>
            <map to='#ffbb78'>
              <bucket>&quot;donna ricco&quot;</bucket>
            </map>
            <map to='#ffbb78'>
              <bucket>&quot;free people&quot;</bucket>
            </map>
            <map to='#ffbb78'>
              <bucket>&quot;givenchy&quot;</bucket>
            </map>
            <map to='#ffbb78'>
              <bucket>&quot;insight&quot;</bucket>
            </map>
            <map to='#ffbb78'>
              <bucket>&quot;isaac mizrahi new york&quot;</bucket>
            </map>
            <map to='#ffbb78'>
              <bucket>&quot;jaeger&quot;</bucket>
            </map>
            <map to='#ffbb78'>
              <bucket>&quot;la made&quot;</bucket>
            </map>
            <map to='#ffbb78'>
              <bucket>&quot;love your style, love your size&quot;</bucket>
            </map>
            <map to='#ffbb78'>
              <bucket>&quot;markus lupfer&quot;</bucket>
            </map>
            <map to='#ffbb78'>
              <bucket>&quot;mimi chica&quot;</bucket>
            </map>
            <map to='#ffbb78'>
              <bucket>&quot;pendleton&quot;</bucket>
            </map>
            <map to='#ffbb78'>
              <bucket>&quot;peter jensen&quot;</bucket>
            </map>
            <map to='#ffbb78'>
              <bucket>&quot;rabbit rabbit&quot;</bucket>
            </map>
            <map to='#ffbb78'>
              <bucket>&quot;ronni nicole&quot;</bucket>
            </map>
            <map to='#ffbb78'>
              <bucket>&quot;sandro&quot;</bucket>
            </map>
            <map to='#ffbb78'>
              <bucket>&quot;see u soon&quot;</bucket>
            </map>
            <map to='#ffbb78'>
              <bucket>&quot;sonoma life + style&quot;</bucket>
            </map>
            <map to='#ffbb78'>
              <bucket>&quot;superdry&quot;</bucket>
            </map>
            <map to='#ffbb78'>
              <bucket>&quot;ted baker london&quot;</bucket>
            </map>
            <map to='#ffbb78'>
              <bucket>&quot;trina turk&quot;</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[usr:Calculation_2730813141847173:nk:1]' type='palette'>
            <map to='#09622a'>
              <bucket>&quot;over&quot;</bucket>
            </map>
            <map to='#1e1e1e'>
              <bucket>&quot;nostats&quot;</bucket>
            </map>
            <map to='#1e1e1e'>
              <bucket>&quot;Stats too low&quot;</bucket>
            </map>
            <map to='#1f83b4'>
              <bucket>&quot;Over-represented&quot;</bucket>
            </map>
            <map to='#9c0824'>
              <bucket>&quot;under&quot;</bucket>
            </map>
            <map to='#c94d8c'>
              <bucket>&quot;Under-represented&quot;</bucket>
            </map>
          </encoding>
        </style-rule>
      </style>
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;Reino Unido&quot;' />
      </semantic-values>
      <date-options start-of-week='monday' />
      <datasource-dependencies datasource='Parameters'>
        <column alias='Poor sellers' caption='Analysis' datatype='string' name='[Parameter 2]' param-domain-type='list' role='measure' type='nominal' value='&quot;worst&quot;'>
          <calculation class='tableau' formula='&quot;worst&quot;' />
          <aliases>
            <alias key='&quot;best&quot;' value='Best sellers' />
            <alias key='&quot;worst&quot;' value='Poor sellers' />
          </aliases>
          <members>
            <member alias='Best sellers' value='&quot;best&quot;' />
            <member alias='Poor sellers' value='&quot;worst&quot;' />
          </members>
        </column>
        <column caption='Low Stats' datatype='real' name='[Parameter 3]' param-domain-type='range' role='measure' type='quantitative' value='5.0'>
          <calculation class='tableau' formula='5.0' />
          <desc>
            <formatted-text>
              <run>Threshold at which stats are too low to calculate ratio</run>
            </formatted-text>
          </desc>
          <range granularity='1.0' max='10.0' min='1.0' />
        </column>
      </datasource-dependencies>
    </datasource>
    <datasource caption='extremesellers_lastweek (ds.extremesellers_lastweek) (demo)' inline='true' name='greenplum.41871.617679803200' version='8.3'>
      <connection class='greenplum' dbname='demo' expected-driver-version='PostgreSQL Unicode' odbc-native-protocol='yes' port='9999' server='localhost' username='gpadmin'>
        <relation name='extremesellers_lastweek' table='[ds].[extremesellers_lastweek]' type='table' />
        <metadata-records>
          <metadata-record class='column'>
            <remote-name>json_productkey</remote-name>
            <remote-type>130</remote-type>
            <local-name>[json_productkey]</local-name>
            <parent-name>[extremesellers_lastweek]</parent-name>
            <remote-alias>json_productkey</remote-alias>
            <ordinal>1</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <width>255</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_WVARCHAR&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_WCHAR&quot;</attribute>
              <attribute datatype='string' name='TypeIsVarchar'>&quot;true&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>category</remote-name>
            <remote-type>130</remote-type>
            <local-name>[category]</local-name>
            <parent-name>[extremesellers_lastweek]</parent-name>
            <remote-alias>category</remote-alias>
            <ordinal>2</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <width>8190</width>
            <contains-null>true</contains-null>
            <cast-to-local-type>true</cast-to-local-type>
            <collation flag='0' name='LEN_RUS' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_WLONGVARCHAR&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_WCHAR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>subcategory</remote-name>
            <remote-type>130</remote-type>
            <local-name>[subcategory]</local-name>
            <parent-name>[extremesellers_lastweek]</parent-name>
            <remote-alias>subcategory</remote-alias>
            <ordinal>3</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <width>8190</width>
            <contains-null>true</contains-null>
            <cast-to-local-type>true</cast-to-local-type>
            <collation flag='0' name='LEN_RUS' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_WLONGVARCHAR&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_WCHAR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>retailername</remote-name>
            <remote-type>130</remote-type>
            <local-name>[retailername]</local-name>
            <parent-name>[extremesellers_lastweek]</parent-name>
            <remote-alias>retailername</remote-alias>
            <ordinal>4</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <width>8190</width>
            <contains-null>true</contains-null>
            <cast-to-local-type>true</cast-to-local-type>
            <collation flag='0' name='LEN_RUS' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_WLONGVARCHAR&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_WCHAR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>facetbrand</remote-name>
            <remote-type>130</remote-type>
            <local-name>[facetbrand]</local-name>
            <parent-name>[extremesellers_lastweek]</parent-name>
            <remote-alias>facetbrand</remote-alias>
            <ordinal>5</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <width>8190</width>
            <contains-null>true</contains-null>
            <cast-to-local-type>true</cast-to-local-type>
            <collation flag='0' name='LEN_RUS' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_WLONGVARCHAR&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_WCHAR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>taxonomiccolour</remote-name>
            <remote-type>130</remote-type>
            <local-name>[taxonomiccolour]</local-name>
            <parent-name>[extremesellers_lastweek]</parent-name>
            <remote-alias>taxonomiccolour</remote-alias>
            <ordinal>6</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <width>8190</width>
            <contains-null>true</contains-null>
            <cast-to-local-type>true</cast-to-local-type>
            <collation flag='0' name='LEN_RUS' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_WLONGVARCHAR&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_WCHAR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>country</remote-name>
            <remote-type>130</remote-type>
            <local-name>[country]</local-name>
            <parent-name>[extremesellers_lastweek]</parent-name>
            <remote-alias>country</remote-alias>
            <ordinal>7</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <width>8190</width>
            <contains-null>true</contains-null>
            <cast-to-local-type>true</cast-to-local-type>
            <collation flag='0' name='LEN_RUS' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_WLONGVARCHAR&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_WCHAR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>price_currentdaymode</remote-name>
            <remote-type>5</remote-type>
            <local-name>[price_currentdaymode]</local-name>
            <parent-name>[extremesellers_lastweek]</parent-name>
            <remote-alias>price_currentdaymode</remote-alias>
            <ordinal>8</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_FLOAT&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_DOUBLE&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>sellers</remote-name>
            <remote-type>130</remote-type>
            <local-name>[sellers]</local-name>
            <parent-name>[extremesellers_lastweek]</parent-name>
            <remote-alias>sellers</remote-alias>
            <ordinal>9</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <width>8190</width>
            <contains-null>true</contains-null>
            <cast-to-local-type>true</cast-to-local-type>
            <collation flag='0' name='LEN_RUS' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_WLONGVARCHAR&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_WCHAR&quot;</attribute>
            </attributes>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column caption='NormalisedRatio' datatype='real' name='[Calculation_1730812182851096]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='if ([Calculation_5270812182716952 1]&gt;[Parameters].[Parameter 3]) then [Calculation_8450812182825530]/[Calculation_5270812182716952] else -0.01 end' scope-isolation='false'>
          <table-calc ordering-type='Rows' />
        </calculation>
      </column>
      <column caption='ColourField' datatype='string' name='[Calculation_2730813141847173]' role='measure' type='nominal'>
        <calculation class='tableau' formula='if [Calculation_1730812182851096]&gt;1 then &quot;Over-represented&quot; elseif [Calculation_1730812182851096]&lt;0 then &quot;Stats too low&quot; else &quot;Under-represented&quot; end' scope-isolation='false'>
          <table-calc ordering-type='Rows' />
        </calculation>
      </column>
      <column caption='Count in all' datatype='integer' name='[Calculation_5270812182716952 1 1]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='sum(1)' scope-isolation='false' />
      </column>
      <column caption='Count in extreme sellers' datatype='integer' name='[Calculation_5270812182716952 1]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='sum(if [sellers] = [Parameters].[Parameter 2] then 1 else 0 end)' scope-isolation='false' />
      </column>
      <column caption='Ratio in all' datatype='real' name='[Calculation_5270812182716952]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='[Calculation_5270812182716952 1 1]/Total([Calculation_5270812182716952 1 1])' scope-isolation='false'>
          <table-calc ordering-type='Rows' />
        </calculation>
      </column>
      <column caption='Ratio in extreme sellers' datatype='real' name='[Calculation_8450812182825530]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='[Calculation_5270812182716952 1]/Total([Calculation_5270812182716952 1])' scope-isolation='false'>
          <table-calc ordering-type='Rows' />
        </calculation>
      </column>
      <column datatype='integer' name='[Number of Records]' role='measure' type='quantitative' user:auto-column='numrec'>
        <calculation class='tableau' formula='1' />
      </column>
      <column caption='Category' datatype='string' name='[category]' role='dimension' type='nominal'>
      </column>
      <column caption='Country' datatype='string' name='[country]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal'>
      </column>
      <column caption='Facetbrand' datatype='string' name='[facetbrand]' role='dimension' type='nominal'>
      </column>
      <column caption='Json Productkey' datatype='string' name='[json_productkey]' role='dimension' type='nominal'>
      </column>
      <column caption='Price Currentdaymode' datatype='real' name='[price_currentdaymode]' role='measure' type='quantitative'>
      </column>
      <column caption='Retailername' datatype='string' name='[retailername]' role='dimension' type='nominal'>
      </column>
      <column caption='Sellers' datatype='string' name='[sellers]' role='dimension' type='nominal'>
      </column>
      <column caption='Subcategory' datatype='string' name='[subcategory]' role='dimension' type='nominal'>
      </column>
      <column caption='Taxonomiccolour' datatype='string' name='[taxonomiccolour]' role='dimension' type='nominal'>
      </column>
      <column-instance column='[Calculation_2730813141847173]' derivation='User' name='[usr:Calculation_2730813141847173:nk:1]' pivot='key' type='nominal'>
        <table-calc ordering-type='Rows' />
        <table-calc field='[greenplum.41871.617679803200].[Calculation_5270812182716952]' ordering-type='Rows' />
        <table-calc field='[greenplum.41871.617679803200].[Calculation_1730812182851096]' ordering-type='Rows' />
        <table-calc field='[greenplum.41871.617679803200].[Calculation_8450812182825530]' ordering-type='Rows' />
      </column-instance>
      <extract count='-1' enabled='true' units='records'>
        <connection class='dataengine' dbname='/Users/elliedobson/Documents/Work/Customers/TRG/Code/ExtractedData/extremesellers_lastweek (ds.extremesellers_lastweek) (demo).tde' schema='Extract' tablename='Extract' update-time='08/22/2014 04:29:12 PM'>
          <relation name='Extract' table='[Extract].[Extract]' type='table' />
          <calculations>
            <calculation column='[Number of Records]' formula='1' />
          </calculations>
          <refresh>
            <refresh-event add-from-file-path='' increment-value='%null%' refresh-type='create' rows-inserted='2339641' timestamp-start='2014-08-22 16:29:12.770' />
          </refresh>
          <metadata-records>
            <metadata-record class='column'>
              <remote-name>Number of Records</remote-name>
              <remote-type>16</remote-type>
              <local-name>[Number of Records]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Number of Records</remote-alias>
              <ordinal>0</ordinal>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>1</approx-count>
              <contains-null>false</contains-null>
              <statistics>
                <statistic aggregation='Min' datatype='integer'>1</statistic>
                <statistic aggregation='Max' datatype='integer'>1</statistic>
              </statistics>
              <attributes>
                <attribute datatype='string' name='DebugRemoteMetadata (ordered)'>&quot;asc&quot;</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>1</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;sint8&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>category</remote-name>
              <remote-type>129</remote-type>
              <local-name>[category]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>category</remote-alias>
              <ordinal>1</ordinal>
              <family>extremesellers_lastweek</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>30</approx-count>
              <scale>1</scale>
              <width>100</width>
              <contains-null>false</contains-null>
              <collation flag='0' name='LEN_RUS' />
              <statistics>
                <statistic aggregation='Min' datatype='string'>&quot;bags&quot;</statistic>
                <statistic aggregation='Max' datatype='string'>&quot;watches&quot;</statistic>
              </statistics>
              <attributes>
                <attribute datatype='string' name='DebugRemoteCollation'>&quot;en_US&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;heap&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>400</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (sort-position)'>3</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (sort-sense)'>&quot;asc&quot;</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>2</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;str&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>country</remote-name>
              <remote-type>129</remote-type>
              <local-name>[country]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>country</remote-alias>
              <ordinal>2</ordinal>
              <family>extremesellers_lastweek</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>3</approx-count>
              <scale>1</scale>
              <width>100</width>
              <contains-null>false</contains-null>
              <collation flag='0' name='LEN_RUS' />
              <statistics>
                <statistic aggregation='Min' datatype='string'>&quot;au&quot;</statistic>
                <statistic aggregation='Max' datatype='string'>&quot;us&quot;</statistic>
              </statistics>
              <attributes>
                <attribute datatype='string' name='DebugRemoteCollation'>&quot;en_US&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;heap&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (ordered)'>&quot;asc&quot;</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>400</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (sort-position)'>0</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (sort-sense)'>&quot;asc&quot;</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>1</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;str&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>facetbrand</remote-name>
              <remote-type>129</remote-type>
              <local-name>[facetbrand]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>facetbrand</remote-alias>
              <ordinal>3</ordinal>
              <family>extremesellers_lastweek</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>6225</approx-count>
              <scale>1</scale>
              <width>100</width>
              <contains-null>false</contains-null>
              <collation flag='0' name='LEN_RUS' />
              <statistics>
                <statistic aggregation='Min' datatype='string'>&quot;!it&quot;</statistic>
                <statistic aggregation='Max' datatype='string'>&quot;zumba&quot;</statistic>
              </statistics>
              <attributes>
                <attribute datatype='string' name='DebugRemoteCollation'>&quot;en_US&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;heap&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>400</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (sort-position)'>6</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (sort-sense)'>&quot;asc&quot;</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>4</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;str&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>json_productkey</remote-name>
              <remote-type>129</remote-type>
              <local-name>[json_productkey]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>json_productkey</remote-alias>
              <ordinal>4</ordinal>
              <family>extremesellers_lastweek</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>1096661</approx-count>
              <scale>1</scale>
              <width>255</width>
              <contains-null>false</contains-null>
              <collation flag='0' name='LEN_RUS' />
              <statistics>
                <statistic aggregation='Min' datatype='string'>&quot;0000007c-b342-383f-90bf-db1140dd8e58&quot;</statistic>
                <statistic aggregation='Max' datatype='string'>&quot;ffffea4f-e2f4-3b1a-b773-3fd062b51971&quot;</statistic>
              </statistics>
              <attributes>
                <attribute datatype='string' name='DebugRemoteCollation'>&quot;en_US&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;heap&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>1020</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (sort-position)'>7</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (sort-sense)'>&quot;asc&quot;</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>4</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;str&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>price_currentdaymode</remote-name>
              <remote-type>5</remote-type>
              <local-name>[price_currentdaymode]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>price_currentdaymode</remote-alias>
              <ordinal>5</ordinal>
              <family>extremesellers_lastweek</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>15242</approx-count>
              <contains-null>true</contains-null>
              <statistics>
                <statistic aggregation='Min' datatype='real'>0.01</statistic>
                <statistic aggregation='Max' datatype='real'>202650.0</statistic>
              </statistics>
              <attributes>
                <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;array&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (sort-position)'>8</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (sort-sense)'>&quot;asc&quot;</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>2</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;double&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>retailername</remote-name>
              <remote-type>129</remote-type>
              <local-name>[retailername]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>retailername</remote-alias>
              <ordinal>6</ordinal>
              <family>extremesellers_lastweek</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>89</approx-count>
              <scale>1</scale>
              <width>100</width>
              <contains-null>false</contains-null>
              <collation flag='0' name='LEN_RUS' />
              <statistics>
                <statistic aggregation='Min' datatype='string'>&quot;abercrombie &amp; fitch&quot;</statistic>
                <statistic aggregation='Max' datatype='string'>&quot;zara&quot;</statistic>
              </statistics>
              <attributes>
                <attribute datatype='string' name='DebugRemoteCollation'>&quot;en_US&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;heap&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>400</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (sort-position)'>4</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (sort-sense)'>&quot;asc&quot;</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>2</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;str&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>sellers</remote-name>
              <remote-type>129</remote-type>
              <local-name>[sellers]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>sellers</remote-alias>
              <ordinal>7</ordinal>
              <family>extremesellers_lastweek</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>3</approx-count>
              <scale>1</scale>
              <width>100</width>
              <contains-null>false</contains-null>
              <collation flag='0' name='LEN_RUS' />
              <statistics>
                <statistic aggregation='Min' datatype='string'>&quot;all&quot;</statistic>
                <statistic aggregation='Max' datatype='string'>&quot;worst&quot;</statistic>
              </statistics>
              <attributes>
                <attribute datatype='string' name='DebugRemoteCollation'>&quot;en_US&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;heap&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>400</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (sort-position)'>1</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (sort-sense)'>&quot;asc&quot;</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>1</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;str&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>subcategory</remote-name>
              <remote-type>129</remote-type>
              <local-name>[subcategory]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>subcategory</remote-alias>
              <ordinal>8</ordinal>
              <family>extremesellers_lastweek</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>321</approx-count>
              <scale>1</scale>
              <width>100</width>
              <contains-null>false</contains-null>
              <collation flag='0' name='LEN_RUS' />
              <statistics>
                <statistic aggregation='Min' datatype='string'>&quot;3/4 lengths&quot;</statistic>
                <statistic aggregation='Max' datatype='string'>&quot;wreath &amp; crown&quot;</statistic>
              </statistics>
              <attributes>
                <attribute datatype='string' name='DebugRemoteCollation'>&quot;en_US&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;heap&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>400</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (sort-position)'>5</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (sort-sense)'>&quot;asc&quot;</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>2</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;str&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>taxonomiccolour</remote-name>
              <remote-type>129</remote-type>
              <local-name>[taxonomiccolour]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>taxonomiccolour</remote-alias>
              <ordinal>9</ordinal>
              <family>extremesellers_lastweek</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>16</approx-count>
              <scale>1</scale>
              <width>100</width>
              <contains-null>false</contains-null>
              <collation flag='0' name='LEN_RUS' />
              <statistics>
                <statistic aggregation='Min' datatype='string'>&quot;black&quot;</statistic>
                <statistic aggregation='Max' datatype='string'>&quot;yellow&quot;</statistic>
              </statistics>
              <attributes>
                <attribute datatype='string' name='DebugRemoteCollation'>&quot;en_US&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;heap&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>400</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (sort-position)'>2</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (sort-sense)'>&quot;asc&quot;</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>1</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;str&quot;</attribute>
              </attributes>
            </metadata-record>
          </metadata-records>
        </connection>
      </extract>
      <layout dim-ordering='alphabetic' dim-percentage='0.5' measure-ordering='alphabetic' measure-percentage='0.4' show-structure='true' />
      <style>
        <style-rule element='mark'>
          <encoding attr='color' field='[usr:Calculation_2730813141847173:nk:1]' type='palette'>
            <map to='#1e1e1e'>
              <bucket>&quot;Stats too low&quot;</bucket>
            </map>
            <map to='#1f77b4'>
              <bucket>&quot;Under-represented&quot;</bucket>
            </map>
            <map to='#9467bd'>
              <bucket>&quot;Over-represented&quot;</bucket>
            </map>
          </encoding>
        </style-rule>
      </style>
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;Reino Unido&quot;' />
      </semantic-values>
      <date-options start-of-week='monday' />
      <datasource-dependencies datasource='Parameters'>
        <column alias='Poor sellers' caption='Analysis' datatype='string' name='[Parameter 2]' param-domain-type='list' role='measure' type='nominal' value='&quot;worst&quot;'>
          <calculation class='tableau' formula='&quot;worst&quot;' />
          <aliases>
            <alias key='&quot;best&quot;' value='Best sellers' />
            <alias key='&quot;worst&quot;' value='Poor sellers' />
          </aliases>
          <members>
            <member alias='Best sellers' value='&quot;best&quot;' />
            <member alias='Poor sellers' value='&quot;worst&quot;' />
          </members>
        </column>
        <column caption='Low Stats' datatype='real' name='[Parameter 3]' param-domain-type='range' role='measure' type='quantitative' value='5.0'>
          <calculation class='tableau' formula='5.0' />
          <desc>
            <formatted-text>
              <run>Threshold at which stats are too low to calculate ratio</run>
            </formatted-text>
          </desc>
          <range granularity='1.0' max='10.0' min='1.0' />
        </column>
      </datasource-dependencies>
    </datasource>
  </datasources>
  <worksheets>
    <worksheet name='CompareRetailers_cat'>
      <layout-options>
        <title>
          <formatted-text>
            <run>&lt;</run>
            <run>[Parameters].[Parameter 2]</run>
            <run>&gt;</run>
            <run> by subcategory and retailer</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='extremesellers_lastweek (ds.extremesellers_lastweek) (demo)' name='greenplum.41871.617679803200' />
            <datasource name='Parameters' />
          </datasources>
          <datasource-dependencies datasource='greenplum.41871.617679803200'>
            <column caption='NormalisedRatio' datatype='real' name='[Calculation_1730812182851096]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='if ([Calculation_5270812182716952 1]&gt;[Parameters].[Parameter 3]) then [Calculation_8450812182825530]/[Calculation_5270812182716952] else -0.01 end' scope-isolation='false'>
                <table-calc ordering-type='Rows' />
              </calculation>
            </column>
            <column caption='ColourField' datatype='string' name='[Calculation_2730813141847173]' role='measure' type='nominal'>
              <calculation class='tableau' formula='if [Calculation_1730812182851096]&gt;1 then &quot;Over-represented&quot; elseif [Calculation_1730812182851096]&lt;0 then &quot;Stats too low&quot; else &quot;Under-represented&quot; end' scope-isolation='false'>
                <table-calc ordering-type='Rows' />
              </calculation>
            </column>
            <column caption='Count in extreme sellers' datatype='integer' name='[Calculation_5270812182716952 1]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='sum(if [sellers] = [Parameters].[Parameter 2] then 1 else 0 end)' scope-isolation='false' />
            </column>
            <column caption='Category' datatype='string' name='[category]' role='dimension' type='nominal'>
            </column>
            <column caption='Country' datatype='string' name='[country]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal'>
            </column>
            <column caption='Facetbrand' datatype='string' name='[facetbrand]' role='dimension' type='nominal'>
            </column>
            <column-instance column='[category]' derivation='None' name='[none:category:nk]' pivot='key' type='nominal' />
            <column-instance column='[country]' derivation='None' name='[none:country:nk]' pivot='key' type='nominal' />
            <column-instance column='[facetbrand]' derivation='None' name='[none:facetbrand:nk]' pivot='key' type='nominal' />
            <column-instance column='[price_currentdaymode]' derivation='None' name='[none:price_currentdaymode:qk]' pivot='key' type='quantitative' />
            <column-instance column='[retailername]' derivation='None' name='[none:retailername:nk]' pivot='key' type='nominal' />
            <column-instance column='[taxonomiccolour]' derivation='None' name='[none:taxonomiccolour:nk]' pivot='key' type='nominal' />
            <column caption='Price Currentdaymode' datatype='real' name='[price_currentdaymode]' role='measure' type='quantitative'>
            </column>
            <column caption='Retailername' datatype='string' name='[retailername]' role='dimension' type='nominal'>
            </column>
            <column caption='Taxonomiccolour' datatype='string' name='[taxonomiccolour]' role='dimension' type='nominal'>
            </column>
            <column-instance column='[Calculation_1730812182851096]' derivation='User' name='[usr:Calculation_1730812182851096:qk:2]' pivot='key' type='quantitative'>
              <table-calc ordering-type='Rows' />
              <table-calc field='[greenplum.41871.617679803200].[Calculation_5270812182716952]' ordering-type='Rows' />
              <table-calc field='[greenplum.41871.617679803200].[Calculation_8450812182825530]' ordering-type='Rows' />
            </column-instance>
            <column-instance column='[Calculation_2730813141847173]' derivation='User' name='[usr:Calculation_2730813141847173:nk:1]' pivot='key' type='nominal'>
              <table-calc ordering-type='Rows' />
              <table-calc field='[greenplum.41871.617679803200].[Calculation_5270812182716952]' ordering-type='Rows' />
              <table-calc field='[greenplum.41871.617679803200].[Calculation_1730812182851096]' ordering-type='Rows' />
              <table-calc field='[greenplum.41871.617679803200].[Calculation_8450812182825530]' ordering-type='Rows' />
            </column-instance>
            <column-instance column='[Calculation_5270812182716952 1]' derivation='User' name='[usr:Calculation_5270812182716952 1:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[greenplum.41871.617679803200].[none:country:nk]' filter-group='10'>
            <groupfilter function='member' level='[none:country:nk]' member='&quot;uk&quot;' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[greenplum.41871.617679803200].[none:facetbrand:nk]'>
            <groupfilter function='level-members' level='[none:facetbrand:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='quantitative' column='[greenplum.41871.617679803200].[none:price_currentdaymode:qk]' filter-group='3' included-values='in-range-or-null'>
            <min>2.0</min>
            <max>202650.0</max>
          </filter>
          <filter class='categorical' column='[greenplum.41871.617679803200].[none:retailername:nk]' filter-group='8'>
            <groupfilter function='level-members' level='[none:retailername:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[greenplum.41871.617679803200].[none:taxonomiccolour:nk]' filter-group='4'>
            <groupfilter function='level-members' level='[none:taxonomiccolour:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='quantitative' column='[greenplum.41871.617679803200].[usr:Calculation_5270812182716952 1:qk]' included-values='in-range'>
            <min>1</min>
          </filter>
          <slices>
            <column>[greenplum.41871.617679803200].[none:country:nk]</column>
            <column>[greenplum.41871.617679803200].[none:taxonomiccolour:nk]</column>
            <column>[greenplum.41871.617679803200].[none:facetbrand:nk]</column>
            <column>[greenplum.41871.617679803200].[usr:Calculation_5270812182716952 1:qk]</column>
            <column>[greenplum.41871.617679803200].[none:retailername:nk]</column>
            <column>[greenplum.41871.617679803200].[none:price_currentdaymode:qk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='height' field='[greenplum.41871.617679803200].[none:retailername:nk]' value='25' />
            <format attr='width' field='[greenplum.41871.617679803200].[none:category:nk]' value='47' />
          </style-rule>
          <style-rule element='header'>
            <format attr='height' field='[greenplum.41871.617679803200].[none:category:nk]' value='112' />
          </style-rule>
          <style-rule element='label'>
            <format attr='text-orientation' field='[greenplum.41871.617679803200].[none:category:nk]' value='-90' />
          </style-rule>
          <style-rule element='mark'>
            <encoding attr='size' field='[greenplum.41871.617679803200].[usr:Calculation_1730812182851096:qk:2]' field-type='quantitative' max-size='1' min-size='0.005' type='quantsize' />
          </style-rule>
          <style-rule element='worksheet'>
            <format attr='display-field-labels' scope='cols' value='false' />
            <format attr='display-field-labels' scope='rows' value='false' />
          </style-rule>
          <style-rule element='refline'>
            <format attr='fill-above' id='refline0' value='#dbf0cc' />
            <format attr='fill-below' id='refline0' value='#f2e6e6' />
            <format attr='stroke-color' id='refline0' value='#000000' />
            <format attr='line-pattern' id='refline0' value='dashed' />
          </style-rule>
        </style>
        <panes>
          <pane id='2'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[greenplum.41871.617679803200].[usr:Calculation_2730813141847173:nk:1]' />
              <size column='[greenplum.41871.617679803200].[usr:Calculation_1730812182851096:qk:2]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='size' value='2' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='minheight' value='-1' />
                <format attr='maxheight' value='-1' />
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[greenplum.41871.617679803200].[none:retailername:nk]</rows>
        <cols>[greenplum.41871.617679803200].[none:category:nk]</cols>
      </table>
    </worksheet>
    <worksheet name='CompareRetailers_subcat'>
      <layout-options>
        <title>
          <formatted-text>
            <run>&lt;</run>
            <run>[Parameters].[Parameter 2]</run>
            <run>&gt;</run>
            <run> by subcategory and retailer</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='extremesellers_lastweek (ds.extremesellers_lastweek) (demo)' name='greenplum.41871.617679803200' />
            <datasource name='Parameters' />
          </datasources>
          <datasource-dependencies datasource='greenplum.41871.617679803200'>
            <column caption='NormalisedRatio' datatype='real' name='[Calculation_1730812182851096]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='if ([Calculation_5270812182716952 1]&gt;[Parameters].[Parameter 3]) then [Calculation_8450812182825530]/[Calculation_5270812182716952] else -0.01 end' scope-isolation='false'>
                <table-calc ordering-type='Rows' />
              </calculation>
            </column>
            <column caption='ColourField' datatype='string' name='[Calculation_2730813141847173]' role='measure' type='nominal'>
              <calculation class='tableau' formula='if [Calculation_1730812182851096]&gt;1 then &quot;Over-represented&quot; elseif [Calculation_1730812182851096]&lt;0 then &quot;Stats too low&quot; else &quot;Under-represented&quot; end' scope-isolation='false'>
                <table-calc ordering-type='Rows' />
              </calculation>
            </column>
            <column caption='Count in extreme sellers' datatype='integer' name='[Calculation_5270812182716952 1]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='sum(if [sellers] = [Parameters].[Parameter 2] then 1 else 0 end)' scope-isolation='false' />
            </column>
            <column caption='Category' datatype='string' name='[category]' role='dimension' type='nominal'>
            </column>
            <column caption='Country' datatype='string' name='[country]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal'>
            </column>
            <column caption='Facetbrand' datatype='string' name='[facetbrand]' role='dimension' type='nominal'>
            </column>
            <column-instance column='[category]' derivation='None' name='[none:category:nk]' pivot='key' type='nominal' />
            <column-instance column='[country]' derivation='None' name='[none:country:nk]' pivot='key' type='nominal' />
            <column-instance column='[facetbrand]' derivation='None' name='[none:facetbrand:nk]' pivot='key' type='nominal' />
            <column-instance column='[price_currentdaymode]' derivation='None' name='[none:price_currentdaymode:qk]' pivot='key' type='quantitative' />
            <column-instance column='[retailername]' derivation='None' name='[none:retailername:nk]' pivot='key' type='nominal' />
            <column-instance column='[subcategory]' derivation='None' name='[none:subcategory:nk]' pivot='key' type='nominal' />
            <column-instance column='[taxonomiccolour]' derivation='None' name='[none:taxonomiccolour:nk]' pivot='key' type='nominal' />
            <column caption='Price Currentdaymode' datatype='real' name='[price_currentdaymode]' role='measure' type='quantitative'>
            </column>
            <column caption='Retailername' datatype='string' name='[retailername]' role='dimension' type='nominal'>
            </column>
            <column caption='Subcategory' datatype='string' name='[subcategory]' role='dimension' type='nominal'>
            </column>
            <column caption='Taxonomiccolour' datatype='string' name='[taxonomiccolour]' role='dimension' type='nominal'>
            </column>
            <column-instance column='[Calculation_1730812182851096]' derivation='User' name='[usr:Calculation_1730812182851096:qk:2]' pivot='key' type='quantitative'>
              <table-calc ordering-type='Rows' />
              <table-calc field='[greenplum.41871.617679803200].[Calculation_5270812182716952]' ordering-type='Rows' />
              <table-calc field='[greenplum.41871.617679803200].[Calculation_8450812182825530]' ordering-type='Rows' />
            </column-instance>
            <column-instance column='[Calculation_2730813141847173]' derivation='User' name='[usr:Calculation_2730813141847173:nk:1]' pivot='key' type='nominal'>
              <table-calc ordering-type='Rows' />
              <table-calc field='[greenplum.41871.617679803200].[Calculation_5270812182716952]' ordering-type='Rows' />
              <table-calc field='[greenplum.41871.617679803200].[Calculation_1730812182851096]' ordering-type='Rows' />
              <table-calc field='[greenplum.41871.617679803200].[Calculation_8450812182825530]' ordering-type='Rows' />
            </column-instance>
            <column-instance column='[Calculation_5270812182716952 1]' derivation='User' name='[usr:Calculation_5270812182716952 1:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[greenplum.41871.617679803200].[none:category:nk]' filter-group='9'>
            <groupfilter function='member' level='[none:category:nk]' member='&quot;jeans&quot;' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[greenplum.41871.617679803200].[none:country:nk]' filter-group='10'>
            <groupfilter function='member' level='[none:country:nk]' member='&quot;uk&quot;' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[greenplum.41871.617679803200].[none:facetbrand:nk]' filter-group='6'>
            <groupfilter function='level-members' level='[none:facetbrand:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='quantitative' column='[greenplum.41871.617679803200].[none:price_currentdaymode:qk]' filter-group='3' included-values='in-range-or-null'>
            <min>2.0</min>
            <max>202650.0</max>
          </filter>
          <filter class='categorical' column='[greenplum.41871.617679803200].[none:retailername:nk]' filter-group='8'>
            <groupfilter function='level-members' level='[none:retailername:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[greenplum.41871.617679803200].[none:taxonomiccolour:nk]' filter-group='4'>
            <groupfilter function='level-members' level='[none:taxonomiccolour:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='quantitative' column='[greenplum.41871.617679803200].[usr:Calculation_5270812182716952 1:qk]' included-values='in-range'>
            <min>1</min>
          </filter>
          <slices>
            <column>[greenplum.41871.617679803200].[none:country:nk]</column>
            <column>[greenplum.41871.617679803200].[none:taxonomiccolour:nk]</column>
            <column>[greenplum.41871.617679803200].[none:facetbrand:nk]</column>
            <column>[greenplum.41871.617679803200].[none:category:nk]</column>
            <column>[greenplum.41871.617679803200].[usr:Calculation_5270812182716952 1:qk]</column>
            <column>[greenplum.41871.617679803200].[none:retailername:nk]</column>
            <column>[greenplum.41871.617679803200].[none:price_currentdaymode:qk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='height' field='[greenplum.41871.617679803200].[none:retailername:nk]' value='39' />
            <format attr='width' field='[greenplum.41871.617679803200].[none:subcategory:nk]' value='161' />
          </style-rule>
          <style-rule element='header'>
            <format attr='height' field='[greenplum.41871.617679803200].[none:subcategory:nk]' value='96' />
          </style-rule>
          <style-rule element='label'>
            <format attr='text-orientation' field='[greenplum.41871.617679803200].[none:subcategory:nk]' value='-90' />
          </style-rule>
          <style-rule element='mark'>
            <encoding attr='size' field='[greenplum.41871.617679803200].[usr:Calculation_1730812182851096:qk:2]' field-type='quantitative' max-size='1' min-size='0.005' type='quantsize' />
          </style-rule>
          <style-rule element='worksheet'>
            <format attr='display-field-labels' scope='cols' value='false' />
            <format attr='display-field-labels' scope='rows' value='false' />
          </style-rule>
          <style-rule element='refline'>
            <format attr='fill-above' id='refline0' value='#dbf0cc' />
            <format attr='fill-below' id='refline0' value='#f2e6e6' />
            <format attr='stroke-color' id='refline0' value='#000000' />
            <format attr='line-pattern' id='refline0' value='dashed' />
          </style-rule>
        </style>
        <panes>
          <pane id='2'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[greenplum.41871.617679803200].[usr:Calculation_2730813141847173:nk:1]' />
              <size column='[greenplum.41871.617679803200].[usr:Calculation_1730812182851096:qk:2]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='size' value='2' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='minheight' value='-1' />
                <format attr='maxheight' value='-1' />
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[greenplum.41871.617679803200].[none:retailername:nk]</rows>
        <cols>[greenplum.41871.617679803200].[none:subcategory:nk]</cols>
      </table>
    </worksheet>
    <worksheet name='Count vs Brand'>
      <layout-options>
        <title>
          <formatted-text>
            <run>Product counts in </run>
            <run>&lt;</run>
            <run>[Parameters].[Parameter 2]</run>
            <run>&gt;</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='extremesellers_lastweek (ds.extremesellers_lastweek) (demo)' name='greenplum.41871.617679803200' />
            <datasource name='Parameters' />
          </datasources>
          <datasource-dependencies datasource='greenplum.41871.617679803200'>
            <column caption='ColourField' datatype='string' name='[Calculation_2730813141847173]' role='measure' type='nominal'>
              <calculation class='tableau' formula='if [Calculation_1730812182851096]&gt;1 then &quot;Over-represented&quot; elseif [Calculation_1730812182851096]&lt;0 then &quot;Stats too low&quot; else &quot;Under-represented&quot; end' scope-isolation='false'>
                <table-calc ordering-type='Rows' />
              </calculation>
            </column>
            <column caption='Count in extreme sellers' datatype='integer' name='[Calculation_5270812182716952 1]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='sum(if [sellers] = [Parameters].[Parameter 2] then 1 else 0 end)' scope-isolation='false' />
            </column>
            <column caption='Category' datatype='string' name='[category]' role='dimension' type='nominal'>
            </column>
            <column caption='Country' datatype='string' name='[country]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal'>
            </column>
            <column caption='Facetbrand' datatype='string' name='[facetbrand]' role='dimension' type='nominal'>
            </column>
            <column-instance column='[category]' derivation='None' name='[none:category:nk]' pivot='key' type='nominal' />
            <column-instance column='[country]' derivation='None' name='[none:country:nk]' pivot='key' type='nominal' />
            <column-instance column='[facetbrand]' derivation='None' name='[none:facetbrand:nk]' pivot='key' type='nominal' />
            <column-instance column='[price_currentdaymode]' derivation='None' name='[none:price_currentdaymode:qk]' pivot='key' type='quantitative' />
            <column-instance column='[retailername]' derivation='None' name='[none:retailername:nk]' pivot='key' type='nominal' />
            <column-instance column='[subcategory]' derivation='None' name='[none:subcategory:nk]' pivot='key' type='nominal' />
            <column-instance column='[taxonomiccolour]' derivation='None' name='[none:taxonomiccolour:nk]' pivot='key' type='nominal' />
            <column caption='Price Currentdaymode' datatype='real' name='[price_currentdaymode]' role='measure' type='quantitative'>
            </column>
            <column caption='Retailername' datatype='string' name='[retailername]' role='dimension' type='nominal'>
            </column>
            <column caption='Subcategory' datatype='string' name='[subcategory]' role='dimension' type='nominal'>
            </column>
            <column caption='Taxonomiccolour' datatype='string' name='[taxonomiccolour]' role='dimension' type='nominal'>
            </column>
            <column-instance column='[Calculation_2730813141847173]' derivation='User' name='[usr:Calculation_2730813141847173:nk:1]' pivot='key' type='nominal'>
              <table-calc ordering-type='Rows' />
              <table-calc field='[greenplum.41871.617679803200].[Calculation_5270812182716952]' ordering-type='Rows' />
              <table-calc field='[greenplum.41871.617679803200].[Calculation_1730812182851096]' ordering-type='Rows' />
              <table-calc field='[greenplum.41871.617679803200].[Calculation_8450812182825530]' ordering-type='Rows' />
            </column-instance>
            <column-instance column='[Calculation_5270812182716952 1]' derivation='User' name='[usr:Calculation_5270812182716952 1:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[greenplum.41871.617679803200].[none:category:nk]' filter-group='9'>
            <groupfilter function='member' level='[none:category:nk]' member='&quot;jeans&quot;' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[greenplum.41871.617679803200].[none:country:nk]' filter-group='10'>
            <groupfilter function='member' level='[none:country:nk]' member='&quot;uk&quot;' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[greenplum.41871.617679803200].[none:facetbrand:nk]'>
            <groupfilter function='except' user:ui-domain='relevant' user:ui-enumeration='exclusive' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[none:facetbrand:nk]' />
              <groupfilter function='member' level='[none:facetbrand:nk]' member='&quot;Not found&quot;' />
            </groupfilter>
          </filter>
          <sort class='alphabetic' column='[greenplum.41871.617679803200].[none:facetbrand:nk]' direction='ASC' />
          <filter class='quantitative' column='[greenplum.41871.617679803200].[none:price_currentdaymode:qk]' filter-group='3' included-values='in-range-or-null'>
            <min>2.0</min>
            <max>202650.0</max>
          </filter>
          <filter class='categorical' column='[greenplum.41871.617679803200].[none:retailername:nk]' filter-group='8'>
            <groupfilter function='level-members' level='[none:retailername:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[greenplum.41871.617679803200].[none:subcategory:nk]' filter-group='7'>
            <groupfilter function='level-members' level='[none:subcategory:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[greenplum.41871.617679803200].[none:taxonomiccolour:nk]' filter-group='4'>
            <groupfilter function='level-members' level='[none:taxonomiccolour:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='quantitative' column='[greenplum.41871.617679803200].[usr:Calculation_5270812182716952 1:qk]' included-values='in-range'>
            <min>1</min>
          </filter>
          <slices>
            <column>[greenplum.41871.617679803200].[none:category:nk]</column>
            <column>[greenplum.41871.617679803200].[none:subcategory:nk]</column>
            <column>[greenplum.41871.617679803200].[none:retailername:nk]</column>
            <column>[greenplum.41871.617679803200].[none:taxonomiccolour:nk]</column>
            <column>[greenplum.41871.617679803200].[none:price_currentdaymode:qk]</column>
            <column>[greenplum.41871.617679803200].[usr:Calculation_5270812182716952 1:qk]</column>
            <column>[greenplum.41871.617679803200].[none:facetbrand:nk]</column>
            <column>[greenplum.41871.617679803200].[none:country:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <format attr='title' class='0' field='[greenplum.41871.617679803200].[usr:Calculation_5270812182716952 1:qk]' scope='rows' value='Product counts' />
            <format attr='subtitle' class='0' field='[greenplum.41871.617679803200].[usr:Calculation_5270812182716952 1:qk]' scope='rows' value='' />
            <format attr='auto-subtitle' class='0' field='[greenplum.41871.617679803200].[usr:Calculation_5270812182716952 1:qk]' scope='rows' value='true' />
          </style-rule>
          <style-rule element='label'>
            <format attr='text-orientation' field='[greenplum.41871.617679803200].[none:facetbrand:nk]' value='-90' />
          </style-rule>
          <style-rule element='worksheet'>
            <format attr='display-field-labels' scope='cols' value='false' />
          </style-rule>
        </style>
        <panes>
          <pane>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[greenplum.41871.617679803200].[usr:Calculation_2730813141847173:nk:1]' />
            </encodings>
          </pane>
        </panes>
        <rows>[greenplum.41871.617679803200].[usr:Calculation_5270812182716952 1:qk]</rows>
        <cols>[greenplum.41871.617679803200].[none:facetbrand:nk]</cols>
      </table>
    </worksheet>
    <worksheet name='Count vs SubCategory'>
      <layout-options>
        <title>
          <formatted-text>
            <run>Product counts in </run>
            <run>&lt;</run>
            <run>[Parameters].[Parameter 2]</run>
            <run>&gt;</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='extremesellers_lastweek (ds.extremesellers_lastweek) (demo)' name='greenplum.41871.617679803200' />
            <datasource name='Parameters' />
          </datasources>
          <datasource-dependencies datasource='greenplum.41871.617679803200'>
            <column caption='ColourField' datatype='string' name='[Calculation_2730813141847173]' role='measure' type='nominal'>
              <calculation class='tableau' formula='if [Calculation_1730812182851096]&gt;1 then &quot;Over-represented&quot; elseif [Calculation_1730812182851096]&lt;0 then &quot;Stats too low&quot; else &quot;Under-represented&quot; end' scope-isolation='false'>
                <table-calc ordering-type='Rows' />
              </calculation>
            </column>
            <column caption='Count in extreme sellers' datatype='integer' name='[Calculation_5270812182716952 1]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='sum(if [sellers] = [Parameters].[Parameter 2] then 1 else 0 end)' scope-isolation='false' />
            </column>
            <column caption='Category' datatype='string' name='[category]' role='dimension' type='nominal'>
            </column>
            <column caption='Country' datatype='string' name='[country]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal'>
            </column>
            <column caption='Facetbrand' datatype='string' name='[facetbrand]' role='dimension' type='nominal'>
            </column>
            <column-instance column='[category]' derivation='None' name='[none:category:nk]' pivot='key' type='nominal' />
            <column-instance column='[country]' derivation='None' name='[none:country:nk]' pivot='key' type='nominal' />
            <column-instance column='[facetbrand]' derivation='None' name='[none:facetbrand:nk]' pivot='key' type='nominal' />
            <column-instance column='[price_currentdaymode]' derivation='None' name='[none:price_currentdaymode:qk]' pivot='key' type='quantitative' />
            <column-instance column='[retailername]' derivation='None' name='[none:retailername:nk]' pivot='key' type='nominal' />
            <column-instance column='[subcategory]' derivation='None' name='[none:subcategory:nk]' pivot='key' type='nominal' />
            <column-instance column='[taxonomiccolour]' derivation='None' name='[none:taxonomiccolour:nk]' pivot='key' type='nominal' />
            <column caption='Price Currentdaymode' datatype='real' name='[price_currentdaymode]' role='measure' type='quantitative'>
            </column>
            <column caption='Retailername' datatype='string' name='[retailername]' role='dimension' type='nominal'>
            </column>
            <column caption='Subcategory' datatype='string' name='[subcategory]' role='dimension' type='nominal'>
            </column>
            <column caption='Taxonomiccolour' datatype='string' name='[taxonomiccolour]' role='dimension' type='nominal'>
            </column>
            <column-instance column='[Calculation_2730813141847173]' derivation='User' name='[usr:Calculation_2730813141847173:nk:1]' pivot='key' type='nominal'>
              <table-calc ordering-type='Rows' />
              <table-calc field='[greenplum.41871.617679803200].[Calculation_5270812182716952]' ordering-type='Rows' />
              <table-calc field='[greenplum.41871.617679803200].[Calculation_1730812182851096]' ordering-type='Rows' />
              <table-calc field='[greenplum.41871.617679803200].[Calculation_8450812182825530]' ordering-type='Rows' />
            </column-instance>
            <column-instance column='[Calculation_5270812182716952 1]' derivation='User' name='[usr:Calculation_5270812182716952 1:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[greenplum.41871.617679803200].[none:category:nk]' filter-group='9'>
            <groupfilter function='member' level='[none:category:nk]' member='&quot;jeans&quot;' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[greenplum.41871.617679803200].[none:country:nk]' filter-group='10'>
            <groupfilter function='member' level='[none:country:nk]' member='&quot;uk&quot;' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[greenplum.41871.617679803200].[none:facetbrand:nk]' filter-group='6'>
            <groupfilter function='level-members' level='[none:facetbrand:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='quantitative' column='[greenplum.41871.617679803200].[none:price_currentdaymode:qk]' filter-group='3' included-values='in-range-or-null'>
            <min>2.0</min>
            <max>202650.0</max>
          </filter>
          <filter class='categorical' column='[greenplum.41871.617679803200].[none:retailername:nk]' filter-group='8'>
            <groupfilter function='level-members' level='[none:retailername:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[greenplum.41871.617679803200].[none:subcategory:nk]'>
            <groupfilter function='except' user:ui-domain='relevant' user:ui-enumeration='exclusive' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[none:subcategory:nk]' />
              <groupfilter function='member' level='[none:subcategory:nk]' member='&quot;unclassified&quot;' />
            </groupfilter>
          </filter>
          <sort class='alphabetic' column='[greenplum.41871.617679803200].[none:subcategory:nk]' direction='ASC' />
          <filter class='categorical' column='[greenplum.41871.617679803200].[none:taxonomiccolour:nk]' filter-group='4'>
            <groupfilter function='level-members' level='[none:taxonomiccolour:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <sort class='manual' column='[greenplum.41871.617679803200].[usr:Calculation_2730813141847173:nk:1]' direction='ASC'>
            <dictionary>
              <bucket>&quot;Over-represented&quot;</bucket>
              <bucket>&quot;Under-represented&quot;</bucket>
              <bucket>&quot;Stats too low&quot;</bucket>
              <bucket>%all%</bucket>
            </dictionary>
          </sort>
          <filter class='quantitative' column='[greenplum.41871.617679803200].[usr:Calculation_5270812182716952 1:qk]' included-values='in-range'>
            <min>1</min>
          </filter>
          <slices>
            <column>[greenplum.41871.617679803200].[none:country:nk]</column>
            <column>[greenplum.41871.617679803200].[none:category:nk]</column>
            <column>[greenplum.41871.617679803200].[none:facetbrand:nk]</column>
            <column>[greenplum.41871.617679803200].[none:retailername:nk]</column>
            <column>[greenplum.41871.617679803200].[none:taxonomiccolour:nk]</column>
            <column>[greenplum.41871.617679803200].[none:price_currentdaymode:qk]</column>
            <column>[greenplum.41871.617679803200].[usr:Calculation_5270812182716952 1:qk]</column>
            <column>[greenplum.41871.617679803200].[none:subcategory:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <format attr='title' class='0' field='[greenplum.41871.617679803200].[usr:Calculation_5270812182716952 1:qk]' scope='rows' value='Product counts' />
            <format attr='subtitle' class='0' field='[greenplum.41871.617679803200].[usr:Calculation_5270812182716952 1:qk]' scope='rows' value='' />
            <format attr='auto-subtitle' class='0' field='[greenplum.41871.617679803200].[usr:Calculation_5270812182716952 1:qk]' scope='rows' value='true' />
          </style-rule>
          <style-rule element='worksheet'>
            <format attr='display-field-labels' scope='cols' value='false' />
          </style-rule>
          <style-rule element='legend-title-text'>
            <format attr='color' field='[greenplum.41871.617679803200].[usr:Calculation_2730813141847173:nk:1]' value='Colour legend&#10;'>
              <formatted-text>
                <run>Colour legend&#10;</run>
              </formatted-text>
            </format>
          </style-rule>
          <style-rule element='quick-filter'>
            <format attr='title' field='[greenplum.41871.617679803200].[none:price_currentdaymode:qk]' value='Price'>
              <formatted-text>
                <run>Price</run>
              </formatted-text>
            </format>
            <format attr='title' field='[greenplum.41871.617679803200].[none:retailername:nk]' value='Retailer&#10;'>
              <formatted-text>
                <run>Retailer&#10;</run>
              </formatted-text>
            </format>
            <format attr='title' field='[greenplum.41871.617679803200].[none:facetbrand:nk]' value='Brand&#10;'>
              <formatted-text>
                <run>Brand&#10;</run>
              </formatted-text>
            </format>
            <format attr='title' field='[greenplum.41871.617679803200].[none:taxonomiccolour:nk]' value='Colour'>
              <formatted-text>
                <run>Colour</run>
              </formatted-text>
            </format>
          </style-rule>
        </style>
        <panes>
          <pane>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[greenplum.41871.617679803200].[usr:Calculation_2730813141847173:nk:1]' />
            </encodings>
          </pane>
        </panes>
        <rows>[greenplum.41871.617679803200].[usr:Calculation_5270812182716952 1:qk]</rows>
        <cols>[greenplum.41871.617679803200].[none:subcategory:nk]</cols>
      </table>
    </worksheet>
    <worksheet name='Ratio vs Brand'>
      <layout-options>
        <title>
          <formatted-text>
            <run>&lt;</run>
            <run>[Parameters].[Parameter 2]</run>
            <run>&gt;</run>
            <run> by brand</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='extremesellers_lastweek (ds.extremesellers_lastweek) (demo)' name='greenplum.41871.617679803200' />
            <datasource name='Parameters' />
          </datasources>
          <datasource-dependencies datasource='greenplum.41871.617679803200'>
            <column caption='NormalisedRatio' datatype='real' name='[Calculation_1730812182851096]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='if ([Calculation_5270812182716952 1]&gt;[Parameters].[Parameter 3]) then [Calculation_8450812182825530]/[Calculation_5270812182716952] else -0.01 end' scope-isolation='false'>
                <table-calc ordering-type='Rows' />
              </calculation>
            </column>
            <column caption='ColourField' datatype='string' name='[Calculation_2730813141847173]' role='measure' type='nominal'>
              <calculation class='tableau' formula='if [Calculation_1730812182851096]&gt;1 then &quot;Over-represented&quot; elseif [Calculation_1730812182851096]&lt;0 then &quot;Stats too low&quot; else &quot;Under-represented&quot; end' scope-isolation='false'>
                <table-calc ordering-type='Rows' />
              </calculation>
            </column>
            <column caption='Count in extreme sellers' datatype='integer' name='[Calculation_5270812182716952 1]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='sum(if [sellers] = [Parameters].[Parameter 2] then 1 else 0 end)' scope-isolation='false' />
            </column>
            <column caption='Category' datatype='string' name='[category]' role='dimension' type='nominal'>
            </column>
            <column caption='Country' datatype='string' name='[country]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal'>
            </column>
            <column caption='Facetbrand' datatype='string' name='[facetbrand]' role='dimension' type='nominal'>
            </column>
            <column-instance column='[category]' derivation='None' name='[none:category:nk]' pivot='key' type='nominal' />
            <column-instance column='[country]' derivation='None' name='[none:country:nk]' pivot='key' type='nominal' />
            <column-instance column='[facetbrand]' derivation='None' name='[none:facetbrand:nk]' pivot='key' type='nominal' />
            <column-instance column='[retailername]' derivation='None' name='[none:retailername:nk]' pivot='key' type='nominal' />
            <column-instance column='[subcategory]' derivation='None' name='[none:subcategory:nk]' pivot='key' type='nominal' />
            <column-instance column='[taxonomiccolour]' derivation='None' name='[none:taxonomiccolour:nk]' pivot='key' type='nominal' />
            <column caption='Retailername' datatype='string' name='[retailername]' role='dimension' type='nominal'>
            </column>
            <column caption='Subcategory' datatype='string' name='[subcategory]' role='dimension' type='nominal'>
            </column>
            <column caption='Taxonomiccolour' datatype='string' name='[taxonomiccolour]' role='dimension' type='nominal'>
            </column>
            <column-instance column='[Calculation_1730812182851096]' derivation='User' name='[usr:Calculation_1730812182851096:qk:2]' pivot='key' type='quantitative'>
              <table-calc ordering-type='Rows' />
              <table-calc field='[greenplum.41871.617679803200].[Calculation_5270812182716952]' ordering-type='Rows' />
              <table-calc field='[greenplum.41871.617679803200].[Calculation_8450812182825530]' ordering-type='Rows' />
            </column-instance>
            <column-instance column='[Calculation_2730813141847173]' derivation='User' name='[usr:Calculation_2730813141847173:nk:1]' pivot='key' type='nominal'>
              <table-calc ordering-type='Rows' />
              <table-calc field='[greenplum.41871.617679803200].[Calculation_5270812182716952]' ordering-type='Rows' />
              <table-calc field='[greenplum.41871.617679803200].[Calculation_1730812182851096]' ordering-type='Rows' />
              <table-calc field='[greenplum.41871.617679803200].[Calculation_8450812182825530]' ordering-type='Rows' />
            </column-instance>
            <column-instance column='[Calculation_5270812182716952 1]' derivation='User' name='[usr:Calculation_5270812182716952 1:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[greenplum.41871.617679803200].[none:category:nk]' filter-group='9'>
            <groupfilter function='member' level='[none:category:nk]' member='&quot;jeans&quot;' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[greenplum.41871.617679803200].[none:country:nk]' filter-group='10'>
            <groupfilter function='member' level='[none:country:nk]' member='&quot;uk&quot;' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[greenplum.41871.617679803200].[none:facetbrand:nk]'>
            <groupfilter function='except' user:ui-domain='relevant' user:ui-enumeration='exclusive' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[none:facetbrand:nk]' />
              <groupfilter function='member' level='[none:facetbrand:nk]' member='&quot;Not found&quot;' />
            </groupfilter>
          </filter>
          <sort class='alphabetic' column='[greenplum.41871.617679803200].[none:facetbrand:nk]' direction='ASC' />
          <filter class='categorical' column='[greenplum.41871.617679803200].[none:retailername:nk]' filter-group='8'>
            <groupfilter function='level-members' level='[none:retailername:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[greenplum.41871.617679803200].[none:subcategory:nk]' filter-group='7'>
            <groupfilter function='level-members' level='[none:subcategory:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[greenplum.41871.617679803200].[none:taxonomiccolour:nk]' filter-group='4'>
            <groupfilter function='level-members' level='[none:taxonomiccolour:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='quantitative' column='[greenplum.41871.617679803200].[usr:Calculation_5270812182716952 1:qk]' included-values='in-range'>
            <min>1</min>
          </filter>
          <slices>
            <column>[greenplum.41871.617679803200].[none:country:nk]</column>
            <column>[greenplum.41871.617679803200].[none:category:nk]</column>
            <column>[greenplum.41871.617679803200].[none:subcategory:nk]</column>
            <column>[greenplum.41871.617679803200].[none:retailername:nk]</column>
            <column>[greenplum.41871.617679803200].[none:taxonomiccolour:nk]</column>
            <column>[greenplum.41871.617679803200].[none:facetbrand:nk]</column>
            <column>[greenplum.41871.617679803200].[usr:Calculation_5270812182716952 1:qk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <format attr='title' class='0' field='[greenplum.41871.617679803200].[usr:Calculation_1730812182851096:qk:2]' scope='rows' value='Observed/Expected' />
            <format attr='subtitle' class='0' field='[greenplum.41871.617679803200].[usr:Calculation_1730812182851096:qk:2]' scope='rows' value='' />
            <format attr='auto-subtitle' class='0' field='[greenplum.41871.617679803200].[usr:Calculation_1730812182851096:qk:2]' scope='rows' value='true' />
          </style-rule>
          <style-rule element='label'>
            <format attr='text-orientation' field='[greenplum.41871.617679803200].[none:facetbrand:nk]' value='-90' />
          </style-rule>
          <style-rule element='mark'>
            <encoding attr='color' center='1.0' field='[greenplum.41871.617679803200].[usr:Calculation_1730812182851096:qk:2]' palette='tableau-red-green' symmetric='false' type='interpolated' />
          </style-rule>
          <style-rule element='worksheet'>
            <format attr='display-field-labels' scope='cols' value='false' />
          </style-rule>
          <style-rule element='refline'>
            <format attr='fill-above' id='refline0' value='#00000000' />
            <format attr='fill-below' id='refline0' value='#00000000' />
            <format attr='stroke-color' id='refline0' value='#000000' />
            <format attr='line-pattern' id='refline0' value='dashed' />
          </style-rule>
        </style>
        <panes>
          <pane id='3'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[greenplum.41871.617679803200].[usr:Calculation_2730813141847173:nk:1]' />
            </encodings>
          </pane>
        </panes>
        <rows>[greenplum.41871.617679803200].[usr:Calculation_1730812182851096:qk:2]</rows>
        <cols>[greenplum.41871.617679803200].[none:facetbrand:nk]</cols>
      </table>
    </worksheet>
    <worksheet name='Ratio vs SubCategory'>
      <layout-options>
        <title>
          <formatted-text>
            <run>&lt;</run>
            <run>[Parameters].[Parameter 2]</run>
            <run>&gt;</run>
            <run> by subcategory</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='extremesellers_lastweek (ds.extremesellers_lastweek) (demo)' name='greenplum.41871.617679803200' />
            <datasource name='Parameters' />
          </datasources>
          <datasource-dependencies datasource='Parameters'>
            <column caption='1' datatype='real' name='[Parameter 1]' param-domain-type='any' role='measure' type='quantitative' value='1.0'>
              <calculation class='tableau' formula='1.0' />
            </column>
          </datasource-dependencies>
          <datasource-dependencies datasource='greenplum.41871.617679803200'>
            <column caption='NormalisedRatio' datatype='real' name='[Calculation_1730812182851096]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='if ([Calculation_5270812182716952 1]&gt;[Parameters].[Parameter 3]) then [Calculation_8450812182825530]/[Calculation_5270812182716952] else -0.01 end' scope-isolation='false'>
                <table-calc ordering-type='Rows' />
              </calculation>
            </column>
            <column caption='ColourField' datatype='string' name='[Calculation_2730813141847173]' role='measure' type='nominal'>
              <calculation class='tableau' formula='if [Calculation_1730812182851096]&gt;1 then &quot;Over-represented&quot; elseif [Calculation_1730812182851096]&lt;0 then &quot;Stats too low&quot; else &quot;Under-represented&quot; end' scope-isolation='false'>
                <table-calc ordering-type='Rows' />
              </calculation>
            </column>
            <column caption='Count in extreme sellers' datatype='integer' name='[Calculation_5270812182716952 1]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='sum(if [sellers] = [Parameters].[Parameter 2] then 1 else 0 end)' scope-isolation='false' />
            </column>
            <column caption='Category' datatype='string' name='[category]' role='dimension' type='nominal'>
            </column>
            <column caption='Country' datatype='string' name='[country]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal'>
            </column>
            <column caption='Facetbrand' datatype='string' name='[facetbrand]' role='dimension' type='nominal'>
            </column>
            <column-instance column='[category]' derivation='None' name='[none:category:nk]' pivot='key' type='nominal' />
            <column-instance column='[country]' derivation='None' name='[none:country:nk]' pivot='key' type='nominal' />
            <column-instance column='[facetbrand]' derivation='None' name='[none:facetbrand:nk]' pivot='key' type='nominal' />
            <column-instance column='[price_currentdaymode]' derivation='None' name='[none:price_currentdaymode:qk]' pivot='key' type='quantitative' />
            <column-instance column='[retailername]' derivation='None' name='[none:retailername:nk]' pivot='key' type='nominal' />
            <column-instance column='[subcategory]' derivation='None' name='[none:subcategory:nk]' pivot='key' type='nominal' />
            <column-instance column='[taxonomiccolour]' derivation='None' name='[none:taxonomiccolour:nk]' pivot='key' type='nominal' />
            <column caption='Price Currentdaymode' datatype='real' name='[price_currentdaymode]' role='measure' type='quantitative'>
            </column>
            <column caption='Retailername' datatype='string' name='[retailername]' role='dimension' type='nominal'>
            </column>
            <column caption='Subcategory' datatype='string' name='[subcategory]' role='dimension' type='nominal'>
            </column>
            <column caption='Taxonomiccolour' datatype='string' name='[taxonomiccolour]' role='dimension' type='nominal'>
            </column>
            <column-instance column='[Calculation_1730812182851096]' derivation='User' name='[usr:Calculation_1730812182851096:qk:2]' pivot='key' type='quantitative'>
              <table-calc ordering-type='Rows' />
              <table-calc field='[greenplum.41871.617679803200].[Calculation_5270812182716952]' ordering-type='Rows' />
              <table-calc field='[greenplum.41871.617679803200].[Calculation_8450812182825530]' ordering-type='Rows' />
            </column-instance>
            <column-instance column='[Calculation_2730813141847173]' derivation='User' name='[usr:Calculation_2730813141847173:nk:1]' pivot='key' type='nominal'>
              <table-calc ordering-type='Rows' />
              <table-calc field='[greenplum.41871.617679803200].[Calculation_5270812182716952]' ordering-type='Rows' />
              <table-calc field='[greenplum.41871.617679803200].[Calculation_1730812182851096]' ordering-type='Rows' />
              <table-calc field='[greenplum.41871.617679803200].[Calculation_8450812182825530]' ordering-type='Rows' />
            </column-instance>
            <column-instance column='[Calculation_5270812182716952 1]' derivation='User' name='[usr:Calculation_5270812182716952 1:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[greenplum.41871.617679803200].[none:category:nk]' filter-group='9'>
            <groupfilter function='member' level='[none:category:nk]' member='&quot;jeans&quot;' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[greenplum.41871.617679803200].[none:country:nk]' filter-group='10'>
            <groupfilter function='member' level='[none:country:nk]' member='&quot;uk&quot;' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[greenplum.41871.617679803200].[none:facetbrand:nk]' filter-group='6'>
            <groupfilter function='level-members' level='[none:facetbrand:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='quantitative' column='[greenplum.41871.617679803200].[none:price_currentdaymode:qk]' filter-group='3' included-values='in-range-or-null'>
            <min>2.0</min>
            <max>202650.0</max>
          </filter>
          <filter class='categorical' column='[greenplum.41871.617679803200].[none:retailername:nk]' filter-group='8'>
            <groupfilter function='level-members' level='[none:retailername:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[greenplum.41871.617679803200].[none:subcategory:nk]'>
            <groupfilter function='except' user:ui-domain='relevant' user:ui-enumeration='exclusive' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[none:subcategory:nk]' />
              <groupfilter function='member' level='[none:subcategory:nk]' member='&quot;unclassified&quot;' />
            </groupfilter>
          </filter>
          <sort class='alphabetic' column='[greenplum.41871.617679803200].[none:subcategory:nk]' direction='ASC' />
          <filter class='categorical' column='[greenplum.41871.617679803200].[none:taxonomiccolour:nk]' filter-group='4'>
            <groupfilter function='level-members' level='[none:taxonomiccolour:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='quantitative' column='[greenplum.41871.617679803200].[usr:Calculation_5270812182716952 1:qk]' included-values='in-range'>
            <min>1</min>
          </filter>
          <slices>
            <column>[greenplum.41871.617679803200].[none:country:nk]</column>
            <column>[greenplum.41871.617679803200].[none:category:nk]</column>
            <column>[greenplum.41871.617679803200].[none:retailername:nk]</column>
            <column>[greenplum.41871.617679803200].[none:taxonomiccolour:nk]</column>
            <column>[greenplum.41871.617679803200].[none:facetbrand:nk]</column>
            <column>[greenplum.41871.617679803200].[none:price_currentdaymode:qk]</column>
            <column>[greenplum.41871.617679803200].[usr:Calculation_5270812182716952 1:qk]</column>
            <column>[greenplum.41871.617679803200].[none:subcategory:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <format attr='title' class='0' field='[greenplum.41871.617679803200].[usr:Calculation_1730812182851096:qk:2]' scope='rows' value='Observed/Expected' />
            <format attr='subtitle' class='0' field='[greenplum.41871.617679803200].[usr:Calculation_1730812182851096:qk:2]' scope='rows' value='' />
            <format attr='auto-subtitle' class='0' field='[greenplum.41871.617679803200].[usr:Calculation_1730812182851096:qk:2]' scope='rows' value='true' />
          </style-rule>
          <style-rule element='mark'>
            <encoding attr='color' center='1.0' field='[greenplum.41871.617679803200].[usr:Calculation_1730812182851096:qk:2]' palette='tableau-red-green' type='interpolated' />
          </style-rule>
          <style-rule element='worksheet'>
            <format attr='display-field-labels' scope='cols' value='false' />
          </style-rule>
          <style-rule element='refline'>
            <format attr='fill-above' id='refline0' value='#00000000' />
            <format attr='fill-below' id='refline0' value='#00000000' />
            <format attr='stroke-color' id='refline0' value='#000000' />
            <format attr='line-pattern' id='refline0' value='dashed' />
          </style-rule>
        </style>
        <panes>
          <pane id='2'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[greenplum.41871.617679803200].[usr:Calculation_2730813141847173:nk:1]' />
            </encodings>
            <reference-line axis-column='[greenplum.41871.617679803200].[usr:Calculation_1730812182851096:qk:2]' formula='average' id='refline0' label='Expected' label-type='custom' scope='per-pane' value-column='[Parameters].[Parameter 1]' z-order='1' />
          </pane>
        </panes>
        <rows>[greenplum.41871.617679803200].[usr:Calculation_1730812182851096:qk:2]</rows>
        <cols>[greenplum.41871.617679803200].[none:subcategory:nk]</cols>
      </table>
    </worksheet>
  </worksheets>
  <dashboards>
    <dashboard lock-updates='true' name='Sellers analysis'>
      <style>
        <style-rule element='dash-container'>
          <format attr='border-style' id='dash-zone_38' value='solid' />
          <format attr='border-width' id='dash-zone_38' value='3' />
          <format attr='border-width' id='dash-zone_39' value='3' />
          <format attr='border-style' id='dash-zone_39' value='solid' />
          <format attr='border-color' id='dash-zone_38' value='#898989' />
          <format attr='border-color' id='dash-zone_39' value='#898989' />
        </style-rule>
        <style-rule element='parameter-ctrl'>
          <format attr='font-family' value='Arial' />
          <format attr='border-width' value='4' />
          <format attr='background-color' value='#ffffff' />
          <format attr='border-color' value='#000000' />
          <format attr='color' value='#000000' />
          <format attr='border-style' value='none' />
          <format attr='font-size' value='8' />
        </style-rule>
        <style-rule element='parameter-ctrl-title'>
          <format attr='color' value='#000000' />
          <format attr='font-size' value='8' />
        </style-rule>
      </style>
      <zones>
        <zone h='100000' id='2' type='layout-basic' w='100000' x='0' y='0'>
          <zone h='55314' id='22' param='horz' type='layout-flow' w='100000' x='0' y='0'>
            <zone h='55314' id='20' param='horz' type='layout-flow' w='99843' x='0' y='0'>
              <zone h='55314' id='18' param='horz' type='layout-flow' w='99843' x='0' y='0'>
                <zone h='55314' id='16' param='horz' type='layout-flow' w='99843' x='0' y='0'>
                  <zone h='55314' id='14' param='horz' type='layout-flow' w='99843' x='0' y='0'>
                    <zone h='55314' id='7' param='horz' type='layout-flow' w='99843' x='0' y='0'>
                      <zone h='55314' id='5' param='horz' type='layout-flow' w='99843' x='0' y='0'>
                        <zone h='55314' id='3' type='layout-basic' w='99843' x='0' y='0'>
                          <zone h='4724' id='8' name='Count vs Brand' param='[greenplum.41871.617679803200].[none:category:nk]' type='filter' w='7945' x='42917' y='9250'>
                          </zone>
                          <zone h='9250' id='9' name='Count vs Brand' param='[greenplum.41871.617679803200].[none:country:nk]' type='filter' w='7945' x='42917' y='0'>
                          </zone>
                          <zone h='5010' id='25' name='Count vs SubCategory' param='[greenplum.41871.617679803200].[none:retailername:nk]' type='filter' w='7945' x='42917' y='13974'>
                          </zone>
                          <zone h='4144' id='26' name='Count vs SubCategory' param='[greenplum.41871.617679803200].[none:taxonomiccolour:nk]' type='filter' w='7945' x='42917' y='18984'>
                          </zone>
                          <zone h='7797' id='30' param='[Parameters].[Parameter 2]' type='paramctrl' w='7945' x='42917' y='36811'>
                          </zone>
                          <zone h='7034' id='24' name='Count vs SubCategory' param='[greenplum.41871.617679803200].[none:price_currentdaymode:qk]' type='filter' w='7945' x='42917' y='23128'>
                          </zone>
                          <zone h='10706' id='31' name='Count vs SubCategory' pane-specification-id='0' param='[greenplum.41871.617679803200].[usr:Calculation_2730813141847173:nk:1]' type='color' w='7945' x='42917' y='44608'>
                          </zone>
                          <zone h='6649' id='32' param='[Parameters].[Parameter 3]' type='paramctrl' w='7945' x='42917' y='30162'>
                            <formatted-text>
                              <run>Low stats threshold</run>
                            </formatted-text>
                          </zone>
                          <zone h='55314' id='38' param='vert' type='layout-flow' w='42917' x='0' y='0'>
                            <zone h='4235' id='10' name='Count vs Brand' param='[greenplum.41871.617679803200].[none:subcategory:nk]' type='filter' w='42446' x='314' y='664'>
                            </zone>
                            <zone h='29194' id='29' name='Ratio vs Brand' w='42446' x='314' y='4899'>
                              <layout-cache minheight='261' type-h='scalable' type-w='fixed' />
                            </zone>
                            <zone h='20888' id='1' name='Count vs Brand' w='42446' x='314' y='34093'>
                              <layout-cache minheight='161' type-h='scalable' type-w='fixed' />
                            </zone>
                          </zone>
                          <zone h='55314' id='39' param='vert' type='layout-flow' w='48981' x='50862' y='0'>
                            <zone h='4235' id='23' name='Count vs SubCategory' param='[greenplum.41871.617679803200].[none:facetbrand:nk]' type='filter' w='48667' x='51019' y='664'>
                            </zone>
                            <zone h='25041' id='28' name='Ratio vs SubCategory' w='48667' x='51019' y='4899'>
                              <layout-cache minheight='141' type-h='scalable' type-w='cell' />
                            </zone>
                            <zone h='25041' id='11' name='Count vs SubCategory' w='48667' x='51019' y='29940'>
                              <layout-cache minheight='141' type-h='scalable' type-w='cell' />
                            </zone>
                          </zone>
                        </zone>
                      </zone>
                    </zone>
                  </zone>
                </zone>
              </zone>
            </zone>
          </zone>
          <zone h='24042' id='36' name='CompareRetailers_subcat' w='100000' x='0' y='75958'>
          </zone>
          <zone h='20644' id='37' name='CompareRetailers_cat' w='100000' x='0' y='55314'>
          </zone>
        </zone>
      </zones>
    </dashboard>
  </dashboards>
  <windows show-side-pane='false'>
    <window class='schema' source-height='-1' />
    <window auto-hidden='0' class='worksheet' maximized='0' name='Count vs Brand'>
      <cards>
        <edge name='left'>
          <strip size='300'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='31'>
            <card type='columns' />
          </strip>
          <strip size='31'>
            <card type='rows' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card mode='compact' param='[Parameters].[Parameter 2]' type='parameter' />
            <card param='[greenplum.41871.617679803200].[usr:Calculation_5270812182716952 1:qk]' show-null-ctrls='false' type='filter' />
          </strip>
        </edge>
      </cards>
      <highlight>
        <color-one-way>
          <field>[greenplum.41857.610422361100].[none:taxonomiccolour:nk]</field>
          <field>[greenplum.41858.803400914400].[none:facetbrand:nk]</field>
          <field>[greenplum.41858.803400914400].[none:sellers:nk]</field>
          <field>[greenplum.41863.764809224500].[none:facetbrand:nk]</field>
          <field>[greenplum.41863.764809224500].[none:price_currentdaymode:qk]</field>
          <field>[greenplum.41863.764809224500].[none:sellers:nk]</field>
          <field>[greenplum.41863.764809224500].[pcto:cnt:Number of Records:qk]</field>
          <field>[greenplum.41863.764809224500].[pcto:usr:Calculation_1730812182851096:qk]</field>
          <field>[greenplum.41871.617679803200].[usr:Calculation_2730813141847173:nk:1]</field>
          <field>[postgres.41855.511457280100].[none:category:nk]</field>
          <field>[postgres.41855.511457280100].[none:country:nk]</field>
          <field>[postgres.41855.511457280100].[none:price_currentdaymode:qk]</field>
          <field>[postgres.41855.511457280100].[none:retailername:nk]</field>
          <field>[postgres.41855.511457280100].[none:subcategory:nk]</field>
        </color-one-way>
      </highlight>
      <viewpoint>
      </viewpoint>
    </window>
    <window auto-hidden='0' class='worksheet' maximized='1' name='Ratio vs Brand'>
      <cards>
        <edge name='left'>
          <strip size='300'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='31'>
            <card type='columns' />
          </strip>
          <strip size='31'>
            <card type='rows' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <floating-toolbar-visibility value='1' />
      </viewpoint>
      <highlight>
        <color-one-way>
          <field>[greenplum.41858.803400914400].[none:subcategory:nk]</field>
          <field>[greenplum.41863.764809224500].[none:facetbrand:nk]</field>
          <field>[greenplum.41863.764809224500].[none:subcategory:nk]</field>
          <field>[greenplum.41863.764809224500].[usr:Calculation_1730812182851096:qk]</field>
          <field>[greenplum.41863.764809224500].[usr:Calculation_2730813141847173:nk:1]</field>
          <field>[greenplum.41871.617679803200].[none:price_currentdaymode:qk]</field>
        </color-one-way>
      </highlight>
    </window>
    <window auto-hidden='0' class='worksheet' maximized='0' name='Count vs SubCategory'>
      <cards>
        <edge name='left'>
          <strip size='253'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='31'>
            <card type='columns' />
          </strip>
          <strip size='31'>
            <card type='rows' />
          </strip>
        </edge>
      </cards>
      <highlight>
        <color-one-way>
          <field>[greenplum.41857.610422361100].[none:taxonomiccolour:nk]</field>
          <field>[greenplum.41858.803400914400].[none:sellers:nk]</field>
          <field>[greenplum.41863.764809224500].[none:facetbrand:nk]</field>
          <field>[greenplum.41863.764809224500].[none:subcategory:nk]</field>
          <field>[greenplum.41863.764809224500].[none:taxonomiccolour:nk]</field>
          <field>[greenplum.41863.764809224500].[usr:Calculation_2730813141847173:nk:1]</field>
          <field>[postgres.41855.511457280100].[none:category:nk]</field>
          <field>[postgres.41855.511457280100].[none:country:nk]</field>
          <field>[postgres.41855.511457280100].[none:facetbrand:nk]</field>
          <field>[postgres.41855.511457280100].[none:price_currentdaymode:qk]</field>
          <field>[postgres.41855.511457280100].[none:retailername:nk]</field>
        </color-one-way>
      </highlight>
      <viewpoint>
      </viewpoint>
    </window>
    <window auto-hidden='0' class='worksheet' maximized='0' name='Ratio vs SubCategory'>
      <cards>
        <edge name='left'>
          <strip size='300'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='31'>
            <card type='columns' />
          </strip>
          <strip size='31'>
            <card type='rows' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <floating-toolbar-visibility value='1' />
      </viewpoint>
      <highlight>
        <color-one-way>
          <field>[greenplum.41858.803400914400].[none:subcategory:nk]</field>
          <field>[greenplum.41863.764809224500].[none:facetbrand:nk]</field>
          <field>[greenplum.41863.764809224500].[usr:Calculation_2730813141847173:nk:1]</field>
          <field>[greenplum.41871.617679803200].[usr:Calculation_2730813141847173:nk:1]</field>
        </color-one-way>
      </highlight>
    </window>
    <window auto-hidden='0' class='worksheet' maximized='0' name='CompareRetailers_subcat'>
      <cards>
        <edge name='left'>
          <strip size='300'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card pane-specification-id='2' param='[greenplum.41871.617679803200].[usr:Calculation_2730813141847173:nk:1]' type='color' />
            <card pane-specification-id='2' param='[greenplum.41871.617679803200].[usr:Calculation_1730812182851096:qk:2]' type='size' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='31'>
            <card type='columns' />
          </strip>
          <strip size='31'>
            <card type='rows' />
          </strip>
        </edge>
      </cards>
      <highlight>
        <color-one-way>
          <field>[greenplum.41858.803400914400].[none:subcategory:nk]</field>
          <field>[greenplum.41863.764809224500 (copy)].[none:retailername:nk]</field>
          <field>[greenplum.41863.764809224500 (copy)].[none:subcategory:nk]</field>
          <field>[greenplum.41863.764809224500 (copy)].[none:taxonomiccolour:nk]</field>
          <field>[greenplum.41863.764809224500].[none:facetbrand:nk]</field>
          <field>[greenplum.41871.617679803200 (copy)].[none:category:nk]</field>
          <field>[greenplum.41871.617679803200 (copy)].[none:retailername:nk]</field>
          <field>[greenplum.41871.617679803200 (copy)].[none:subcategory:nk]</field>
          <field>[greenplum.41871.617679803200].[usr:Calculation_2730813141847173:nk:1]</field>
        </color-one-way>
      </highlight>
      <viewpoint>
        <floating-toolbar-visibility value='1' />
      </viewpoint>
    </window>
    <window auto-hidden='0' class='worksheet' maximized='0' name='CompareRetailers_cat'>
      <cards>
        <edge name='left'>
          <strip size='300'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card pane-specification-id='2' param='[greenplum.41871.617679803200].[usr:Calculation_2730813141847173:nk:1]' type='color' />
            <card pane-specification-id='2' param='[greenplum.41871.617679803200].[usr:Calculation_1730812182851096:qk:2]' type='size' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='31'>
            <card type='columns' />
          </strip>
          <strip size='31'>
            <card type='rows' />
          </strip>
        </edge>
      </cards>
      <highlight>
        <color-one-way>
          <field>[greenplum.41858.803400914400].[none:subcategory:nk]</field>
          <field>[greenplum.41863.764809224500 (copy 2)].[none:category:nk]</field>
          <field>[greenplum.41863.764809224500 (copy 2)].[none:retailername:nk]</field>
          <field>[greenplum.41863.764809224500 (copy 2)].[none:subcategory:nk]</field>
          <field>[greenplum.41863.764809224500].[none:category:nk]</field>
          <field>[greenplum.41863.764809224500].[none:facetbrand:nk]</field>
          <field>[greenplum.41863.764809224500].[none:price_currentdaymode:qk]</field>
          <field>[greenplum.41863.764809224500].[none:retailername:nk]</field>
          <field>[greenplum.41863.764809224500].[none:taxonomiccolour:nk]</field>
          <field>[greenplum.41871.617679803200 (copy)].[none:category:nk]</field>
          <field>[greenplum.41871.617679803200 (copy)].[none:retailername:nk]</field>
          <field>[greenplum.41871.617679803200 (copy)].[none:subcategory:nk]</field>
          <field>[greenplum.41871.617679803200].[usr:Calculation_2730813141847173:nk:1]</field>
        </color-one-way>
      </highlight>
      <viewpoint>
        <floating-toolbar-visibility value='1' />
      </viewpoint>
    </window>
    <window auto-hidden='0' class='dashboard' maximized='0' name='Sellers analysis'>
      <active id='24' />
      <zones>
        <zone mode='dropdown' name='Count vs Brand' param='[greenplum.41871.617679803200].[none:category:nk]' type='filter' />
        <zone mode='radiolist' name='Count vs Brand' param='[greenplum.41871.617679803200].[none:country:nk]' show-all='false' type='filter' />
        <zone mode='checkdropdown' name='Count vs SubCategory' param='[greenplum.41871.617679803200].[none:retailername:nk]' type='filter' values='relevant' />
        <zone mode='checkdropdown' name='Count vs SubCategory' param='[greenplum.41871.617679803200].[none:taxonomiccolour:nk]' type='filter' values='relevant' />
        <zone mode='list' name='' param='[Parameters].[Parameter 2]' type='paramctrl' />
        <zone name='Count vs SubCategory' param='[greenplum.41871.617679803200].[none:price_currentdaymode:qk]' show-null-ctrls='false' type='filter' />
        <zone name='Count vs SubCategory' pane-specification-id='0' param='[greenplum.41871.617679803200].[usr:Calculation_2730813141847173:nk:1]' type='color' />
        <zone custom-title='true' mode='slider' name='' param='[Parameters].[Parameter 3]' type='paramctrl' />
        <zone mode='checkdropdown' name='Count vs Brand' param='[greenplum.41871.617679803200].[none:subcategory:nk]' type='filter' values='relevant' />
        <zone name='Ratio vs Brand'>
          <viewpoint>
            <zoom type='entire-view' />
          </viewpoint>
        </zone>
        <zone name='Count vs Brand'>
          <viewpoint>
            <zoom type='entire-view' />
          </viewpoint>
          <highlight>
            <color-one-way>
              <field>[greenplum.41863.764809224500].[usr:Calculation_2730813141847173:nk:1]</field>
              <field>[postgres.41855.511457280100].[none:facetbrand:nk]</field>
            </color-one-way>
          </highlight>
        </zone>
        <zone mode='checkdropdown' name='Count vs SubCategory' param='[greenplum.41871.617679803200].[none:facetbrand:nk]' type='filter' values='relevant' />
        <zone name='Ratio vs SubCategory'>
          <viewpoint>
            <zoom type='entire-view' />
          </viewpoint>
        </zone>
        <zone name='Count vs SubCategory'>
          <viewpoint>
            <zoom type='entire-view' />
          </viewpoint>
          <highlight>
            <color-one-way>
              <field>[greenplum.41863.764809224500 (copy)].[usr:Calculation_2730813141847173:nk:1]</field>
            </color-one-way>
          </highlight>
        </zone>
      </zones>
    </window>
  </windows>
  <thumbnails>
    <thumbnail height='384' name='Count vs Brand' width='384'>
      iVBORw0KGgoAAAANSUhEUgAAAYAAAAGACAYAAACkx7W/AAAACXBIWXMAAAsTAAALEwEAmpwY
      AAAI50lEQVR4nO3dTYicBwHG8Wd29is2mzSNSZo2qbbaYkKrxmg8tPjRgoLFQ4R6qYiIh4of
      iEjFD/SggihYL4p6ELUqiFBFC4IgtfXjIKW0GpEtGGuTus2mpu2astlmd8eDBKJgT9rN7vP7
      XedleOYy/3nfeZkZjEajUQCoMhgMBmNrPQKAtSEAAKUEAKCUAACUEgCAUgIAUEoAAEoJAEAp
      AQAoJQAApQQAoJQAAJQSAIBS42s94Pk2NzeXRx55ZK1nAKy5ugAsLi5mfn5+rWcArLlB2/8B
      rKysZGVl5TmPmZ2dzdGjR3Po0KFs3779eVoG8PyZmpoabIgzgNHqas6eWciZxaU89eQ/spJk
      JUmmZpKx8ezZtS2DwSBTw0GGw2GGw+FzPt+5x8fHxzM5Ofl/3w+wFjZEAJaXTufofd/Jb+99
      IF/+/Lczl+SJJDnwzmTrnvzmzk9kZmos1+2YXuOlABeO9R+ApfksLpzKT++5P39/cjlXv+lw
      9m0aZDg9yPzq01kaPZWfP/hYLt+2Kft27MlY3PoEkGyEAJx+OE8+diy3f+HOHLzprXnPZ7+W
      1142lut2DHPft96SU8fvz9t/cGsOXrU977h+T4ZJXNQB2AABWFkZZnp6a2655X3Zd+Dlec2L
      tmT35kHGJga58urX59JLdid3ncpoaTxnkwzWejDABWLdB2C0Opapyc258ca35cUv2Zn9uzdn
      PP+6zHPZnldmddvOZHYhoy0XZSXJ6hrvBbhQrPsADC/Zn80Xj3L48ChTUxOZSjJYPpUsL+RH
      n/l+/vb7P+bAR76Z/VdszUycAQCcs+4DMJicyXiSXeff4DM6m4zO5MSf53LsyKPZ8t4t2Xzp
      Rev/xQL8D22s98RnTyXP/CU//OQd+cVXv5cfv/njOXHrB3Lytldn0kd/gH+zIQIwWl3N6tLT
      WXhiLsdnj+TxpbEs7n1Zrrlyd/bu3JGJQTIcKADA+TZGAFbOZPGvv869P/tVPvXhL+YFN9+W
      Te//Su649WD2X74103HtH+A/rf8ALM1n8alTufu7d+fBxxfzxMGb87oDr8iBa3dmZricZxdP
      ZyWTGQ4G2TQ9sdZrAS4Y6z8Ai8dy+sSxfP1z38j8vhsyd/j27H/jS/PuQ3uTpWfy7OmlnM1M
      JsaHAgBwnnUfgJMPP5C5R4/nT0nOPDab/ORLuet3M/nDCy9KVpaT0Sijve/KVVdsy6c/dH3G
      k0yt9WiAC8C6D8Az88ezcPJ4TiTJwsnkyC/z0JHkofMPuvaGvOq63flYfBcAcM66D8Dlb/hg
      di0vZ/amj/73g6Z2ZHpyPFsiAADnrPsATGzenokk11y8a62nAKwrfhkZoJQAAJQSAIBSAgBQ
      SgAASgkAQCkBACglAAClBACglAAAlBIAgFICAFBKAABKCQBAKQEAKCUAAKUEAKCUAACUEgCA
      UgIAUEoAAEoJAEApAQAoJQAApQQAoJQAAJQSAIBSAgBQSgAASgkAQCkBACglAAClBACglAAA
      lBIAgFICAFBKAABKCQBAKQEAKCUAAKUEAKCUAACUEgCAUgIAUEoAAEoJAEApAQAoJQAApQQA
      oJQAAJQSAIBSAgBQSgAASgkAQCkBACglAAClBACglAAAlBIAgFICAFBKAABKCQBAKQEAKCUA
      AKUEAKCUAACUEgCAUgIAUEoAAEoJAEApAQAoJQAApQQAoJQAAJQSAIBSAgBQSgAASgkAQCkB
      ACglAAClBACglAAAlBIAgFICAFBKAABKCQBAKQEAKCUAAKUEAKCUAACUEgCAUgIAUEoAAEoJ
      AEApAQAoJQAApQQAoJQAAJQSAIBSAgBQSgAASgkAQCkBACglAAClBACglAAAlBIAgFICAFBK
      AABKCQBAKQEAKCUAAKUEAKCUAACUEgCAUgIAUEoAAEoJAEApAQAoJQAApQQAoJQAAJQSAIBS
      AgBQSgAASgkAQCkBACglAAClBACglAAAlBIAgFICAFBKAABKCQBAKQEAKCUAAKUEAKCUAACU
      EgCAUgIAUEoAAEoJAEApAQAoJQAApQQAoJQAAJQSAIBSAgBQSgAASgkAQCkBACglAAClBACg
      lAAAlBIAgFICAFBKAABKCQBAKQEAKCUAAKUEAKCUAACUEgCAUgIAUEoAAEoJAEApAQAoJQAA
      pQQAoJQAAJQSAIBSAgBQSgAASgkAQCkBACglAAClBACglAAAlBIAgFICAFBKAABKCQBAKQEA
      KCUAAKUEAKCUAACUEgCAUgIAUEoAAEoJAEApAQAoJQAApQQAoJQAAJQSAIBSAgBQSgAASgkA
      QCkBACglAAClBACglAAAlBIAgFICAFBKAABKCQBAKQEAKCUAAKUEAKCUAACUEgCAUgIAUEoA
      AEoJAEApAQAoJQAApQQAoJQAAJQSAIBSAgBQSgAASgkAQCkBACglAAClBACglAAAlBIAgFIC
      AFBKAABKCQBAKQEAKCUAAKUEAKCUAACUEgCAUgIAUEoAAEoJAEApAQAoJQAApQQAoJQAAJQS
      AIBSAgBQSgAASgkAQCkBACglAAClBACglAAAlBIAgFICAFBKAABKCQBAKQEAKCUAAKUEAKCU
      AACUEgCAUgIAUEoAAEoJAEApAQAoJQAApQQAoJQAAJQSAIBSAgBQSgAASgkAQCkBACglAACl
      BACglAAAlBIAgFICAFBKAABKCQBAKQEAKCUAAKUEAKCUAACUEgCAUgIAUEoAAEoJAEApAQAo
      JQAApQQAoJQAAJQSAIBSAgBQSgAASgkAQCkBACglAAClBACglAAAlBIAgFICAFBKAABKCQBA
      KQEAKCUAAKUEAKCUAACUEgCAUgIAUEoAAEoJAEApAQAoJQAApQQAoJQAAJQSAIBSAgBQSgAA
      SgkAQCkBACglAAClBACglAAAlBIAgFICAFBKAABKCQBAKQEAKCUAAKUEAKCUAACUEgCAUgIA
      UEoAAEoJAEApAQAoJQAApQQAoJQAAJQSAIBSAgBQSgAASgkAQCkBACglAAClBACglAAAlBIA
      gFICAFBKAABKCQBAqX8CRf38B6UedlwAAAAASUVORK5CYII=
    </thumbnail>
    <thumbnail height='384' name='Ratio vs Brand' width='384'>
      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
    </thumbnail>
    <thumbnail height='384' name='Count vs SubCategory' width='384'>
      iVBORw0KGgoAAAANSUhEUgAAAYAAAAGACAYAAACkx7W/AAAACXBIWXMAAAsTAAALEwEAmpwY
      AAAKQElEQVR4nO3bb6idh0HH8d+5f5O05yZZb2Ki3OFWUt00rblYuuIc65S1bPMPgpPCylQY
      LSoqiC/mO8EJin9eCCpVxsSpOBho66Cub6RFbZNpt9HMlYW1diZtbLssTZO7/Dnn+GJlTE37
      pmvOOfl9PnBf3HPuffi9Ot/zPM85g8lkMgkAVQaDwWBh2iMAmA4BACglAAClBACglAAAlBIA
      gFICAFBKAABKCQBAKQEAKLU07QGvxdGjR3Py5MlpzwCYS3MdgLW1tYzH48s+d/LkyUwmk+zb
      t+8KrwKYDzMbgMlkksnoYi5cHOXSaPTNxxcWl7K4tJzV5cVsbGxkY2Pjsv+/tbWV0WiUgwcP
      XqnJAHNlpu8BPPl3v5kPvu/WDIfDb/5svvfn8gsf+9y0pwHMvRk9AxgnmeS/Hv/7rH/vD+T2
      G34it9+wK6MLFzL8zu/J3hv2T3sgwNyb4QBczPF/P5rhTe/JTd9/e9536A0ZTxaztHptVnbs
      mvZAgLk3o5eALiY5k2P3J8tnVrNvfTWj82ezOFzPzvXrsrF3+7QHAsy92TwDuPhScuHpPJDk
      2b/4ZBYe/NccfVvyyJETueGHfjzv/tlfyT23uAwE8FrMZgCylIy3523vvzMXd313tu9Zz/cd
      SHZNPp0TZ87lU3/5uXzglv1ZTbI87akAc2omAzDJSpJd+al7fjF73nx9rtu3L+uryXMHVvKn
      Hz+Z3/7okXztj+7IG5IsD6a9FmA+zeQ9gEmSSxlk5/43Zc/OYdZXv/H4cP/ebN99KZM8nlNf
      Ty6MXvUwALyK2QzAha9mdPqz+bVfvTt/84//lMdf+HqS8/nPo4/lubNnM3jLZvatJNtmcj3A
      fJjJS0BJMlhITj392Xzm0YdydjTKifWFPPHoMzmV78rNtx3K2uIMjweYAzP5Grp4zf4s7Lgu
      f/DL783vfPy+fOwPf/cbTxz4QH76zkP5vV96V1anOxFg7g0mk8lk2iP+v0kmk0nOv3QqL37t
      xZw5u5WXxslwuJ7h8JqsDXdkdfHV7/4ePnw4o9Eot9566xXaDDA/BoPBYCbPAJJBBoNBtg2v
      y7YdO7M+HuX8OFldXs7Cggv/AN8OMxqAb7G4lIXFpfjuL8C3l7fTAKUEAKCUAACUEgCAUgIA
      UEoAAEoJAEApAQAoJQAApQQAoJQAAJQSAIBSAgBQSgAASgkAQCkBACglAAClBACglAAAlBIA
      gFICAFBKAABKCQBAKQEAKCUAAKUEAKCUAACUEgCAUgIAUEoAAEoJAEApAQAoJQAApQQAoJQA
      AJQSAIBSAgBQSgAASgkAQCkBACglAAClBACglAAAlBIAgFICAFBKAABKCQBAKQEAKCUAAKUE
      AKCUAACUEgCAUgIAUEoAAEoJAEApAQAoJQAApQQAoJQAAJQSAIBSAgBQSgAASgkAQCkBACgl
      AAClBACglAAAlBIAgFICAFBKAABKCQBAKQEAKCUAAKUEAKCUAACUEgCAUgIAUEoAAEoJAEAp
      AQAoJQAApQQAoJQAAJQSAIBSAgBQSgAASgkAQCkBACglAAClBACglAAAlBIAgFICAFBKAABK
      CQBAKQEAKCUAAKUEAKCUAACUEgCAUgIAUEoAAEoJAEApAQAoJQAApQQAoJQAAJQSAIBSAgBQ
      SgAASgkAQCkBACglAAClBACglAAAlBIAgFICAFBKAABKCQBAKQEAKCUAAKUEAKCUAACUEgCA
      UgIAUEoAAEoJAEApAQAoJQAApQQAoJQAAJQSAIBSAgBQSgAASgkAQCkBACglAAClBACglAAA
      lBIAgFICAFBKAABKCQBAKQEAKCUAAKUEAKCUAACUEgCAUgIAUEoAAEoJAEApAQAoJQAApQQA
      oJQAAJQSAIBSAgBQSgAASgkAQCkBACglAAClBACglAAAlBIAgFICAFBKAABKCQBAKQEAKCUA
      AKUEAKCUAACUEgCAUgIAUEoAAEoJAEApAQAoJQAApQQAoJQAAJQSAIBSAgBQSgAASgkAQCkB
      ACglAAClBACglAAAlBIAgFICAFBKAABKCQBAKQEAKCUAAKUEAKCUAACUEgCAUgIAUEoAAEoJ
      AEApAQAoJQAApQQAoJQAAJQSAIBSAgBQSgAASgkAQCkBACglAAClBACglAAAlBIAgFICAFBK
      AABKCQBAKQEAKCUAAKUEAKCUAACUEgCAUgIAUEoAAEoJAEApAQAoJQAApQQAoJQAAJQSAIBS
      AgBQSgAASgkAQCkBACglAAClBACglAAAlBIAgFICAFBKAABKCQBAKQEAKCUAAKUEAKCUAACU
      EgCAUgIAUEoAAEoJAEApAQAoJQAApQQAoJQAAJQSAIBSAgBQSgAASgkAQCkBACglAAClBACg
      lAAAlBIAgFICAFBKAABKCQBAKQEAKCUAAKUEAKCUAACUEgCAUgIAUEoAAEoJAEApAQAoJQAA
      pQQAoJQAAJQSAIBSAgBQSgAASgkAQKmZD8BXv3Bf/uGjH8m1t/xxjhx7IeenPQjgKjG7AZhM
      ktP/kfs+/XDu/eS/5OxgkvG0NwFcRWY0AONMcinPPfZQHv7nz+TBx44l2xdndi3APJrRl9St
      JP+dP7ntnmx95Ut569s3pj0I4KqzNO0Bl3Pq2CM5/sif5c/f//u5+4cv5F0LyYc+fDHZmkx7
      GsBVY+YCcPH0k3ni6JfzqfufyaEf+9Ec3DiWa44/m7x4KeNR8q0JeP7553Pu3LnLHufcuXNZ
      XV29MqPhdTDe2sqLDzww7RlTsXr99dl+443TnnHVm7kAbJ04nEePPJ3f+sQb8/m/ujF7vnIi
      Tzx5NslqRsn/uhH81FNP5fjx4694rL17977ec+F1Mzp9Os98+DemPWMqdt91lwBcATMXgBP/
      dn+e/+JDSY5nc8ffZjAZZ/Ly2/7bfubZfOjn78hHfv0d2Z1kc3Mzm5ublz3OkSNHMh773BDA
      K5m5AOw5dGfePXx71m45k8XF5Vx44Qt58tiJ3PuJ5O673pH3vPPN2fHy3y4svPI97MFgcGUG
      A8ypmQvArgM/kpvfdCk33TbO0tJKzj31YB55+PO5977kJ++4KT948Dviyj7AazdzAVhc2ZbF
      lWTby78vrQ0z3Ls7OXApw2uXs315Rj+5CjBnZi4A/9fS3s1svvOtOfzXk7zljTuzPO1BAFeJ
      mQ/AwspahitruXn3tJcAXF1cTwEoJQAApQQAoJQAAJQSAIBSAgBQSgAASgkAQCkBACglAACl
      BACglAAAlBIAgFICAFBKAABKCQBAKQEAKCUAAKUEAKCUAACUEgCAUgIAUEoAAEoJAEApAQAo
      JQAApQQAoJQAAJQSAIBSAgBQSgAASgkAQCkBACglAAClBACglAAAlBIAgFICAFBKAABKCQBA
      KQEAKCUAAKUEAKCUAACUEgCAUgIAUEoAAEoJAEApAQAoJQAApQQAoJQAAJQSAIBSAgBQSgAA
      SgkAQCkBACglAAClBACglAAAlBIAgFICAFBKAABKCQBAqf8BA15U9fdEC84AAAAASUVORK5C
      YII=
    </thumbnail>
    <thumbnail height='384' name='Ratio vs SubCategory' width='384'>
      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
      ATgSgOqKavUecL32FlUHzvMV5+uzYxfo9oEp2lu+S4vX5cg/vKO++9C7bds2vfDCC7Vua9as
      WerWrZvy8vI0e/ZsSZK/qkKV+krTp7+hJ598UuHh4dq4caMWLVpU67rt27fXgw8+KMuytGTJ
      Eq1bt67W+IABA3TjjTdKkh599FFlZWXVGr/22ms1ePBgSdK0adPqbOcDDzyghIQEZWVl6dFH
      H6015nK59Oyzz0qS1q1bpyVLltQa79y5s377299KkhYvXqwNGzbUGh82bJgmTpwoSZozZ44O
      HjxYa/zXv/61UlNTVVFRoRkzZtRZ25w5cxQfH6/MzEw98cQTtcYGDhyoG264QZL0yCOPaN++
      fbXGr7vuOg0aNEi2beu222477Xbv3btXjz32WK0xt9utZ5555rTbfe655+ree++VJC1atEhp
      aWmn3e7Zs2crLy+v1vjNN9+siy66SOXl5Zo5c2adtT300EOKi4vTzp07NX/+/FpjkZGRevzx
      xyVJq1ev1vLly2uNt1BbdVLNv/cnGW8r5/DuWuPnJ6Sq1y8GSJJWbPyryipLao0P7nmlOpzd
      WWWVJVqx8a911nZV/6mKCI9SzuHd+iTj7Zqvl8el9GmvqnXr1po7d64kafny5Vq9enWt6/bp
      00dTp06VJM2fP187d+6sNT5u3DiNHDlSkjRjxgxVVFTUGj/V/ei7vr0fpaWlnfZ+JOmU96MY
      ddI56idJem/LazpSXPvfLKXLMHVt37vm+p/Ml23btcZ/lXytWkfH60hxnt7b8lqtMcuydM2g
      mu/vXQe2Kn33WknSB/uiFfduS40fP16XXHLJabe7s/5NUWqjwrKjWpm+uM52Txx4p9xuj/bm
      Zygtc02tsbOiYjWqb839JH33Wu06sLX2bbc9X6ndLqmz3R/mtFLs31uE7PHjX70fSQ4FoGXH
      Xhpw/h4d2JR78kyr5o8tSS7Jkq3ysjLtzMgIXKS0tFTZ2dm1bquyslKS5PV664xJCnwzlZWV
      1Rl3uU4e5nD8+PE640ePHg2cLigoqDNeUnLyDp6Tk1PnG7eqqirw9/ev63afTNuptqtFixa1
      1vH98WPHjgVO5+Xl1RkvKyuTVLP9p/q6VFfXxLeiouInbfepbtvr9Uo69XZ7PCe/pUpKSuqM
      R0dH11rH98ePHz8eON3Q2/3duYuKiuqMt4lwq1ObmtOlFYU6Xnqo1nh51cljSQpLj6i0sqjW
      uNdXeWJt/jrXlSS/7T9xuarAuMttKTu7OvB9LkmFhYV11paYmBg4fejQoTrjxcXFgdO5ubmB
      r9O3vr396urqU37d/CfeBPGv3I/sqFY6p/WJdZQfr7PtVdUnH5SPlRzSiUeBAJ+/OvD3969r
      WSf3EVR6ywPj9uFSVboK693uDnGVimom+U9x25Jkn1hLVXVFnfHv7hkoryypM15WeXLu4vJj
      gXHrUJnK7QiVlp78fmno+1F9jx/B3o8s+/uPag1k36cr9PqmXM28c5pKD+XLH+7T//v32brx
      uT8ra9nvtbHNNP3xmvNr7QJKT09XSkqKE8sB6rX/qyN6+6mt9V+wATWL9GjK44NDOmdD2/HP
      A1r70s76L9iAUsb8QqmXd673cm/O26wDu4/Xe7mGNGDcuUoemVj/BRuZZVmWY0cCR8d3UM+k
      LrJkK3PJMn1T2Uaz5t6guXdN0XtlF+v+q3uecv8/ACA0HHsXUOsuKRrVpeZ0v7vurjkRN1iv
      vjpQlssdeGcQAKBxhPY4AMuS231GHnoAAMY5Iz8MDgDgPAIAAIYiAABgKAIAAIYiAABgKAIA
      AIYiAABgKAIAAIYiAABgKAIAAIYiAABgKAIAAIYiAABgKAIAAIYiAABgKAIAAIYiAABgKAIA
      AIYiAABgKAIAAIYiAABgKAIAAIYiAABgKAIAAIYiAABgKAIAAIYiAABgKAIAAIYiAABgKAIA
      AIYiAABgKAIAAIYiAABgKAIAAIYiAABgKAIAAIYiAABgKAIAAIYiAABgKAIAAIYiAABgKAIA
      AIYiAABgKAIAAIYiAABgKAIAAIZq8ADYfq8+f+8lXTXhat06a44Ol1fXDPir9OHfn9PkseM0
      c/Y8ZR6rkN3QkwMAgtbgAag8nqWnVq3Xw088rTEdcvTapnxJkq84S08v/EZzFy7WmM5lWrQk
      kwAAQCPyNPQN+ior1aJDD7U/O1Yte3XS+iNlkiTbFaZ2rUq0dfNGZX9zRMWeg6rwJqn46NHA
      dW2bJABAqDT8LiBJR71++W1bfl+Vjlb7JEme6ATdfddIZWds15EKW83cUbJsW1VVVYE/AIDQ
      afAARLbuoNTyw3ph0QI9tfhr3ZQcpx1v/V078w9r0at/U3V0axUfLdbQsecpIjxcHTt2DPyx
      LKuhlwMAOI0GD4Cr2Vn6zZ3T1K1Na11y130a0OkstWp3jlq1OFszZ96vDhHhGjH1d7o0KU48
      3ANA42nw1wAkSy3aJOqqCYmBc9r3u6jmRFSSJiYmNfyUAIAfjeMAAMBQBAAADEUAAMBQBAAA
      DEUAAMBQBAAADEUAAMBQBAAADOXAgWDm2LTvmEoqq0M6Z9e4Fmp/VvOQztmQvsg+rpsWfBbS
      OT0uS5v+cElI5wSaAgLwE/zXiu3afqAopHM+PPZ8Xd8/sf4LnqGqfX4VlntDOqfbxYeOAKfC
      LiAAMBQBAABDEQAAMBQBAABDEQAAMBQBAABDEQAAMBQBAABDEQAAMBQBAABDnfEfBbHw073a
      d6QspHNekhSvgV1iQzonAITaGR+A1dvztHHv0ZDO2bZVBAHAGeVwcaV25IX2c6eaedy6qFPr
      kM6J0DrjAwBA2ph1VLe/sjmkc7Y/K0L/vG94SOdEaPEaAAAYigAAgKEIAAAYigAAgKEIAAAY
      igAAgKEIAAAYigAAgKEIAAAYigAAgKEIAAAYigAAgKEIAAAYigAAgKEIAAAYigAAgKEIAAAY
      igAAgKEIAAAYigAAgKEIAAAYigAAgKEIAAAYypEAFOZ+pd/f/zs9t3SNfH47cP6Rb77Q3Fmz
      9NSr76nM58TMAIBgNXgAvCUH9F/zHlPq6LEq/nSh3sk8VjNgF+m1h+aqx9U3qXnG83ptS35D
      Tw0A+BEaPABVxUdUEddTg/qm6OrRSfr06yM1A3a4YhMKtfy5p/XRV/sVHxPZ0FMDAH4ET8Pf
      pKUid5j8luSyXCo/sQvIV5qnjdtidd1/3qED657Qhs92aWjb7tq5IyNwTZ+P/UIAECoNHoCw
      yGhFZOXqwJFj2rMuU51GR6go/6B8qlC2z63zuvVQi30XavveIkVERiolJSVw3fT09IZeDgDg
      NBp8F1B4qwQ9cscVevz+mfo49le6fWB7ZS5bpj1K0NzfT9Bvp1yvlz4M06ypA+SxGnp2AECw
      HNkFFJ80RC8u/KXkcsnlstTvzrtrhuIu06uvjpLlcsvl4tEfABqTAwGo4fK4655pWXJ7HJsS
      APAjcCAYABiKAACAoQgAABiKAACAoQgAABiKAACAoQgAABiKAACAoQgAABiKAACAoQgAABiK
      AACAoQgAABiKAACAoQgAABiKAACAoQgAABiKX88FAI1g2subtKugJKRzzhjRVZf3bh/4fwIA
      AI0g+1iZvjkU2gAUlXtr/T+7gADAUAQAAAxFAADAUAQAAAxFAADAUAQAAAxFAADAUAQAAAxF
      AADAUAQAAAxFAADAUAQAAAxFAADAUAQAAAxFAADAUAQAAAxFAADAUAQAAAxFAADAUAQAAAxF
      AADAUAQAAAxFAADAUJ76LrB+/Xpt3LhRPp9PHo9Hfr9fycnJGj58eCjWBwBwSL3PALp27aru
      3burqKhIw4cPV+/evbV582bZth2K9QEAHFJvAOLj43XOOecoPj5enTt3VseOHeX1ekOxNgCA
      g+rdBSRJ5513nvbs2aN7771XsbGxuv3222VZltNrAwA4KKgAuFwu2bathIQExcfHq7y8/Acv
      X5izXX/8y0L9os8ITZ10qTwuS76yAj3zPy9o975indUhVkmpozR+SJLC6AgANIqg3gWUmZmp
      goICNW/eXD169NCCBQtO+xqAtyRX//nff9LQcZNUkbZYb+08Kkmywlro0lFX6qaJQ7Rj1T9l
      R7eQu+G2AwDwIwUVANu2VVJSItu2VVlZqbCwsNNetqr4qLxtz9fFvZM1flRPpe2qCYArLFLd
      enRXZU6GOo+YrPF9E+Tip38AaDRB7QLq0qWLMjMztWLFCuXk5Gjq1Kk/cGlLhW6P/JZkWVK5
      /+QzBW/JMa35MEtj/+NGhUsqKytTRkZGYNzn8/2r2wEA+JHqDUB+fr7Wrl2rwsJCTZkyRdXV
      1XrzzTd13333nfLyYZEt1WJfrvbnH9LetZnqckVzFR7MkR3TXlbxAXkrW6lLxxhJUmRkpFJS
      UgLXTU9Pb6DNAgDUp95dQG63W/n5+dq/f792796tjIwMXX311ad9F1B4q456+I6xenbO/Upr
      N0a3XdxOu99crj1FXrnDItVr2BC1DGfvPwA0tnoDEBsbq0mTJsnv9+uaa66RZVnKzc39gQPB
      LMX3GKTn/rpAj951jcJdHvWdfof6xDVTizZdNPnGEWrGB1AAQKML6qE4JydHvXr1UlRUlG69
      9Va9++679R4J7PK45eJVXgA4YwX1InD79u31zjvvaNGiRcrLy1NycjIHggFAExfUM4AOHTro
      lltuUWlpqbp37x7YFQQAaLqCCkB+fr4WLlyovXv3at++fVqyZAkfBgcATVxQAcjOzlbPnj3V
      tWtXXXHFFfryyy8JAAA0cUG/BrB8+XLl5uZq37596tu3L7uAAKCJC+oZQLt27XTLLbeoW7du
      uvDCCzV+/HgCAABNXFABOHjwoF588UVFRUXpyy+/1Jo1a9gFBABNXFC7gAoKCtS3b1+NHTtW
      Xq9XjzzyiC699FKn1wYAcFBQAYiJidEzzzyjXbt26eDBgyouLtaTTz6pqVOnqnnz5k6vEQDg
      gKAC0KJFC02ZMkVRUVHy+Xzas2ePunfv/oMfCw0AOLMF9RpAWVmZVqxYoS+//FLLli2TJPXo
      0UMeT1D9AACcgYIKQNu2bZWUlKT58+fr2LFjGjlypNPrAgA4LOgPgyspKdGHH36o8ePH6403
      3nB6XQAAh9UbgE8//VSxsbG67LLLVFVVpaFDh/IWUAD4Gag3ACtXrlRFRYXWrl0b+AiItLS0
      UKwNAOAgfjULABgqqLfxPP/888rIyFBMTIw2bdokv9/v9LoAAA77wQDYtq3Ro0crOztbKSkp
      Cg8Pl8vl4ihgAPgZqDcAzZo1U3l5uQ4fPqz4+HilpqYqISEhVOsDADjkBwPgcrnUu3dvde3a
      VeXl5crOztZbb72l1q1ba9KkSXK73aFaJwCggdX7GsA//vEPvf/++zp+/LhiYmJUWlqqoUOH
      yuXi9WMAaMrqDcCIESMUFxenLVu2aPLkySoqKtJLL70UirUBABxUbwDCw8MVGRmpvLw85eTk
      KCsri88AAoCfgaAeyXv06KExY8ZowYIFSkxM1IwZM/iNYADQxAW1I7+0tFSffPKJ/H6/ysrK
      9Pnnn/NxEADQxAUVgK+//lpxcXHq0qWLLr/8cr355psEAACauKB2AUVHRyszM1NlZWVyu93q
      0KEDu4AAoIkL6hlA+/btNWjQILVp00Yul0tTp04lAADQxAUVgOLiYq1fv15hYWFKTk6W1+t1
      el0AAIcF/RvBHnzwQSUmJuqee+7R66+/7vS6AAAOC+o1gLy8PL3wwgvyer2aPXu2LrjgAqfX
      BQBwWNABiI+P180338zn/wDAz0RQAYiKitLWrVv12muvqXnz5urUqZP69Onj9NoAAA4K6jWA
      Nm3aaMyYMWrevLlcLhcfBAcAPwNBPQOwbVs7duzQ1q1b1b17d0VFRcm2bd4KCgBNWFA/ymdl
      ZSk2NlapqakaPXq0PvroI44EBoAmLqhnADExMdqzZ49ycnJUVFSkzp0789M/ADRxQQWgY8eO
      GjdunLZs2aKIiAiNGjWKAABAExfULqCCggJ9/PHHio6O1sqVK7Vy5Up2AQFAExdUAHJychQR
      EaEtW7bo1ltv1datWwkAADRxQX8UxKFDhxQdHa0DBw4oOTmZt4ICQBMXdACGDBmis88+Wz6f
      TyNHjnR6XQAAhwX9NtBVq1apTZs2Kiws1NKlS9kFBABNXL0BKC4uVnZ2ttq2bat+/fpp6NCh
      KigoCMXaAAAOqvdtoJs2bdInn3yi/fv369ixYzp8+LD69evH20ABoImrNwD9+/dXRESEtm3b
      Jtu2NXjwYPXr1y8UawMAOKjeXUC7du3SokWLZFmWmjVrpqVLl2r79u0/eJ2q49maN2umHnjq
      /1Tq9wfOL8nfpXm33aYHnlmqY5X+H7gFAIDT/j9op87qnF9uYgAAAABJRU5ErkJggg==
    </thumbnail>
    <thumbnail height='356' name='CompareRetailers_subcat' width='384'>
      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
    </thumbnail>
    <thumbnail height='384' name='CompareRetailers_cat' width='384'>
      iVBORw0KGgoAAAANSUhEUgAAAYAAAAGACAYAAACkx7W/AAAACXBIWXMAAAsTAAALEwEAmpwY
      AAAgAElEQVR4nOzdd2Ac9Z338ffMzvYmrbTqxbJk2XLFNi7BGHAwvSR07siF9HCB54FQQiA8
      eS6F5FIu91wqIYSEXEhyBEIChBaaDRgwNsa9Y6t3aXub3ZnnD1kLBAwyiS2T+b7+Qt7Z3/5m
      JX6fmfk1xTRNEyGEEJajTnYFhBBCTA4JACGEsCgJACGEsCgJACGEsCgJACGEsCgJACGEsCgJ
      ACGEsCgJACGEsCgJACGEsCgJACGEsCgJACGEsCgJACGEsCgJACGEsCgJACGEsCgJACGEsCgJ
      ACGEsCgJACGEsCgJACGEsCgJACGEsCgJACGEsCgJACGEsCgJACGEsCgJACGEsCgJACGEsCgJ
      ACGEsCgJACGEsCgJACGEsCgJACGEsCgJACGEsCgJACGEsCgJACGEsCgJACGEsCgJACGEsCgJ
      ACGEsCgJACGEsCgJACGEsCgJACGEsCgJACGEsCgJACGEsCgJACGEsCgJACGEsCgJACGEsCgJ
      ACGEsCgJACGEsCgJACGEsCgJACGEsCgJACGEsCgJACGEsCgJACGEsCgJACGEsCgJACGEsCgJ
      ACGEsCgJACGEsCgJACGEsCgJACGEsCgJACGEsCgJACGEsCgJACGEsCgJACGEsCgJACGEsCgJ
      ACGEsCgJACGEsCgJACGEsCgJACGEsCgJACGEsCgJACGEsCgJACGEsCgJACGEsCgJACGEsCgJ
      ACGEsCgJACGEsCgJACGEsCgJACGEsCgJACGEsCgJACGEsCgJACGEsCgJACGEsChtsisghBBi
      YgqFAqZpYrPZMAyDPXv2oKoqdrudYDBIaWnpIZUnASCEEO8Tpmlimmbx52QyiaqqOJ1OvF7v
      IZcnASCEEEep8cZ+1apV3HHHHTQ0NBAOh6mvr8cwDK699lo0TcPr9bJy5UpOPfVUFi9eTDgc
      nlD5EgBCCHGUMk0TXdfJZrNkMhl8Ph9VVVXEYjGy2SwNDQ04HA5KSkpwuVwMDg6Sy+UmXL4E
      gBBCHKUKhQLDw8MMDg7S29vLzJkzOeecc7jmmmvo7e3lqquuwufz0dTUxOrVq3nkkUeYP38+
      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
      iMfjwel0snDhwuIihclkklAoxHHHHce8efOorKzEbrej6zotLS2Ul5cTjUbZunUrS5YsmfBn
      SQAIIcRRZHxyV1tbG7quMzQ0RG9vL8FgkLlz575paQ0YG201ZcoUHn/88eJWkRMlY6+EEOIo
      Nb4UxPiaQG/cFWxcKpVi7969ZDIZSktLD2lehQSAEEIcpcbnSJimia7rFAqFt8wFKBQKxc11
      HA7HIfUByDBQIYQ4yr366qs8/PDDrF69mh07dtDW1obL5SIWi5HNZolGo1x66aVcdtllVFZW
      4na7J1Su9AEIIcRRzuv1UltbS0tLCzabrdgJXFJSgmEYxeU1nE7nIc2qljsAIYR4nxgeHiaZ
      TLJjxw5yuRwVFRX4fD6am5ux2WyHvCmM3AEIIcT7hMvlQlVVGhsbyefz+P1+nE7nIe0B8EZy
      ByCEEBYlo4CEEMKiJACEEMKiJACEEMKiJACEEMKiJACEEMKiJACEEMKiJACEEMKiJACEEMKi
      JACEEMKiJACEEMKiJACEEMKiJACEEMKiJACEEMKiJACEEMKiJACEEMKiJACEEMKiJACEEMKi
      JACEEMKiJACEEMKiJACEEMKiJACEEMKiJACEEMKiJACEEMKiJACEEMKiJACEEMKiJACEEMKi
      JACEEMKiJACEEMKiJACEEMKiJACEEMKiJACEEMKiJACEEMKiJACEEMKiJACEEMKiJACEEMKi
      JACEEMKiJACEEMKiJACEEMKiJACEEMKiJACEEMKiJACEEMKiJACEEMKiJACEEMKiJACEEMKi
      JACEEMKiJACEEMKiJACEEMKiJACEEMKiJACEEMKiJACEEMKiJACEEMKiJACEEMKiJACEEMKi
      JACEEMKiJACEEMKiJACEEMKiJACEEMKiJACEEMKiJACEEMKiJACEEMKiJACEEMKiJACEEMKi
      JACEEMKiJACEEMKitPf6xu3bt5NIJP6edRFCCHEEvecAGBwcZHR09O9ZFyGEEEeQYpqm+V7e
      mM1mMQzj710fIYQQR8h7DgAhhBDvb9IJLIQQFiUBIIQQFiUBIIQQFiUBIIQQFiUBIIQQFiUB
      IIQQFiUBIIQQFvWeZwILIYT4263pXsNnn/jsYSm7OdjMHz/8x4O+LncAQghhURIAQghhUZP4
      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
    </thumbnail>
    <thumbnail height='384' name='Sellers analysis' width='384'>
      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
      6+0fGufkiAAAAABJRU5ErkJggg==
    </thumbnail>
  </thumbnails>
</workbook>
