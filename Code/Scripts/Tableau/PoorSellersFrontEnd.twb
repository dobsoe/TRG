<?xml version='1.0' encoding='utf-8' ?>

<workbook source-platform='mac' version='8.3' xmlns:user='http://www.tableausoftware.com/xml/user'>
  <!-- build 8200.14.0720.2105                                -->
  <preferences>
  </preferences>
  <style-theme name='modern' />
  <datasources>
    <datasource hasconnection='false' inline='true' name='Parameters' version='8.3'>
      <aliases enabled='yes' />
      <column caption='1' datatype='real' name='[Parameter 1]' param-domain-type='any' role='measure' type='quantitative' value='1.0'>
        <calculation class='tableau' formula='1.0' />
      </column>
      <column alias='Poor sellers' caption='Analysis' datatype='string' name='[Parameter 2]' param-domain-type='list' role='measure' type='nominal' value='&quot;worst&quot;'>
        <calculation class='tableau' formula='&quot;worst&quot;' />
        <aliases>
          <alias key='&quot;best&quot;' value='Best sellers' />
          <alias key='&quot;worst&quot;' value='Poor sellers' />
        </aliases>
        <members>
          <member alias='Best sellers' value='&quot;best&quot;' />
          <member alias='Poor sellers' value='&quot;worst&quot;' />
        </members>
      </column>
      <column caption='Low Stats' datatype='real' name='[Parameter 3]' param-domain-type='range' role='measure' type='quantitative' value='3.0'>
        <calculation class='tableau' formula='3.0' />
        <desc>
          <formatted-text>
            <run>Threshold at which stats are too low to calculate ratio</run>
          </formatted-text>
        </desc>
        <range granularity='1.0' max='10.0' min='1.0' />
      </column>
    </datasource>
    <datasource caption='extremesellers (ds.extremesellers) (demo)' inline='true' name='greenplum.41863.764809224500' version='8.3'>
      <connection class='greenplum' dbname='demo' expected-driver-version='PostgreSQL Unicode' odbc-native-protocol='yes' port='9999' server='localhost' username='gpadmin'>
        <relation name='extremesellers' table='[ds].[extremesellers]' type='table' />
        <metadata-records>
          <metadata-record class='column'>
            <remote-name>json_productkey</remote-name>
            <remote-type>130</remote-type>
            <local-name>[json_productkey]</local-name>
            <parent-name>[extremesellers]</parent-name>
            <remote-alias>json_productkey</remote-alias>
            <ordinal>1</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <width>255</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_WVARCHAR&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_WCHAR&quot;</attribute>
              <attribute datatype='string' name='TypeIsVarchar'>&quot;true&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>latest_batch_date</remote-name>
            <remote-type>7</remote-type>
            <local-name>[latest_batch_date]</local-name>
            <parent-name>[extremesellers]</parent-name>
            <remote-alias>latest_batch_date</remote-alias>
            <ordinal>2</ordinal>
            <local-type>date</local-type>
            <aggregation>Year</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_TYPE_DATE&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_TYPE_DATE&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>category</remote-name>
            <remote-type>130</remote-type>
            <local-name>[category]</local-name>
            <parent-name>[extremesellers]</parent-name>
            <remote-alias>category</remote-alias>
            <ordinal>3</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <width>8190</width>
            <contains-null>true</contains-null>
            <cast-to-local-type>true</cast-to-local-type>
            <collation flag='0' name='LEN_RUS' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_WLONGVARCHAR&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_WCHAR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>subcategory</remote-name>
            <remote-type>130</remote-type>
            <local-name>[subcategory]</local-name>
            <parent-name>[extremesellers]</parent-name>
            <remote-alias>subcategory</remote-alias>
            <ordinal>4</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <width>8190</width>
            <contains-null>true</contains-null>
            <cast-to-local-type>true</cast-to-local-type>
            <collation flag='0' name='LEN_RUS' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_WLONGVARCHAR&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_WCHAR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>retailername</remote-name>
            <remote-type>130</remote-type>
            <local-name>[retailername]</local-name>
            <parent-name>[extremesellers]</parent-name>
            <remote-alias>retailername</remote-alias>
            <ordinal>5</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <width>8190</width>
            <contains-null>true</contains-null>
            <cast-to-local-type>true</cast-to-local-type>
            <collation flag='0' name='LEN_RUS' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_WLONGVARCHAR&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_WCHAR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>facetbrand</remote-name>
            <remote-type>130</remote-type>
            <local-name>[facetbrand]</local-name>
            <parent-name>[extremesellers]</parent-name>
            <remote-alias>facetbrand</remote-alias>
            <ordinal>6</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <width>8190</width>
            <contains-null>true</contains-null>
            <cast-to-local-type>true</cast-to-local-type>
            <collation flag='0' name='LEN_RUS' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_WLONGVARCHAR&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_WCHAR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>taxonomiccolour</remote-name>
            <remote-type>130</remote-type>
            <local-name>[taxonomiccolour]</local-name>
            <parent-name>[extremesellers]</parent-name>
            <remote-alias>taxonomiccolour</remote-alias>
            <ordinal>7</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <width>8190</width>
            <contains-null>true</contains-null>
            <cast-to-local-type>true</cast-to-local-type>
            <collation flag='0' name='LEN_RUS' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_WLONGVARCHAR&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_WCHAR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>country</remote-name>
            <remote-type>130</remote-type>
            <local-name>[country]</local-name>
            <parent-name>[extremesellers]</parent-name>
            <remote-alias>country</remote-alias>
            <ordinal>8</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <width>8190</width>
            <contains-null>true</contains-null>
            <cast-to-local-type>true</cast-to-local-type>
            <collation flag='0' name='LEN_RUS' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_WLONGVARCHAR&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_WCHAR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>price_currentdaymode</remote-name>
            <remote-type>5</remote-type>
            <local-name>[price_currentdaymode]</local-name>
            <parent-name>[extremesellers]</parent-name>
            <remote-alias>price_currentdaymode</remote-alias>
            <ordinal>9</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_FLOAT&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_DOUBLE&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>sellers</remote-name>
            <remote-type>130</remote-type>
            <local-name>[sellers]</local-name>
            <parent-name>[extremesellers]</parent-name>
            <remote-alias>sellers</remote-alias>
            <ordinal>10</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <width>8190</width>
            <contains-null>true</contains-null>
            <cast-to-local-type>true</cast-to-local-type>
            <collation flag='0' name='LEN_RUS' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_WLONGVARCHAR&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_WCHAR&quot;</attribute>
            </attributes>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column caption='NormalisedRatio' datatype='real' name='[Calculation_1730812182851096]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='if ([Calculation_5270812182716952 1]&gt;[Parameters].[Parameter 3]) then [Calculation_8450812182825530]/[Calculation_5270812182716952] else -0.01 end' scope-isolation='false'>
          <table-calc ordering-type='Rows' />
        </calculation>
      </column>
      <column caption='ColourField' datatype='string' name='[Calculation_2730813141847173]' role='measure' type='nominal'>
        <calculation class='tableau' formula='if [Calculation_1730812182851096]&gt;1 then &quot;Over-represented&quot; elseif [Calculation_1730812182851096]&lt;0 then &quot;Stats too low&quot; else &quot;Under-represented&quot; end' scope-isolation='false'>
          <table-calc ordering-type='Rows' />
        </calculation>
      </column>
      <column caption='Count in all' datatype='integer' name='[Calculation_5270812182716952 1 1]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='sum(1)' scope-isolation='false' />
      </column>
      <column caption='Count in extreme sellers' datatype='integer' name='[Calculation_5270812182716952 1]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='sum(if [sellers] = [Parameters].[Parameter 2] then 1 else 0 end)' scope-isolation='false' />
      </column>
      <column caption='Ratio in all' datatype='real' name='[Calculation_5270812182716952]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='[Calculation_5270812182716952 1 1]/Total([Calculation_5270812182716952 1 1])' scope-isolation='false'>
          <table-calc ordering-type='Rows' />
        </calculation>
      </column>
      <column caption='Ratio in extreme sellers' datatype='real' name='[Calculation_8450812182825530]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='[Calculation_5270812182716952 1]/Total([Calculation_5270812182716952 1])' scope-isolation='false'>
          <table-calc ordering-type='Rows' />
        </calculation>
      </column>
      <column datatype='integer' name='[Number of Records]' role='measure' type='quantitative' user:auto-column='numrec'>
        <calculation class='tableau' formula='1' />
      </column>
      <column caption='Category' datatype='string' name='[category]' role='dimension' type='nominal'>
      </column>
      <column caption='Country' datatype='string' name='[country]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal'>
      </column>
      <column caption='Facetbrand' datatype='string' name='[facetbrand]' role='dimension' type='nominal'>
      </column>
      <column caption='Json Productkey' datatype='string' name='[json_productkey]' role='dimension' type='nominal'>
      </column>
      <column caption='Price Currentdaymode' datatype='real' name='[price_currentdaymode]' role='measure' type='quantitative'>
      </column>
      <column caption='Retailername' datatype='string' name='[retailername]' role='dimension' type='nominal'>
      </column>
      <column caption='Sellers' datatype='string' name='[sellers]' role='dimension' type='nominal'>
      </column>
      <column caption='Subcategory' datatype='string' name='[subcategory]' role='dimension' type='nominal'>
      </column>
      <column caption='Taxonomiccolour' datatype='string' name='[taxonomiccolour]' role='dimension' type='nominal'>
      </column>
      <column-instance column='[facetbrand]' derivation='None' name='[none:facetbrand:nk]' pivot='key' type='nominal' />
      <column-instance column='[subcategory]' derivation='None' name='[none:subcategory:nk]' pivot='key' type='nominal' />
      <column-instance column='[Calculation_2730813141847173]' derivation='User' name='[usr:Calculation_2730813141847173:nk:1]' pivot='key' type='nominal'>
        <table-calc ordering-type='Rows' />
        <table-calc field='[greenplum.41863.764809224500].[Calculation_1730812182851096]' ordering-type='Rows' />
        <table-calc field='[greenplum.41863.764809224500].[Calculation_8450812182825530]' ordering-type='Rows' />
        <table-calc field='[greenplum.41863.764809224500].[Calculation_5270812182716952]' ordering-type='Rows' />
      </column-instance>
      <layout dim-ordering='alphabetic' dim-percentage='0.5' measure-ordering='alphabetic' measure-percentage='0.4' show-structure='true' />
      <style>
        <style-rule element='mark'>
          <encoding attr='color' field='[none:subcategory:nk]' type='palette'>
            <map to='#17becf'>
              <bucket>&quot;party dress&quot;</bucket>
            </map>
            <map to='#1f77b4'>
              <bucket>&quot;midi dress&quot;</bucket>
            </map>
            <map to='#1f77b4'>
              <bucket>&quot;unclassified&quot;</bucket>
            </map>
            <map to='#2ca02c'>
              <bucket>&quot;shift dress&quot;</bucket>
            </map>
            <map to='#7f7f7f'>
              <bucket>&quot;mini dress&quot;</bucket>
            </map>
            <map to='#8c564b'>
              <bucket>&quot;prom dress&quot;</bucket>
            </map>
            <map to='#9467bd'>
              <bucket>&quot;sheath dress&quot;</bucket>
            </map>
            <map to='#98df8a'>
              <bucket>&quot;slip dress&quot;</bucket>
            </map>
            <map to='#9edae5'>
              <bucket>&quot;fit &amp; flare dress&quot;</bucket>
            </map>
            <map to='#aec7e8'>
              <bucket>&quot;pinafore dress&quot;</bucket>
            </map>
            <map to='#bcbd22'>
              <bucket>&quot;lace dress&quot;</bucket>
            </map>
            <map to='#c49c94'>
              <bucket>&quot;smock dress&quot;</bucket>
            </map>
            <map to='#c5b0d5'>
              <bucket>&quot;bodycon dress&quot;</bucket>
            </map>
            <map to='#c7c7c7'>
              <bucket>&quot;strapless dress&quot;</bucket>
            </map>
            <map to='#d62728'>
              <bucket>&quot;wrap&quot;</bucket>
            </map>
            <map to='#dbdb8d'>
              <bucket>&quot;maxi dress&quot;</bucket>
            </map>
            <map to='#e377c2'>
              <bucket>&quot;tank dress&quot;</bucket>
            </map>
            <map to='#f7b6d2'>
              <bucket>&quot;skater dress&quot;</bucket>
            </map>
            <map to='#ff7f0e'>
              <bucket>&quot;t-shirt dress&quot;</bucket>
            </map>
            <map to='#ff9896'>
              <bucket>&quot;sweater &amp; jumper dress&quot;</bucket>
            </map>
            <map to='#ffbb78'>
              <bucket>&quot;shirt dress&quot;</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[none:facetbrand:nk]' type='palette'>
            <map to='#17becf'>
              <bucket>&quot;alexander wang&quot;</bucket>
            </map>
            <map to='#17becf'>
              <bucket>&quot;attention&quot;</bucket>
            </map>
            <map to='#17becf'>
              <bucket>&quot;bcbgmaxazria&quot;</bucket>
            </map>
            <map to='#17becf'>
              <bucket>&quot;c&amp;c california&quot;</bucket>
            </map>
            <map to='#17becf'>
              <bucket>&quot;christophe lemaire&quot;</bucket>
            </map>
            <map to='#17becf'>
              <bucket>&quot;club l&quot;</bucket>
            </map>
            <map to='#17becf'>
              <bucket>&quot;dotti&quot;</bucket>
            </map>
            <map to='#17becf'>
              <bucket>&quot;dr denim&quot;</bucket>
            </map>
            <map to='#17becf'>
              <bucket>&quot;esprit&quot;</bucket>
            </map>
            <map to='#17becf'>
              <bucket>&quot;fleur wood&quot;</bucket>
            </map>
            <map to='#17becf'>
              <bucket>&quot;heart n soul&quot;</bucket>
            </map>
            <map to='#17becf'>
              <bucket>&quot;joe&apos;s&quot;</bucket>
            </map>
            <map to='#17becf'>
              <bucket>&quot;love&quot;</bucket>
            </map>
            <map to='#17becf'>
              <bucket>&quot;love zooey&quot;</bucket>
            </map>
            <map to='#17becf'>
              <bucket>&quot;lucca couture&quot;</bucket>
            </map>
            <map to='#17becf'>
              <bucket>&quot;marc jacobs&quot;</bucket>
            </map>
            <map to='#17becf'>
              <bucket>&quot;maxmara&quot;</bucket>
            </map>
            <map to='#17becf'>
              <bucket>&quot;numph&quot;</bucket>
            </map>
            <map to='#17becf'>
              <bucket>&quot;olsenboye&quot;</bucket>
            </map>
            <map to='#17becf'>
              <bucket>&quot;sparkle &amp; fade&quot;</bucket>
            </map>
            <map to='#17becf'>
              <bucket>&quot;splendid&quot;</bucket>
            </map>
            <map to='#17becf'>
              <bucket>&quot;t by alexander wang&quot;</bucket>
            </map>
            <map to='#17becf'>
              <bucket>&quot;topshop&quot;</bucket>
            </map>
            <map to='#17becf'>
              <bucket>&quot;u.s. polo assn.&quot;</bucket>
            </map>
            <map to='#17becf'>
              <bucket>&quot;victoria victoria beckham&quot;</bucket>
            </map>
            <map to='#17becf'>
              <bucket>&quot;weavers&quot;</bucket>
            </map>
            <map to='#1f77b4'>
              <bucket>&quot;12th street by cynthia vincent&quot;</bucket>
            </map>
            <map to='#1f77b4'>
              <bucket>&quot;ali ro&quot;</bucket>
            </map>
            <map to='#1f77b4'>
              <bucket>&quot;bolzoni &amp; walsh&quot;</bucket>
            </map>
            <map to='#1f77b4'>
              <bucket>&quot;carven&quot;</bucket>
            </map>
            <map to='#1f77b4'>
              <bucket>&quot;catherine malandrino&quot;</bucket>
            </map>
            <map to='#1f77b4'>
              <bucket>&quot;city chic&quot;</bucket>
            </map>
            <map to='#1f77b4'>
              <bucket>&quot;creatures of the wind&quot;</bucket>
            </map>
            <map to='#1f77b4'>
              <bucket>&quot;damsel in a dress&quot;</bucket>
            </map>
            <map to='#1f77b4'>
              <bucket>&quot;eileen fisher plus&quot;</bucket>
            </map>
            <map to='#1f77b4'>
              <bucket>&quot;fashion star&quot;</bucket>
            </map>
            <map to='#1f77b4'>
              <bucket>&quot;fred perry&quot;</bucket>
            </map>
            <map to='#1f77b4'>
              <bucket>&quot;greylin&quot;</bucket>
            </map>
            <map to='#1f77b4'>
              <bucket>&quot;josie natori&quot;</bucket>
            </map>
            <map to='#1f77b4'>
              <bucket>&quot;jovonnista&quot;</bucket>
            </map>
            <map to='#1f77b4'>
              <bucket>&quot;kimchi blue&quot;</bucket>
            </map>
            <map to='#1f77b4'>
              <bucket>&quot;luxology&quot;</bucket>
            </map>
            <map to='#1f77b4'>
              <bucket>&quot;magaschoni&quot;</bucket>
            </map>
            <map to='#1f77b4'>
              <bucket>&quot;mih jeans&quot;</bucket>
            </map>
            <map to='#1f77b4'>
              <bucket>&quot;nina ricci&quot;</bucket>
            </map>
            <map to='#1f77b4'>
              <bucket>&quot;oak&quot;</bucket>
            </map>
            <map to='#1f77b4'>
              <bucket>&quot;people tree&quot;</bucket>
            </map>
            <map to='#1f77b4'>
              <bucket>&quot;rachel rachel roy&quot;</bucket>
            </map>
            <map to='#1f77b4'>
              <bucket>&quot;rickie freeman for teri jon&quot;</bucket>
            </map>
            <map to='#1f77b4'>
              <bucket>&quot;stella mccartney&quot;</bucket>
            </map>
            <map to='#1f77b4'>
              <bucket>&quot;tfnc&quot;</bucket>
            </map>
            <map to='#1f77b4'>
              <bucket>&quot;tommy hilfiger&quot;</bucket>
            </map>
            <map to='#1f77b4'>
              <bucket>&quot;vix&quot;</bucket>
            </map>
            <map to='#1f77b4'>
              <bucket>&quot;yumi london&quot;</bucket>
            </map>
            <map to='#2ca02c'>
              <bucket>&quot;a.n.a&quot;</bucket>
            </map>
            <map to='#2ca02c'>
              <bucket>&quot;alice &amp; you&quot;</bucket>
            </map>
            <map to='#2ca02c'>
              <bucket>&quot;ax paris&quot;</bucket>
            </map>
            <map to='#2ca02c'>
              <bucket>&quot;charlotterusse&quot;</bucket>
            </map>
            <map to='#2ca02c'>
              <bucket>&quot;daisy fuentes&quot;</bucket>
            </map>
            <map to='#2ca02c'>
              <bucket>&quot;derek lam&quot;</bucket>
            </map>
            <map to='#2ca02c'>
              <bucket>&quot;french connection&quot;</bucket>
            </map>
            <map to='#2ca02c'>
              <bucket>&quot;gloria vanderbilt&quot;</bucket>
            </map>
            <map to='#2ca02c'>
              <bucket>&quot;goldie&quot;</bucket>
            </map>
            <map to='#2ca02c'>
              <bucket>&quot;iska&quot;</bucket>
            </map>
            <map to='#2ca02c'>
              <bucket>&quot;ivy &amp; blu&quot;</bucket>
            </map>
            <map to='#2ca02c'>
              <bucket>&quot;jessica howard&quot;</bucket>
            </map>
            <map to='#2ca02c'>
              <bucket>&quot;jigsaw&quot;</bucket>
            </map>
            <map to='#2ca02c'>
              <bucket>&quot;johnny was&quot;</bucket>
            </map>
            <map to='#2ca02c'>
              <bucket>&quot;label by five twelve&quot;</bucket>
            </map>
            <map to='#2ca02c'>
              <bucket>&quot;marni&quot;</bucket>
            </map>
            <map to='#2ca02c'>
              <bucket>&quot;martin grant&quot;</bucket>
            </map>
            <map to='#2ca02c'>
              <bucket>&quot;moda&quot;</bucket>
            </map>
            <map to='#2ca02c'>
              <bucket>&quot;ny collection&quot;</bucket>
            </map>
            <map to='#2ca02c'>
              <bucket>&quot;pins and needles&quot;</bucket>
            </map>
            <map to='#2ca02c'>
              <bucket>&quot;rachel roy&quot;</bucket>
            </map>
            <map to='#2ca02c'>
              <bucket>&quot;sacai&quot;</bucket>
            </map>
            <map to='#2ca02c'>
              <bucket>&quot;sharagano&quot;</bucket>
            </map>
            <map to='#2ca02c'>
              <bucket>&quot;sofia by vix&quot;</bucket>
            </map>
            <map to='#2ca02c'>
              <bucket>&quot;tahari by asl&quot;</bucket>
            </map>
            <map to='#2ca02c'>
              <bucket>&quot;the ragged priest&quot;</bucket>
            </map>
            <map to='#2ca02c'>
              <bucket>&quot;traffic people&quot;</bucket>
            </map>
            <map to='#2ca02c'>
              <bucket>&quot;unique&quot;</bucket>
            </map>
            <map to='#2ca02c'>
              <bucket>&quot;xhilaration&quot;</bucket>
            </map>
            <map to='#7f7f7f'>
              <bucket>&quot;10 crosby derek lam&quot;</bucket>
            </map>
            <map to='#7f7f7f'>
              <bucket>&quot;alice &amp; olivia&quot;</bucket>
            </map>
            <map to='#7f7f7f'>
              <bucket>&quot;be bop&quot;</bucket>
            </map>
            <map to='#7f7f7f'>
              <bucket>&quot;beloved&quot;</bucket>
            </map>
            <map to='#7f7f7f'>
              <bucket>&quot;cooperative&quot;</bucket>
            </map>
            <map to='#7f7f7f'>
              <bucket>&quot;cusp by neiman marcus&quot;</bucket>
            </map>
            <map to='#7f7f7f'>
              <bucket>&quot;diesel&quot;</bucket>
            </map>
            <map to='#7f7f7f'>
              <bucket>&quot;eci&quot;</bucket>
            </map>
            <map to='#7f7f7f'>
              <bucket>&quot;escada&quot;</bucket>
            </map>
            <map to='#7f7f7f'>
              <bucket>&quot;foxcroft&quot;</bucket>
            </map>
            <map to='#7f7f7f'>
              <bucket>&quot;jil sander&quot;</bucket>
            </map>
            <map to='#7f7f7f'>
              <bucket>&quot;kamalikulture&quot;</bucket>
            </map>
            <map to='#7f7f7f'>
              <bucket>&quot;lily rose&quot;</bucket>
            </map>
            <map to='#7f7f7f'>
              <bucket>&quot;lipsy&quot;</bucket>
            </map>
            <map to='#7f7f7f'>
              <bucket>&quot;maison jules&quot;</bucket>
            </map>
            <map to='#7f7f7f'>
              <bucket>&quot;maiyet&quot;</bucket>
            </map>
            <map to='#7f7f7f'>
              <bucket>&quot;muse&quot;</bucket>
            </map>
            <map to='#7f7f7f'>
              <bucket>&quot;muubaa&quot;</bucket>
            </map>
            <map to='#7f7f7f'>
              <bucket>&quot;peter pilotto&quot;</bucket>
            </map>
            <map to='#7f7f7f'>
              <bucket>&quot;route 66&quot;</bucket>
            </map>
            <map to='#7f7f7f'>
              <bucket>&quot;see by chloãžã‡ãžâ_&quot;</bucket>
            </map>
            <map to='#7f7f7f'>
              <bucket>&quot;sejour&quot;</bucket>
            </map>
            <map to='#7f7f7f'>
              <bucket>&quot;soft joie&quot;</bucket>
            </map>
            <map to='#7f7f7f'>
              <bucket>&quot;striders edge&quot;</bucket>
            </map>
            <map to='#7f7f7f'>
              <bucket>&quot;sugarhill boutique&quot;</bucket>
            </map>
            <map to='#7f7f7f'>
              <bucket>&quot;vanessa virginia&quot;</bucket>
            </map>
            <map to='#7f7f7f'>
              <bucket>&quot;velvet heartãžâãžâ_&quot;</bucket>
            </map>
            <map to='#8c564b'>
              <bucket>&quot;alternative&quot;</bucket>
            </map>
            <map to='#8c564b'>
              <bucket>&quot;bcbg&quot;</bucket>
            </map>
            <map to='#8c564b'>
              <bucket>&quot;boutique&quot;</bucket>
            </map>
            <map to='#8c564b'>
              <bucket>&quot;by zoãžã‡ãžâ_&quot;</bucket>
            </map>
            <map to='#8c564b'>
              <bucket>&quot;dolan&quot;</bucket>
            </map>
            <map to='#8c564b'>
              <bucket>&quot;ellen tracy&quot;</bucket>
            </map>
            <map to='#8c564b'>
              <bucket>&quot;emilio pucci&quot;</bucket>
            </map>
            <map to='#8c564b'>
              <bucket>&quot;go silk&quot;</bucket>
            </map>
            <map to='#8c564b'>
              <bucket>&quot;helmut lang&quot;</bucket>
            </map>
            <map to='#8c564b'>
              <bucket>&quot;house of holland&quot;</bucket>
            </map>
            <map to='#8c564b'>
              <bucket>&quot;kenzo&quot;</bucket>
            </map>
            <map to='#8c564b'>
              <bucket>&quot;l&apos;amour&quot;</bucket>
            </map>
            <map to='#8c564b'>
              <bucket>&quot;laundry by shelli segal&quot;</bucket>
            </map>
            <map to='#8c564b'>
              <bucket>&quot;lilly pulitzer¨&quot;</bucket>
            </map>
            <map to='#8c564b'>
              <bucket>&quot;miss tina&quot;</bucket>
            </map>
            <map to='#8c564b'>
              <bucket>&quot;missoni&quot;</bucket>
            </map>
            <map to='#8c564b'>
              <bucket>&quot;moschino&quot;</bucket>
            </map>
            <map to='#8c564b'>
              <bucket>&quot;new look&quot;</bucket>
            </map>
            <map to='#8c564b'>
              <bucket>&quot;Not found&quot;</bucket>
            </map>
            <map to='#8c564b'>
              <bucket>&quot;pink tartan&quot;</bucket>
            </map>
            <map to='#8c564b'>
              <bucket>&quot;presley skye&quot;</bucket>
            </map>
            <map to='#8c564b'>
              <bucket>&quot;river island&quot;</bucket>
            </map>
            <map to='#8c564b'>
              <bucket>&quot;the row&quot;</bucket>
            </map>
            <map to='#8c564b'>
              <bucket>&quot;the whitepepper&quot;</bucket>
            </map>
            <map to='#8c564b'>
              <bucket>&quot;three dots plus&quot;</bucket>
            </map>
            <map to='#8c564b'>
              <bucket>&quot;tsumori chisato&quot;</bucket>
            </map>
            <map to='#8c564b'>
              <bucket>&quot;yumi&quot;</bucket>
            </map>
            <map to='#9467bd'>
              <bucket>&quot;3.1 phillip lim&quot;</bucket>
            </map>
            <map to='#9467bd'>
              <bucket>&quot;akris&quot;</bucket>
            </map>
            <map to='#9467bd'>
              <bucket>&quot;as u wish&quot;</bucket>
            </map>
            <map to='#9467bd'>
              <bucket>&quot;bongo&quot;</bucket>
            </map>
            <map to='#9467bd'>
              <bucket>&quot;cope&quot;</bucket>
            </map>
            <map to='#9467bd'>
              <bucket>&quot;diesel¨&quot;</bucket>
            </map>
            <map to='#9467bd'>
              <bucket>&quot;eight sixty&quot;</bucket>
            </map>
            <map to='#9467bd'>
              <bucket>&quot;halo&quot;</bucket>
            </map>
            <map to='#9467bd'>
              <bucket>&quot;heartloom&quot;</bucket>
            </map>
            <map to='#9467bd'>
              <bucket>&quot;joyrich&quot;</bucket>
            </map>
            <map to='#9467bd'>
              <bucket>&quot;kardashian kollection&quot;</bucket>
            </map>
            <map to='#9467bd'>
              <bucket>&quot;la cera&quot;</bucket>
            </map>
            <map to='#9467bd'>
              <bucket>&quot;le ciel&quot;</bucket>
            </map>
            <map to='#9467bd'>
              <bucket>&quot;love21&quot;</bucket>
            </map>
            <map to='#9467bd'>
              <bucket>&quot;lucabella&quot;</bucket>
            </map>
            <map to='#9467bd'>
              <bucket>&quot;maeve&quot;</bucket>
            </map>
            <map to='#9467bd'>
              <bucket>&quot;mango&quot;</bucket>
            </map>
            <map to='#9467bd'>
              <bucket>&quot;michael van der ham&quot;</bucket>
            </map>
            <map to='#9467bd'>
              <bucket>&quot;nonoo&quot;</bucket>
            </map>
            <map to='#9467bd'>
              <bucket>&quot;oasis&quot;</bucket>
            </map>
            <map to='#9467bd'>
              <bucket>&quot;reiss&quot;</bucket>
            </map>
            <map to='#9467bd'>
              <bucket>&quot;rewind&quot;</bucket>
            </map>
            <map to='#9467bd'>
              <bucket>&quot;selected&quot;</bucket>
            </map>
            <map to='#9467bd'>
              <bucket>&quot;simply vera vera wang&quot;</bucket>
            </map>
            <map to='#9467bd'>
              <bucket>&quot;the odells&quot;</bucket>
            </map>
            <map to='#9467bd'>
              <bucket>&quot;troubadour&quot;</bucket>
            </map>
            <map to='#9467bd'>
              <bucket>&quot;won hundred&quot;</bucket>
            </map>
            <map to='#98df8a'>
              <bucket>&quot;acne studios&quot;</bucket>
            </map>
            <map to='#98df8a'>
              <bucket>&quot;band of outsiders&quot;</bucket>
            </map>
            <map to='#98df8a'>
              <bucket>&quot;collective concepts&quot;</bucket>
            </map>
            <map to='#98df8a'>
              <bucket>&quot;comme des garons&quot;</bucket>
            </map>
            <map to='#98df8a'>
              <bucket>&quot;dieselãžâãžâ_å â€”â¾â€™_&quot;</bucket>
            </map>
            <map to='#98df8a'>
              <bucket>&quot;dream out loud by selena gomez&quot;</bucket>
            </map>
            <map to='#98df8a'>
              <bucket>&quot;ganni&quot;</bucket>
            </map>
            <map to='#98df8a'>
              <bucket>&quot;gottex&quot;</bucket>
            </map>
            <map to='#98df8a'>
              <bucket>&quot;jessica simpson&quot;</bucket>
            </map>
            <map to='#98df8a'>
              <bucket>&quot;jonathan simkhai&quot;</bucket>
            </map>
            <map to='#98df8a'>
              <bucket>&quot;jovonista&quot;</bucket>
            </map>
            <map to='#98df8a'>
              <bucket>&quot;kaliko&quot;</bucket>
            </map>
            <map to='#98df8a'>
              <bucket>&quot;lacoste&quot;</bucket>
            </map>
            <map to='#98df8a'>
              <bucket>&quot;maison scotch&quot;</bucket>
            </map>
            <map to='#98df8a'>
              <bucket>&quot;mcginn&quot;</bucket>
            </map>
            <map to='#98df8a'>
              <bucket>&quot;mcq alexander mcqueen&quot;</bucket>
            </map>
            <map to='#98df8a'>
              <bucket>&quot;michael kors&quot;</bucket>
            </map>
            <map to='#98df8a'>
              <bucket>&quot;nanette lepore&quot;</bucket>
            </map>
            <map to='#98df8a'>
              <bucket>&quot;opening ceremony&quot;</bucket>
            </map>
            <map to='#98df8a'>
              <bucket>&quot;paige&quot;</bucket>
            </map>
            <map to='#98df8a'>
              <bucket>&quot;rachel zoe&quot;</bucket>
            </map>
            <map to='#98df8a'>
              <bucket>&quot;robert rodriguez&quot;</bucket>
            </map>
            <map to='#98df8a'>
              <bucket>&quot;speechless&quot;</bucket>
            </map>
            <map to='#98df8a'>
              <bucket>&quot;tamara mellon&quot;</bucket>
            </map>
            <map to='#98df8a'>
              <bucket>&quot;theory&quot;</bucket>
            </map>
            <map to='#98df8a'>
              <bucket>&quot;thom browne&quot;</bucket>
            </map>
            <map to='#98df8a'>
              <bucket>&quot;tylho&quot;</bucket>
            </map>
            <map to='#98df8a'>
              <bucket>&quot;volume one&quot;</bucket>
            </map>
            <map to='#9edae5'>
              <bucket>&quot;212 collection&quot;</bucket>
            </map>
            <map to='#9edae5'>
              <bucket>&quot;antipodium&quot;</bucket>
            </map>
            <map to='#9edae5'>
              <bucket>&quot;bcx&quot;</bucket>
            </map>
            <map to='#9edae5'>
              <bucket>&quot;bisou bisou&quot;</bucket>
            </map>
            <map to='#9edae5'>
              <bucket>&quot;christopher kane&quot;</bucket>
            </map>
            <map to='#9edae5'>
              <bucket>&quot;cluny&quot;</bucket>
            </map>
            <map to='#9edae5'>
              <bucket>&quot;eileen fisher&quot;</bucket>
            </map>
            <map to='#9edae5'>
              <bucket>&quot;evil twin&quot;</bucket>
            </map>
            <map to='#9edae5'>
              <bucket>&quot;f21&quot;</bucket>
            </map>
            <map to='#9edae5'>
              <bucket>&quot;g-star&quot;</bucket>
            </map>
            <map to='#9edae5'>
              <bucket>&quot;hurley&quot;</bucket>
            </map>
            <map to='#9edae5'>
              <bucket>&quot;jones new york collection&quot;</bucket>
            </map>
            <map to='#9edae5'>
              <bucket>&quot;lucky brand&quot;</bucket>
            </map>
            <map to='#9edae5'>
              <bucket>&quot;madison leigh&quot;</bucket>
            </map>
            <map to='#9edae5'>
              <bucket>&quot;mara hoffman&quot;</bucket>
            </map>
            <map to='#9edae5'>
              <bucket>&quot;michael michael kors plus&quot;</bucket>
            </map>
            <map to='#9edae5'>
              <bucket>&quot;no boundaries&quot;</bucket>
            </map>
            <map to='#9edae5'>
              <bucket>&quot;paul &amp; joe&quot;</bucket>
            </map>
            <map to='#9edae5'>
              <bucket>&quot;see by chloe&quot;</bucket>
            </map>
            <map to='#9edae5'>
              <bucket>&quot;staring at stars&quot;</bucket>
            </map>
            <map to='#9edae5'>
              <bucket>&quot;tahari&quot;</bucket>
            </map>
            <map to='#9edae5'>
              <bucket>&quot;tahari by asl petite&quot;</bucket>
            </map>
            <map to='#9edae5'>
              <bucket>&quot;tory burch&quot;</bucket>
            </map>
            <map to='#9edae5'>
              <bucket>&quot;valentino&quot;</bucket>
            </map>
            <map to='#9edae5'>
              <bucket>&quot;vivienne westwood&quot;</bucket>
            </map>
            <map to='#9edae5'>
              <bucket>&quot;weekend max mara&quot;</bucket>
            </map>
            <map to='#aec7e8'>
              <bucket>&quot;18 and east&quot;</bucket>
            </map>
            <map to='#aec7e8'>
              <bucket>&quot;3.1 phillip lim for target&quot;</bucket>
            </map>
            <map to='#aec7e8'>
              <bucket>&quot;amanda lane&quot;</bucket>
            </map>
            <map to='#aec7e8'>
              <bucket>&quot;bzr&quot;</bucket>
            </map>
            <map to='#aec7e8'>
              <bucket>&quot;calvin klein&quot;</bucket>
            </map>
            <map to='#aec7e8'>
              <bucket>&quot;cloth &amp; stone&quot;</bucket>
            </map>
            <map to='#aec7e8'>
              <bucket>&quot;current elliott&quot;</bucket>
            </map>
            <map to='#aec7e8'>
              <bucket>&quot;d.ra&quot;</bucket>
            </map>
            <map to='#aec7e8'>
              <bucket>&quot;daniel rainn&quot;</bucket>
            </map>
            <map to='#aec7e8'>
              <bucket>&quot;east&quot;</bucket>
            </map>
            <map to='#aec7e8'>
              <bucket>&quot;gucci&quot;</bucket>
            </map>
            <map to='#aec7e8'>
              <bucket>&quot;holding horses&quot;</bucket>
            </map>
            <map to='#aec7e8'>
              <bucket>&quot;iro&quot;</bucket>
            </map>
            <map to='#aec7e8'>
              <bucket>&quot;james perse&quot;</bucket>
            </map>
            <map to='#aec7e8'>
              <bucket>&quot;jones new york sport&quot;</bucket>
            </map>
            <map to='#aec7e8'>
              <bucket>&quot;lowie&quot;</bucket>
            </map>
            <map to='#aec7e8'>
              <bucket>&quot;maggy london&quot;</bucket>
            </map>
            <map to='#aec7e8'>
              <bucket>&quot;michael stars&quot;</bucket>
            </map>
            <map to='#aec7e8'>
              <bucket>&quot;mink pink&quot;</bucket>
            </map>
            <map to='#aec7e8'>
              <bucket>&quot;oh my love&quot;</bucket>
            </map>
            <map to='#aec7e8'>
              <bucket>&quot;olive &amp; oak&quot;</bucket>
            </map>
            <map to='#aec7e8'>
              <bucket>&quot;philosophy&quot;</bucket>
            </map>
            <map to='#aec7e8'>
              <bucket>&quot;ralph lauren&quot;</bucket>
            </map>
            <map to='#aec7e8'>
              <bucket>&quot;rebecca taylor&quot;</bucket>
            </map>
            <map to='#aec7e8'>
              <bucket>&quot;steven alan&quot;</bucket>
            </map>
            <map to='#aec7e8'>
              <bucket>&quot;studio m&quot;</bucket>
            </map>
            <map to='#aec7e8'>
              <bucket>&quot;the addison story&quot;</bucket>
            </map>
            <map to='#aec7e8'>
              <bucket>&quot;the portland collection by pendleton&quot;</bucket>
            </map>
            <map to='#bcbd22'>
              <bucket>&quot;alfani&quot;</bucket>
            </map>
            <map to='#bcbd22'>
              <bucket>&quot;apt. 9&quot;</bucket>
            </map>
            <map to='#bcbd22'>
              <bucket>&quot;boutique by jaeger&quot;</bucket>
            </map>
            <map to='#bcbd22'>
              <bucket>&quot;chandi and lia&quot;</bucket>
            </map>
            <map to='#bcbd22'>
              <bucket>&quot;dieselîî_š—¾’_&quot;</bucket>
            </map>
            <map to='#bcbd22'>
              <bucket>&quot;donna karan&quot;</bucket>
            </map>
            <map to='#bcbd22'>
              <bucket>&quot;faded glory&quot;</bucket>
            </map>
            <map to='#bcbd22'>
              <bucket>&quot;hatley&quot;</bucket>
            </map>
            <map to='#bcbd22'>
              <bucket>&quot;i.madeline&quot;</bucket>
            </map>
            <map to='#bcbd22'>
              <bucket>&quot;indication by eci&quot;</bucket>
            </map>
            <map to='#bcbd22'>
              <bucket>&quot;j.crew&quot;</bucket>
            </map>
            <map to='#bcbd22'>
              <bucket>&quot;just female&quot;</bucket>
            </map>
            <map to='#bcbd22'>
              <bucket>&quot;karen millen&quot;</bucket>
            </map>
            <map to='#bcbd22'>
              <bucket>&quot;liz claiborne&quot;</bucket>
            </map>
            <map to='#bcbd22'>
              <bucket>&quot;loro piana&quot;</bucket>
            </map>
            <map to='#bcbd22'>
              <bucket>&quot;lucy love&quot;</bucket>
            </map>
            <map to='#bcbd22'>
              <bucket>&quot;nicole miller&quot;</bucket>
            </map>
            <map to='#bcbd22'>
              <bucket>&quot;nine &amp; co&quot;</bucket>
            </map>
            <map to='#bcbd22'>
              <bucket>&quot;rebecca minkoff&quot;</bucket>
            </map>
            <map to='#bcbd22'>
              <bucket>&quot;shoshanna&quot;</bucket>
            </map>
            <map to='#bcbd22'>
              <bucket>&quot;sister jane&quot;</bucket>
            </map>
            <map to='#bcbd22'>
              <bucket>&quot;sl fashions&quot;</bucket>
            </map>
            <map to='#bcbd22'>
              <bucket>&quot;studio one&quot;</bucket>
            </map>
            <map to='#bcbd22'>
              <bucket>&quot;vince&quot;</bucket>
            </map>
            <map to='#bcbd22'>
              <bucket>&quot;vince camuto&quot;</bucket>
            </map>
            <map to='#bcbd22'>
              <bucket>&quot;wal g&quot;</bucket>
            </map>
            <map to='#c49c94'>
              <bucket>&quot;a wear&quot;</bucket>
            </map>
            <map to='#c49c94'>
              <bucket>&quot;allen allen&quot;</bucket>
            </map>
            <map to='#c49c94'>
              <bucket>&quot;anglomania&quot;</bucket>
            </map>
            <map to='#c49c94'>
              <bucket>&quot;bdg&quot;</bucket>
            </map>
            <map to='#c49c94'>
              <bucket>&quot;carhartt&quot;</bucket>
            </map>
            <map to='#c49c94'>
              <bucket>&quot;costa blanca&quot;</bucket>
            </map>
            <map to='#c49c94'>
              <bucket>&quot;dolce vita&quot;</bucket>
            </map>
            <map to='#c49c94'>
              <bucket>&quot;emma cook&quot;</bucket>
            </map>
            <map to='#c49c94'>
              <bucket>&quot;equipment&quot;</bucket>
            </map>
            <map to='#c49c94'>
              <bucket>&quot;hilfiger denim&quot;</bucket>
            </map>
            <map to='#c49c94'>
              <bucket>&quot;jag jeans&quot;</bucket>
            </map>
            <map to='#c49c94'>
              <bucket>&quot;l&apos;wren scott&quot;</bucket>
            </map>
            <map to='#c49c94'>
              <bucket>&quot;lbk&quot;</bucket>
            </map>
            <map to='#c49c94'>
              <bucket>&quot;line &amp; dot&quot;</bucket>
            </map>
            <map to='#c49c94'>
              <bucket>&quot;missoni mare&quot;</bucket>
            </map>
            <map to='#c49c94'>
              <bucket>&quot;motel&quot;</bucket>
            </map>
            <map to='#c49c94'>
              <bucket>&quot;only@macys&quot;</bucket>
            </map>
            <map to='#c49c94'>
              <bucket>&quot;phase eight&quot;</bucket>
            </map>
            <map to='#c49c94'>
              <bucket>&quot;proenza schouler&quot;</bucket>
            </map>
            <map to='#c49c94'>
              <bucket>&quot;religion&quot;</bucket>
            </map>
            <map to='#c49c94'>
              <bucket>&quot;rochas&quot;</bucket>
            </map>
            <map to='#c49c94'>
              <bucket>&quot;sachin + babi&quot;</bucket>
            </map>
            <map to='#c49c94'>
              <bucket>&quot;thakoon&quot;</bucket>
            </map>
            <map to='#c49c94'>
              <bucket>&quot;tommy bahama&quot;</bucket>
            </map>
            <map to='#c49c94'>
              <bucket>&quot;two by vince camuto&quot;</bucket>
            </map>
            <map to='#c49c94'>
              <bucket>&quot;urban renewal&quot;</bucket>
            </map>
            <map to='#c49c94'>
              <bucket>&quot;y.a.s&quot;</bucket>
            </map>
            <map to='#c5b0d5'>
              <bucket>&quot;4.collective&quot;</bucket>
            </map>
            <map to='#c5b0d5'>
              <bucket>&quot;alexander mcqueen&quot;</bucket>
            </map>
            <map to='#c5b0d5'>
              <bucket>&quot;band of gypsies&quot;</bucket>
            </map>
            <map to='#c5b0d5'>
              <bucket>&quot;boss hugo boss&quot;</bucket>
            </map>
            <map to='#c5b0d5'>
              <bucket>&quot;burberry&quot;</bucket>
            </map>
            <map to='#c5b0d5'>
              <bucket>&quot;charter club&quot;</bucket>
            </map>
            <map to='#c5b0d5'>
              <bucket>&quot;cheap monday&quot;</bucket>
            </map>
            <map to='#c5b0d5'>
              <bucket>&quot;darian group&quot;</bucket>
            </map>
            <map to='#c5b0d5'>
              <bucket>&quot;eliza j&quot;</bucket>
            </map>
            <map to='#c5b0d5'>
              <bucket>&quot;haute hippie&quot;</bucket>
            </map>
            <map to='#c5b0d5'>
              <bucket>&quot;kate spade new york&quot;</bucket>
            </map>
            <map to='#c5b0d5'>
              <bucket>&quot;kenneth cole new york&quot;</bucket>
            </map>
            <map to='#c5b0d5'>
              <bucket>&quot;lazy oaf&quot;</bucket>
            </map>
            <map to='#c5b0d5'>
              <bucket>&quot;made&quot;</bucket>
            </map>
            <map to='#c5b0d5'>
              <bucket>&quot;mademoiselle tara&quot;</bucket>
            </map>
            <map to='#c5b0d5'>
              <bucket>&quot;minkpink&quot;</bucket>
            </map>
            <map to='#c5b0d5'>
              <bucket>&quot;mint velvet&quot;</bucket>
            </map>
            <map to='#c5b0d5'>
              <bucket>&quot;monki&quot;</bucket>
            </map>
            <map to='#c5b0d5'>
              <bucket>&quot;o&apos;neill&quot;</bucket>
            </map>
            <map to='#c5b0d5'>
              <bucket>&quot;oscar de la renta&quot;</bucket>
            </map>
            <map to='#c5b0d5'>
              <bucket>&quot;planet gold&quot;</bucket>
            </map>
            <map to='#c5b0d5'>
              <bucket>&quot;rick owens&quot;</bucket>
            </map>
            <map to='#c5b0d5'>
              <bucket>&quot;t tahari&quot;</bucket>
            </map>
            <map to='#c5b0d5'>
              <bucket>&quot;the podolls&quot;</bucket>
            </map>
            <map to='#c5b0d5'>
              <bucket>&quot;true decadence&quot;</bucket>
            </map>
            <map to='#c5b0d5'>
              <bucket>&quot;wood wood&quot;</bucket>
            </map>
            <map to='#c5b0d5'>
              <bucket>&quot;xoxo&quot;</bucket>
            </map>
            <map to='#c7c7c7'>
              <bucket>&quot;agb&quot;</bucket>
            </map>
            <map to='#c7c7c7'>
              <bucket>&quot;alice &amp; trixie&quot;</bucket>
            </map>
            <map to='#c7c7c7'>
              <bucket>&quot;bottega veneta&quot;</bucket>
            </map>
            <map to='#c7c7c7'>
              <bucket>&quot;carmakoma&quot;</bucket>
            </map>
            <map to='#c7c7c7'>
              <bucket>&quot;crimson coast&quot;</bucket>
            </map>
            <map to='#c7c7c7'>
              <bucket>&quot;denim &amp; supply - ralph lauren&quot;</bucket>
            </map>
            <map to='#c7c7c7'>
              <bucket>&quot;evan picone&quot;</bucket>
            </map>
            <map to='#c7c7c7'>
              <bucket>&quot;freak of nature&quot;</bucket>
            </map>
            <map to='#c7c7c7'>
              <bucket>&quot;glamorous&quot;</bucket>
            </map>
            <map to='#c7c7c7'>
              <bucket>&quot;i heart ronson&quot;</bucket>
            </map>
            <map to='#c7c7c7'>
              <bucket>&quot;j brand&quot;</bucket>
            </map>
            <map to='#c7c7c7'>
              <bucket>&quot;joe fresh&quot;</bucket>
            </map>
            <map to='#c7c7c7'>
              <bucket>&quot;lira&quot;</bucket>
            </map>
            <map to='#c7c7c7'>
              <bucket>&quot;lisa marie fernandez&quot;</bucket>
            </map>
            <map to='#c7c7c7'>
              <bucket>&quot;lucky brand jeans&quot;</bucket>
            </map>
            <map to='#c7c7c7'>
              <bucket>&quot;my michelle&quot;</bucket>
            </map>
            <map to='#c7c7c7'>
              <bucket>&quot;neon rose&quot;</bucket>
            </map>
            <map to='#c7c7c7'>
              <bucket>&quot;rag &amp; bone&quot;</bucket>
            </map>
            <map to='#c7c7c7'>
              <bucket>&quot;ruby rocks&quot;</bucket>
            </map>
            <map to='#c7c7c7'>
              <bucket>&quot;see by chlož&quot;</bucket>
            </map>
            <map to='#c7c7c7'>
              <bucket>&quot;simone rocha&quot;</bucket>
            </map>
            <map to='#c7c7c7'>
              <bucket>&quot;stetson&quot;</bucket>
            </map>
            <map to='#c7c7c7'>
              <bucket>&quot;toast&quot;</bucket>
            </map>
            <map to='#c7c7c7'>
              <bucket>&quot;ultra flirt&quot;</bucket>
            </map>
            <map to='#c7c7c7'>
              <bucket>&quot;versace collection&quot;</bucket>
            </map>
            <map to='#c7c7c7'>
              <bucket>&quot;wrapper&quot;</bucket>
            </map>
            <map to='#d62728'>
              <bucket>&quot;a.l.c.&quot;</bucket>
            </map>
            <map to='#d62728'>
              <bucket>&quot;addison&quot;</bucket>
            </map>
            <map to='#d62728'>
              <bucket>&quot;ann demeulemeester&quot;</bucket>
            </map>
            <map to='#d62728'>
              <bucket>&quot;baum und pferdgarten&quot;</bucket>
            </map>
            <map to='#d62728'>
              <bucket>&quot;bcbgeneration&quot;</bucket>
            </map>
            <map to='#d62728'>
              <bucket>&quot;dana buchman&quot;</bucket>
            </map>
            <map to='#d62728'>
              <bucket>&quot;dieselï‘&quot;</bucket>
            </map>
            <map to='#d62728'>
              <bucket>&quot;dknyc&quot;</bucket>
            </map>
            <map to='#d62728'>
              <bucket>&quot;echo design&quot;</bucket>
            </map>
            <map to='#d62728'>
              <bucket>&quot;edun&quot;</bucket>
            </map>
            <map to='#d62728'>
              <bucket>&quot;grace elements&quot;</bucket>
            </map>
            <map to='#d62728'>
              <bucket>&quot;guess&quot;</bucket>
            </map>
            <map to='#d62728'>
              <bucket>&quot;jnby&quot;</bucket>
            </map>
            <map to='#d62728'>
              <bucket>&quot;jones new york&quot;</bucket>
            </map>
            <map to='#d62728'>
              <bucket>&quot;kin by john lewis&quot;</bucket>
            </map>
            <map to='#d62728'>
              <bucket>&quot;kut from the kloth&quot;</bucket>
            </map>
            <map to='#d62728'>
              <bucket>&quot;larry levine&quot;</bucket>
            </map>
            <map to='#d62728'>
              <bucket>&quot;maison martin margiela&quot;</bucket>
            </map>
            <map to='#d62728'>
              <bucket>&quot;melissa masse&quot;</bucket>
            </map>
            <map to='#d62728'>
              <bucket>&quot;melissa masse plus&quot;</bucket>
            </map>
            <map to='#d62728'>
              <bucket>&quot;merona&quot;</bucket>
            </map>
            <map to='#d62728'>
              <bucket>&quot;nicki minaj&quot;</bucket>
            </map>
            <map to='#d62728'>
              <bucket>&quot;rag &amp; bone/jean&quot;</bucket>
            </map>
            <map to='#d62728'>
              <bucket>&quot;rsvp&quot;</bucket>
            </map>
            <map to='#d62728'>
              <bucket>&quot;topshop unique&quot;</bucket>
            </map>
            <map to='#d62728'>
              <bucket>&quot;vero moda&quot;</bucket>
            </map>
            <map to='#d62728'>
              <bucket>&quot;wetseal&quot;</bucket>
            </map>
            <map to='#d62728'>
              <bucket>&quot;whit&quot;</bucket>
            </map>
            <map to='#d62728'>
              <bucket>&quot;zadig &amp; voltaire&quot;</bucket>
            </map>
            <map to='#dbdb8d'>
              <bucket>&quot;armani&quot;</bucket>
            </map>
            <map to='#dbdb8d'>
              <bucket>&quot;back by ann sofie back&quot;</bucket>
            </map>
            <map to='#dbdb8d'>
              <bucket>&quot;c &amp; c california&quot;</bucket>
            </map>
            <map to='#dbdb8d'>
              <bucket>&quot;chalayan grey line&quot;</bucket>
            </map>
            <map to='#dbdb8d'>
              <bucket>&quot;christin michaels&quot;</bucket>
            </map>
            <map to='#dbdb8d'>
              <bucket>&quot;dknyc plus&quot;</bucket>
            </map>
            <map to='#dbdb8d'>
              <bucket>&quot;donna morgan&quot;</bucket>
            </map>
            <map to='#dbdb8d'>
              <bucket>&quot;eskandar&quot;</bucket>
            </map>
            <map to='#dbdb8d'>
              <bucket>&quot;finders keepers&quot;</bucket>
            </map>
            <map to='#dbdb8d'>
              <bucket>&quot;halston heritage&quot;</bucket>
            </map>
            <map to='#dbdb8d'>
              <bucket>&quot;jaclyn smith&quot;</bucket>
            </map>
            <map to='#dbdb8d'>
              <bucket>&quot;karen kane&quot;</bucket>
            </map>
            <map to='#dbdb8d'>
              <bucket>&quot;lauren ralph lauren&quot;</bucket>
            </map>
            <map to='#dbdb8d'>
              <bucket>&quot;louise amstrup&quot;</bucket>
            </map>
            <map to='#dbdb8d'>
              <bucket>&quot;love reigns&quot;</bucket>
            </map>
            <map to='#dbdb8d'>
              <bucket>&quot;maje&quot;</bucket>
            </map>
            <map to='#dbdb8d'>
              <bucket>&quot;no. 21&quot;</bucket>
            </map>
            <map to='#dbdb8d'>
              <bucket>&quot;nw3&quot;</bucket>
            </map>
            <map to='#dbdb8d'>
              <bucket>&quot;sonia rykiel&quot;</bucket>
            </map>
            <map to='#dbdb8d'>
              <bucket>&quot;sophie hulme&quot;</bucket>
            </map>
            <map to='#dbdb8d'>
              <bucket>&quot;suno&quot;</bucket>
            </map>
            <map to='#dbdb8d'>
              <bucket>&quot;tibi&quot;</bucket>
            </map>
            <map to='#dbdb8d'>
              <bucket>&quot;unconditional&quot;</bucket>
            </map>
            <map to='#dbdb8d'>
              <bucket>&quot;warehouse&quot;</bucket>
            </map>
            <map to='#dbdb8d'>
              <bucket>&quot;worthington&quot;</bucket>
            </map>
            <map to='#e377c2'>
              <bucket>&quot;a. byer&quot;</bucket>
            </map>
            <map to='#e377c2'>
              <bucket>&quot;aryn k&quot;</bucket>
            </map>
            <map to='#e377c2'>
              <bucket>&quot;bb dakota&quot;</bucket>
            </map>
            <map to='#e377c2'>
              <bucket>&quot;belstaff&quot;</bucket>
            </map>
            <map to='#e377c2'>
              <bucket>&quot;carmen marc valvo&quot;</bucket>
            </map>
            <map to='#e377c2'>
              <bucket>&quot;dex&quot;</bucket>
            </map>
            <map to='#e377c2'>
              <bucket>&quot;double d ranchwear&quot;</bucket>
            </map>
            <map to='#e377c2'>
              <bucket>&quot;erdem&quot;</bucket>
            </map>
            <map to='#e377c2'>
              <bucket>&quot;hive &amp; honey&quot;</bucket>
            </map>
            <map to='#e377c2'>
              <bucket>&quot;jarlo&quot;</bucket>
            </map>
            <map to='#e377c2'>
              <bucket>&quot;jason wu&quot;</bucket>
            </map>
            <map to='#e377c2'>
              <bucket>&quot;lafayette 148 new york&quot;</bucket>
            </map>
            <map to='#e377c2'>
              <bucket>&quot;lela rose&quot;</bucket>
            </map>
            <map to='#e377c2'>
              <bucket>&quot;lennie&quot;</bucket>
            </map>
            <map to='#e377c2'>
              <bucket>&quot;little mistress&quot;</bucket>
            </map>
            <map to='#e377c2'>
              <bucket>&quot;madison marcus&quot;</bucket>
            </map>
            <map to='#e377c2'>
              <bucket>&quot;moulinette soeurs&quot;</bucket>
            </map>
            <map to='#e377c2'>
              <bucket>&quot;paul smith&quot;</bucket>
            </map>
            <map to='#e377c2'>
              <bucket>&quot;planet&quot;</bucket>
            </map>
            <map to='#e377c2'>
              <bucket>&quot;qmack&quot;</bucket>
            </map>
            <map to='#e377c2'>
              <bucket>&quot;rare&quot;</bucket>
            </map>
            <map to='#e377c2'>
              <bucket>&quot;roberto cavalli&quot;</bucket>
            </map>
            <map to='#e377c2'>
              <bucket>&quot;saks fifth avenue&quot;</bucket>
            </map>
            <map to='#e377c2'>
              <bucket>&quot;three dots&quot;</bucket>
            </map>
            <map to='#e377c2'>
              <bucket>&quot;twenty8twelve&quot;</bucket>
            </map>
            <map to='#e377c2'>
              <bucket>&quot;velvet&quot;</bucket>
            </map>
            <map to='#e377c2'>
              <bucket>&quot;y&apos;s by yohji yamamoto&quot;</bucket>
            </map>
            <map to='#f7b6d2'>
              <bucket>&quot;adrianna papell&quot;</bucket>
            </map>
            <map to='#f7b6d2'>
              <bucket>&quot;bella dahl&quot;</bucket>
            </map>
            <map to='#f7b6d2'>
              <bucket>&quot;betsey johnson&quot;</bucket>
            </map>
            <map to='#f7b6d2'>
              <bucket>&quot;canyon river blues&quot;</bucket>
            </map>
            <map to='#f7b6d2'>
              <bucket>&quot;catherine malandrino for designation&quot;</bucket>
            </map>
            <map to='#f7b6d2'>
              <bucket>&quot;croft &amp; barrow&quot;</bucket>
            </map>
            <map to='#f7b6d2'>
              <bucket>&quot;dusen dusen&quot;</bucket>
            </map>
            <map to='#f7b6d2'>
              <bucket>&quot;eric and lani&quot;</bucket>
            </map>
            <map to='#f7b6d2'>
              <bucket>&quot;j.w. anderson&quot;</bucket>
            </map>
            <map to='#f7b6d2'>
              <bucket>&quot;jennifer lopez&quot;</bucket>
            </map>
            <map to='#f7b6d2'>
              <bucket>&quot;lc lauren conrad&quot;</bucket>
            </map>
            <map to='#f7b6d2'>
              <bucket>&quot;lida baday&quot;</bucket>
            </map>
            <map to='#f7b6d2'>
              <bucket>&quot;lili&apos;s closet&quot;</bucket>
            </map>
            <map to='#f7b6d2'>
              <bucket>&quot;little white lies&quot;</bucket>
            </map>
            <map to='#f7b6d2'>
              <bucket>&quot;msgm&quot;</bucket>
            </map>
            <map to='#f7b6d2'>
              <bucket>&quot;pepe&quot;</bucket>
            </map>
            <map to='#f7b6d2'>
              <bucket>&quot;plus moda&quot;</bucket>
            </map>
            <map to='#f7b6d2'>
              <bucket>&quot;r13&quot;</bucket>
            </map>
            <map to='#f7b6d2'>
              <bucket>&quot;rock &amp; republic&quot;</bucket>
            </map>
            <map to='#f7b6d2'>
              <bucket>&quot;saloni&quot;</bucket>
            </map>
            <map to='#f7b6d2'>
              <bucket>&quot;sam &amp; lavi&quot;</bucket>
            </map>
            <map to='#f7b6d2'>
              <bucket>&quot;velvet by graham and spencer&quot;</bucket>
            </map>
            <map to='#f7b6d2'>
              <bucket>&quot;viva vena&quot;</bucket>
            </map>
            <map to='#f7b6d2'>
              <bucket>&quot;weekend by maxmara&quot;</bucket>
            </map>
            <map to='#f7b6d2'>
              <bucket>&quot;ymc&quot;</bucket>
            </map>
            <map to='#f7b6d2'>
              <bucket>&quot;z spoke zac posen&quot;</bucket>
            </map>
            <map to='#ff7f0e'>
              <bucket>&quot;2nd day&quot;</bucket>
            </map>
            <map to='#ff7f0e'>
              <bucket>&quot;ab studio&quot;</bucket>
            </map>
            <map to='#ff7f0e'>
              <bucket>&quot;amanda uprichard&quot;</bucket>
            </map>
            <map to='#ff7f0e'>
              <bucket>&quot;american rag&quot;</bucket>
            </map>
            <map to='#ff7f0e'>
              <bucket>&quot;anne klein&quot;</bucket>
            </map>
            <map to='#ff7f0e'>
              <bucket>&quot;carolina herrera&quot;</bucket>
            </map>
            <map to='#ff7f0e'>
              <bucket>&quot;cherokee&quot;</bucket>
            </map>
            <map to='#ff7f0e'>
              <bucket>&quot;cut25&quot;</bucket>
            </map>
            <map to='#ff7f0e'>
              <bucket>&quot;dagmar&quot;</bucket>
            </map>
            <map to='#ff7f0e'>
              <bucket>&quot;danny &amp; nicole&quot;</bucket>
            </map>
            <map to='#ff7f0e'>
              <bucket>&quot;derek lam for designation&quot;</bucket>
            </map>
            <map to='#ff7f0e'>
              <bucket>&quot;diane von furstenberg&quot;</bucket>
            </map>
            <map to='#ff7f0e'>
              <bucket>&quot;elie tahari&quot;</bucket>
            </map>
            <map to='#ff7f0e'>
              <bucket>&quot;freya&quot;</bucket>
            </map>
            <map to='#ff7f0e'>
              <bucket>&quot;hobbs&quot;</bucket>
            </map>
            <map to='#ff7f0e'>
              <bucket>&quot;inc&quot;</bucket>
            </map>
            <map to='#ff7f0e'>
              <bucket>&quot;indikka&quot;</bucket>
            </map>
            <map to='#ff7f0e'>
              <bucket>&quot;kelly wearstler&quot;</bucket>
            </map>
            <map to='#ff7f0e'>
              <bucket>&quot;maid in love&quot;</bucket>
            </map>
            <map to='#ff7f0e'>
              <bucket>&quot;marchesa voyage&quot;</bucket>
            </map>
            <map to='#ff7f0e'>
              <bucket>&quot;milly&quot;</bucket>
            </map>
            <map to='#ff7f0e'>
              <bucket>&quot;ostwald helgason&quot;</bucket>
            </map>
            <map to='#ff7f0e'>
              <bucket>&quot;plenty by tracy reese&quot;</bucket>
            </map>
            <map to='#ff7f0e'>
              <bucket>&quot;robbie bee&quot;</bucket>
            </map>
            <map to='#ff7f0e'>
              <bucket>&quot;royal robbins&quot;</bucket>
            </map>
            <map to='#ff7f0e'>
              <bucket>&quot;studio 1&quot;</bucket>
            </map>
            <map to='#ff7f0e'>
              <bucket>&quot;stylestalker&quot;</bucket>
            </map>
            <map to='#ff7f0e'>
              <bucket>&quot;tiny&quot;</bucket>
            </map>
            <map to='#ff9896'>
              <bucket>&quot;aeo&quot;</bucket>
            </map>
            <map to='#ff9896'>
              <bucket>&quot;ariat&quot;</bucket>
            </map>
            <map to='#ff9896'>
              <bucket>&quot;bobeau&quot;</bucket>
            </map>
            <map to='#ff9896'>
              <bucket>&quot;edme &amp; esyllte&quot;</bucket>
            </map>
            <map to='#ff9896'>
              <bucket>&quot;etro&quot;</bucket>
            </map>
            <map to='#ff9896'>
              <bucket>&quot;hale bob&quot;</bucket>
            </map>
            <map to='#ff9896'>
              <bucket>&quot;iz byer california&quot;</bucket>
            </map>
            <map to='#ff9896'>
              <bucket>&quot;joie&quot;</bucket>
            </map>
            <map to='#ff9896'>
              <bucket>&quot;jovonna&quot;</bucket>
            </map>
            <map to='#ff9896'>
              <bucket>&quot;juicy couture&quot;</bucket>
            </map>
            <map to='#ff9896'>
              <bucket>&quot;karen kane plus&quot;</bucket>
            </map>
            <map to='#ff9896'>
              <bucket>&quot;kensie&quot;</bucket>
            </map>
            <map to='#ff9896'>
              <bucket>&quot;lands&apos; end&quot;</bucket>
            </map>
            <map to='#ff9896'>
              <bucket>&quot;lavish alice&quot;</bucket>
            </map>
            <map to='#ff9896'>
              <bucket>&quot;mary katrantzou&quot;</bucket>
            </map>
            <map to='#ff9896'>
              <bucket>&quot;metaphor&quot;</bucket>
            </map>
            <map to='#ff9896'>
              <bucket>&quot;mossimo&quot;</bucket>
            </map>
            <map to='#ff9896'>
              <bucket>&quot;noisy may&quot;</bucket>
            </map>
            <map to='#ff9896'>
              <bucket>&quot;parker&quot;</bucket>
            </map>
            <map to='#ff9896'>
              <bucket>&quot;r&amp;k originals&quot;</bucket>
            </map>
            <map to='#ff9896'>
              <bucket>&quot;raoul&quot;</bucket>
            </map>
            <map to='#ff9896'>
              <bucket>&quot;sanctuary&quot;</bucket>
            </map>
            <map to='#ff9896'>
              <bucket>&quot;teri jon&quot;</bucket>
            </map>
            <map to='#ff9896'>
              <bucket>&quot;tracy reese&quot;</bucket>
            </map>
            <map to='#ff9896'>
              <bucket>&quot;vicky tiel&quot;</bucket>
            </map>
            <map to='#ff9896'>
              <bucket>&quot;whistles&quot;</bucket>
            </map>
            <map to='#ff9896'>
              <bucket>&quot;zero + maria cornejo&quot;</bucket>
            </map>
            <map to='#ffbb78'>
              <bucket>&quot;7 for all mankind&quot;</bucket>
            </map>
            <map to='#ffbb78'>
              <bucket>&quot;adam lippes&quot;</bucket>
            </map>
            <map to='#ffbb78'>
              <bucket>&quot;aqua&quot;</bucket>
            </map>
            <map to='#ffbb78'>
              <bucket>&quot;bar iii&quot;</bucket>
            </map>
            <map to='#ffbb78'>
              <bucket>&quot;chicos&quot;</bucket>
            </map>
            <map to='#ffbb78'>
              <bucket>&quot;cynthia steffe&quot;</bucket>
            </map>
            <map to='#ffbb78'>
              <bucket>&quot;day birger et mikkelsen&quot;</bucket>
            </map>
            <map to='#ffbb78'>
              <bucket>&quot;dkny&quot;</bucket>
            </map>
            <map to='#ffbb78'>
              <bucket>&quot;donna ricco&quot;</bucket>
            </map>
            <map to='#ffbb78'>
              <bucket>&quot;free people&quot;</bucket>
            </map>
            <map to='#ffbb78'>
              <bucket>&quot;givenchy&quot;</bucket>
            </map>
            <map to='#ffbb78'>
              <bucket>&quot;insight&quot;</bucket>
            </map>
            <map to='#ffbb78'>
              <bucket>&quot;isaac mizrahi new york&quot;</bucket>
            </map>
            <map to='#ffbb78'>
              <bucket>&quot;jaeger&quot;</bucket>
            </map>
            <map to='#ffbb78'>
              <bucket>&quot;la made&quot;</bucket>
            </map>
            <map to='#ffbb78'>
              <bucket>&quot;love your style, love your size&quot;</bucket>
            </map>
            <map to='#ffbb78'>
              <bucket>&quot;markus lupfer&quot;</bucket>
            </map>
            <map to='#ffbb78'>
              <bucket>&quot;mimi chica&quot;</bucket>
            </map>
            <map to='#ffbb78'>
              <bucket>&quot;pendleton&quot;</bucket>
            </map>
            <map to='#ffbb78'>
              <bucket>&quot;peter jensen&quot;</bucket>
            </map>
            <map to='#ffbb78'>
              <bucket>&quot;rabbit rabbit&quot;</bucket>
            </map>
            <map to='#ffbb78'>
              <bucket>&quot;ronni nicole&quot;</bucket>
            </map>
            <map to='#ffbb78'>
              <bucket>&quot;sandro&quot;</bucket>
            </map>
            <map to='#ffbb78'>
              <bucket>&quot;see u soon&quot;</bucket>
            </map>
            <map to='#ffbb78'>
              <bucket>&quot;sonoma life + style&quot;</bucket>
            </map>
            <map to='#ffbb78'>
              <bucket>&quot;superdry&quot;</bucket>
            </map>
            <map to='#ffbb78'>
              <bucket>&quot;ted baker london&quot;</bucket>
            </map>
            <map to='#ffbb78'>
              <bucket>&quot;trina turk&quot;</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[usr:Calculation_2730813141847173:nk:1]' type='palette'>
            <map to='#09622a'>
              <bucket>&quot;over&quot;</bucket>
            </map>
            <map to='#1e1e1e'>
              <bucket>&quot;nostats&quot;</bucket>
            </map>
            <map to='#1e1e1e'>
              <bucket>&quot;Stats too low&quot;</bucket>
            </map>
            <map to='#1f83b4'>
              <bucket>&quot;Over-represented&quot;</bucket>
            </map>
            <map to='#9c0824'>
              <bucket>&quot;under&quot;</bucket>
            </map>
            <map to='#c94d8c'>
              <bucket>&quot;Under-represented&quot;</bucket>
            </map>
          </encoding>
        </style-rule>
      </style>
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;Reino Unido&quot;' />
      </semantic-values>
      <date-options start-of-week='monday' />
      <datasource-dependencies datasource='Parameters'>
        <column alias='Poor sellers' caption='Analysis' datatype='string' name='[Parameter 2]' param-domain-type='list' role='measure' type='nominal' value='&quot;worst&quot;'>
          <calculation class='tableau' formula='&quot;worst&quot;' />
          <aliases>
            <alias key='&quot;best&quot;' value='Best sellers' />
            <alias key='&quot;worst&quot;' value='Poor sellers' />
          </aliases>
          <members>
            <member alias='Best sellers' value='&quot;best&quot;' />
            <member alias='Poor sellers' value='&quot;worst&quot;' />
          </members>
        </column>
        <column caption='Low Stats' datatype='real' name='[Parameter 3]' param-domain-type='range' role='measure' type='quantitative' value='3.0'>
          <calculation class='tableau' formula='3.0' />
          <desc>
            <formatted-text>
              <run>Threshold at which stats are too low to calculate ratio</run>
            </formatted-text>
          </desc>
          <range granularity='1.0' max='10.0' min='1.0' />
        </column>
      </datasource-dependencies>
    </datasource>
    <datasource caption='extremesellers_lastweek (ds.extremesellers_lastweek) (demo)' inline='true' name='greenplum.41871.617679803200' version='8.3'>
      <connection class='greenplum' dbname='demo' expected-driver-version='PostgreSQL Unicode' odbc-native-protocol='yes' port='9999' server='localhost' username='gpadmin'>
        <relation name='extremesellers_lastweek' table='[ds].[extremesellers_lastweek]' type='table' />
        <metadata-records>
          <metadata-record class='column'>
            <remote-name>json_productkey</remote-name>
            <remote-type>130</remote-type>
            <local-name>[json_productkey]</local-name>
            <parent-name>[extremesellers_lastweek]</parent-name>
            <remote-alias>json_productkey</remote-alias>
            <ordinal>1</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <width>255</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_WVARCHAR&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_WCHAR&quot;</attribute>
              <attribute datatype='string' name='TypeIsVarchar'>&quot;true&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>latest_batch_date</remote-name>
            <remote-type>7</remote-type>
            <local-name>[latest_batch_date]</local-name>
            <parent-name>[extremesellers_lastweek]</parent-name>
            <remote-alias>latest_batch_date</remote-alias>
            <ordinal>2</ordinal>
            <local-type>date</local-type>
            <aggregation>Year</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_TYPE_DATE&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_TYPE_DATE&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>category</remote-name>
            <remote-type>130</remote-type>
            <local-name>[category]</local-name>
            <parent-name>[extremesellers_lastweek]</parent-name>
            <remote-alias>category</remote-alias>
            <ordinal>3</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <width>8190</width>
            <contains-null>true</contains-null>
            <cast-to-local-type>true</cast-to-local-type>
            <collation flag='0' name='LEN_RUS' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_WLONGVARCHAR&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_WCHAR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>subcategory</remote-name>
            <remote-type>130</remote-type>
            <local-name>[subcategory]</local-name>
            <parent-name>[extremesellers_lastweek]</parent-name>
            <remote-alias>subcategory</remote-alias>
            <ordinal>4</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <width>8190</width>
            <contains-null>true</contains-null>
            <cast-to-local-type>true</cast-to-local-type>
            <collation flag='0' name='LEN_RUS' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_WLONGVARCHAR&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_WCHAR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>retailername</remote-name>
            <remote-type>130</remote-type>
            <local-name>[retailername]</local-name>
            <parent-name>[extremesellers_lastweek]</parent-name>
            <remote-alias>retailername</remote-alias>
            <ordinal>5</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <width>8190</width>
            <contains-null>true</contains-null>
            <cast-to-local-type>true</cast-to-local-type>
            <collation flag='0' name='LEN_RUS' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_WLONGVARCHAR&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_WCHAR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>facetbrand</remote-name>
            <remote-type>130</remote-type>
            <local-name>[facetbrand]</local-name>
            <parent-name>[extremesellers_lastweek]</parent-name>
            <remote-alias>facetbrand</remote-alias>
            <ordinal>6</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <width>8190</width>
            <contains-null>true</contains-null>
            <cast-to-local-type>true</cast-to-local-type>
            <collation flag='0' name='LEN_RUS' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_WLONGVARCHAR&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_WCHAR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>taxonomiccolour</remote-name>
            <remote-type>130</remote-type>
            <local-name>[taxonomiccolour]</local-name>
            <parent-name>[extremesellers_lastweek]</parent-name>
            <remote-alias>taxonomiccolour</remote-alias>
            <ordinal>7</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <width>8190</width>
            <contains-null>true</contains-null>
            <cast-to-local-type>true</cast-to-local-type>
            <collation flag='0' name='LEN_RUS' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_WLONGVARCHAR&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_WCHAR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>country</remote-name>
            <remote-type>130</remote-type>
            <local-name>[country]</local-name>
            <parent-name>[extremesellers_lastweek]</parent-name>
            <remote-alias>country</remote-alias>
            <ordinal>8</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <width>8190</width>
            <contains-null>true</contains-null>
            <cast-to-local-type>true</cast-to-local-type>
            <collation flag='0' name='LEN_RUS' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_WLONGVARCHAR&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_WCHAR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>price_currentdaymode</remote-name>
            <remote-type>5</remote-type>
            <local-name>[price_currentdaymode]</local-name>
            <parent-name>[extremesellers_lastweek]</parent-name>
            <remote-alias>price_currentdaymode</remote-alias>
            <ordinal>9</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_FLOAT&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_DOUBLE&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>sellers</remote-name>
            <remote-type>130</remote-type>
            <local-name>[sellers]</local-name>
            <parent-name>[extremesellers_lastweek]</parent-name>
            <remote-alias>sellers</remote-alias>
            <ordinal>10</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <width>8190</width>
            <contains-null>true</contains-null>
            <cast-to-local-type>true</cast-to-local-type>
            <collation flag='0' name='LEN_RUS' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_WLONGVARCHAR&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_WCHAR&quot;</attribute>
            </attributes>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column caption='NormalisedRatio' datatype='real' name='[Calculation_1730812182851096]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='if ([Calculation_5270812182716952 1]&gt;[Parameters].[Parameter 3]) then [Calculation_8450812182825530]/[Calculation_5270812182716952] else -0.01 end' scope-isolation='false'>
          <table-calc ordering-type='Rows' />
        </calculation>
      </column>
      <column caption='ColourField' datatype='string' name='[Calculation_2730813141847173]' role='measure' type='nominal'>
        <calculation class='tableau' formula='if [Calculation_1730812182851096]&gt;1 then &quot;Over-represented&quot; elseif [Calculation_1730812182851096]&lt;0 then &quot;Stats too low&quot; else &quot;Under-represented&quot; end' scope-isolation='false'>
          <table-calc ordering-type='Rows' />
        </calculation>
      </column>
      <column caption='Count in all' datatype='integer' name='[Calculation_5270812182716952 1 1]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='sum(1)' scope-isolation='false' />
      </column>
      <column caption='Count in extreme sellers' datatype='integer' name='[Calculation_5270812182716952 1]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='sum(if [sellers] = [Parameters].[Parameter 2] then 1 else 0 end)' scope-isolation='false' />
      </column>
      <column caption='Ratio in all' datatype='real' name='[Calculation_5270812182716952]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='[Calculation_5270812182716952 1 1]/Total([Calculation_5270812182716952 1 1])' scope-isolation='false'>
          <table-calc ordering-type='Rows' />
        </calculation>
      </column>
      <column caption='Ratio in extreme sellers' datatype='real' name='[Calculation_8450812182825530]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='[Calculation_5270812182716952 1]/Total([Calculation_5270812182716952 1])' scope-isolation='false'>
          <table-calc ordering-type='Rows' />
        </calculation>
      </column>
      <column datatype='integer' name='[Number of Records]' role='measure' type='quantitative' user:auto-column='numrec'>
        <calculation class='tableau' formula='1' />
      </column>
      <column caption='Category' datatype='string' name='[category]' role='dimension' type='nominal'>
      </column>
      <column caption='Country' datatype='string' name='[country]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal'>
      </column>
      <column caption='Facetbrand' datatype='string' name='[facetbrand]' role='dimension' type='nominal'>
      </column>
      <column caption='Json Productkey' datatype='string' name='[json_productkey]' role='dimension' type='nominal'>
      </column>
      <column caption='Price Currentdaymode' datatype='real' name='[price_currentdaymode]' role='measure' type='quantitative'>
      </column>
      <column caption='Retailername' datatype='string' name='[retailername]' role='dimension' type='nominal'>
      </column>
      <column caption='Sellers' datatype='string' name='[sellers]' role='dimension' type='nominal'>
      </column>
      <column caption='Subcategory' datatype='string' name='[subcategory]' role='dimension' type='nominal'>
      </column>
      <column caption='Taxonomiccolour' datatype='string' name='[taxonomiccolour]' role='dimension' type='nominal'>
      </column>
      <column-instance column='[Calculation_2730813141847173]' derivation='User' name='[usr:Calculation_2730813141847173:nk:1]' pivot='key' type='nominal'>
        <table-calc ordering-type='Rows' />
        <table-calc field='[greenplum.41871.617679803200].[Calculation_5270812182716952]' ordering-type='Rows' />
        <table-calc field='[greenplum.41871.617679803200].[Calculation_1730812182851096]' ordering-type='Rows' />
        <table-calc field='[greenplum.41871.617679803200].[Calculation_8450812182825530]' ordering-type='Rows' />
      </column-instance>
      <extract count='-1' enabled='true' units='records'>
        <connection class='dataengine' dbname='/Users/elliedobson/Documents/Work/Customers/TRG/Code/ExtractedData/extremesellers_lastweek (ds.extremesellers_lastweek) (demo).tde' schema='Extract' tablename='Extract' update-time='09/03/2014 04:00:49 PM'>
          <relation name='Extract' table='[Extract].[Extract]' type='table' />
          <calculations>
            <calculation column='[Number of Records]' formula='1' />
          </calculations>
          <refresh>
            <refresh-event add-from-file-path='' increment-value='%null%' refresh-type='create' rows-inserted='1571954' timestamp-start='2014-09-03 16:00:49.640' />
          </refresh>
          <metadata-records>
            <metadata-record class='column'>
              <remote-name>Number of Records</remote-name>
              <remote-type>16</remote-type>
              <local-name>[Number of Records]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Number of Records</remote-alias>
              <ordinal>0</ordinal>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>1</approx-count>
              <contains-null>false</contains-null>
              <statistics>
                <statistic aggregation='Min' datatype='integer'>1</statistic>
                <statistic aggregation='Max' datatype='integer'>1</statistic>
              </statistics>
              <attributes>
                <attribute datatype='string' name='DebugRemoteMetadata (ordered)'>&quot;asc&quot;</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>1</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;sint8&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>category</remote-name>
              <remote-type>129</remote-type>
              <local-name>[category]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>category</remote-alias>
              <ordinal>1</ordinal>
              <family>extremesellers_lastweek</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>30</approx-count>
              <scale>1</scale>
              <width>100</width>
              <contains-null>false</contains-null>
              <collation flag='0' name='LEN_RUS' />
              <statistics>
                <statistic aggregation='Min' datatype='string'>&quot;bags&quot;</statistic>
                <statistic aggregation='Max' datatype='string'>&quot;watches&quot;</statistic>
              </statistics>
              <attributes>
                <attribute datatype='string' name='DebugRemoteCollation'>&quot;en_US&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;heap&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>400</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (sort-position)'>4</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (sort-sense)'>&quot;asc&quot;</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>2</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;str&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>country</remote-name>
              <remote-type>129</remote-type>
              <local-name>[country]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>country</remote-alias>
              <ordinal>2</ordinal>
              <family>extremesellers_lastweek</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>3</approx-count>
              <scale>1</scale>
              <width>100</width>
              <contains-null>false</contains-null>
              <collation flag='0' name='LEN_RUS' />
              <statistics>
                <statistic aggregation='Min' datatype='string'>&quot;au&quot;</statistic>
                <statistic aggregation='Max' datatype='string'>&quot;us&quot;</statistic>
              </statistics>
              <attributes>
                <attribute datatype='string' name='DebugRemoteCollation'>&quot;en_US&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;heap&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>400</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (sort-position)'>1</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (sort-sense)'>&quot;asc&quot;</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>1</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;str&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>facetbrand</remote-name>
              <remote-type>129</remote-type>
              <local-name>[facetbrand]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>facetbrand</remote-alias>
              <ordinal>3</ordinal>
              <family>extremesellers_lastweek</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>4873</approx-count>
              <scale>1</scale>
              <width>100</width>
              <contains-null>false</contains-null>
              <collation flag='0' name='LEN_RUS' />
              <statistics>
                <statistic aggregation='Min' datatype='string'>&quot;0039 italy&quot;</statistic>
                <statistic aggregation='Max' datatype='string'>&quot;zumba&quot;</statistic>
              </statistics>
              <attributes>
                <attribute datatype='string' name='DebugRemoteCollation'>&quot;en_US&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;heap&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>400</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (sort-position)'>7</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (sort-sense)'>&quot;asc&quot;</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>2</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;str&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>json_productkey</remote-name>
              <remote-type>129</remote-type>
              <local-name>[json_productkey]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>json_productkey</remote-alias>
              <ordinal>4</ordinal>
              <family>extremesellers_lastweek</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>766487</approx-count>
              <scale>1</scale>
              <width>255</width>
              <contains-null>false</contains-null>
              <collation flag='0' name='LEN_RUS' />
              <statistics>
                <statistic aggregation='Min' datatype='string'>&quot;00001309-1934-35dc-80d8-c7f7799d8ba5&quot;</statistic>
                <statistic aggregation='Max' datatype='string'>&quot;fffff486-13b2-3c32-b34b-2508d73781c8&quot;</statistic>
              </statistics>
              <attributes>
                <attribute datatype='string' name='DebugRemoteCollation'>&quot;en_US&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;heap&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>1020</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (sort-position)'>8</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (sort-sense)'>&quot;asc&quot;</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>4</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;str&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>latest_batch_date</remote-name>
              <remote-type>133</remote-type>
              <local-name>[latest_batch_date]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>latest_batch_date</remote-alias>
              <ordinal>5</ordinal>
              <family>extremesellers_lastweek</family>
              <local-type>date</local-type>
              <aggregation>Year</aggregation>
              <approx-count>7</approx-count>
              <contains-null>false</contains-null>
              <statistics>
                <statistic aggregation='Min' datatype='date'>#2014-07-17#</statistic>
                <statistic aggregation='Max' datatype='date'>#2014-07-23#</statistic>
              </statistics>
              <attributes>
                <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;array&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (ordered)'>&quot;asc&quot;</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (sort-position)'>0</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (sort-sense)'>&quot;asc&quot;</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>1</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;date&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>price_currentdaymode</remote-name>
              <remote-type>5</remote-type>
              <local-name>[price_currentdaymode]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>price_currentdaymode</remote-alias>
              <ordinal>6</ordinal>
              <family>extremesellers_lastweek</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>10087</approx-count>
              <contains-null>true</contains-null>
              <statistics>
                <statistic aggregation='Min' datatype='real'>0.5</statistic>
                <statistic aggregation='Max' datatype='real'>49375.0</statistic>
              </statistics>
              <attributes>
                <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;array&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (sort-position)'>9</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (sort-sense)'>&quot;asc&quot;</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>2</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;double&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>retailername</remote-name>
              <remote-type>129</remote-type>
              <local-name>[retailername]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>retailername</remote-alias>
              <ordinal>7</ordinal>
              <family>extremesellers_lastweek</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>82</approx-count>
              <scale>1</scale>
              <width>100</width>
              <contains-null>false</contains-null>
              <collation flag='0' name='LEN_RUS' />
              <statistics>
                <statistic aggregation='Min' datatype='string'>&quot;abercrombie &amp; fitch&quot;</statistic>
                <statistic aggregation='Max' datatype='string'>&quot;zara&quot;</statistic>
              </statistics>
              <attributes>
                <attribute datatype='string' name='DebugRemoteCollation'>&quot;en_US&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;heap&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>400</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (sort-position)'>5</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (sort-sense)'>&quot;asc&quot;</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>2</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;str&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>sellers</remote-name>
              <remote-type>129</remote-type>
              <local-name>[sellers]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>sellers</remote-alias>
              <ordinal>8</ordinal>
              <family>extremesellers_lastweek</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>3</approx-count>
              <scale>1</scale>
              <width>100</width>
              <contains-null>false</contains-null>
              <collation flag='0' name='LEN_RUS' />
              <statistics>
                <statistic aggregation='Min' datatype='string'>&quot;best&quot;</statistic>
                <statistic aggregation='Max' datatype='string'>&quot;worst&quot;</statistic>
              </statistics>
              <attributes>
                <attribute datatype='string' name='DebugRemoteCollation'>&quot;en_US&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;heap&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>400</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (sort-position)'>2</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (sort-sense)'>&quot;asc&quot;</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>1</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;str&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>subcategory</remote-name>
              <remote-type>129</remote-type>
              <local-name>[subcategory]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>subcategory</remote-alias>
              <ordinal>9</ordinal>
              <family>extremesellers_lastweek</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>320</approx-count>
              <scale>1</scale>
              <width>100</width>
              <contains-null>false</contains-null>
              <collation flag='0' name='LEN_RUS' />
              <statistics>
                <statistic aggregation='Min' datatype='string'>&quot;3/4 lengths&quot;</statistic>
                <statistic aggregation='Max' datatype='string'>&quot;wreath &amp; crown&quot;</statistic>
              </statistics>
              <attributes>
                <attribute datatype='string' name='DebugRemoteCollation'>&quot;en_US&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;heap&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>400</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (sort-position)'>6</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (sort-sense)'>&quot;asc&quot;</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>2</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;str&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>taxonomiccolour</remote-name>
              <remote-type>129</remote-type>
              <local-name>[taxonomiccolour]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>taxonomiccolour</remote-alias>
              <ordinal>10</ordinal>
              <family>extremesellers_lastweek</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>16</approx-count>
              <scale>1</scale>
              <width>100</width>
              <contains-null>false</contains-null>
              <collation flag='0' name='LEN_RUS' />
              <statistics>
                <statistic aggregation='Min' datatype='string'>&quot;black&quot;</statistic>
                <statistic aggregation='Max' datatype='string'>&quot;yellow&quot;</statistic>
              </statistics>
              <attributes>
                <attribute datatype='string' name='DebugRemoteCollation'>&quot;en_US&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;heap&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>400</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (sort-position)'>3</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (sort-sense)'>&quot;asc&quot;</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>1</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;str&quot;</attribute>
              </attributes>
            </metadata-record>
          </metadata-records>
        </connection>
      </extract>
      <layout dim-ordering='alphabetic' dim-percentage='0.5' measure-ordering='alphabetic' measure-percentage='0.4' show-structure='true' />
      <style>
        <style-rule element='mark'>
          <encoding attr='color' field='[usr:Calculation_2730813141847173:nk:1]' type='palette'>
            <map to='#1e1e1e'>
              <bucket>&quot;Stats too low&quot;</bucket>
            </map>
            <map to='#2ca02c'>
              <bucket>&quot;Under-represented&quot;</bucket>
            </map>
            <map to='#d62728'>
              <bucket>&quot;Over-represented&quot;</bucket>
            </map>
          </encoding>
        </style-rule>
      </style>
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;Reino Unido&quot;' />
      </semantic-values>
      <date-options start-of-week='monday' />
      <datasource-dependencies datasource='Parameters'>
        <column alias='Poor sellers' caption='Analysis' datatype='string' name='[Parameter 2]' param-domain-type='list' role='measure' type='nominal' value='&quot;worst&quot;'>
          <calculation class='tableau' formula='&quot;worst&quot;' />
          <aliases>
            <alias key='&quot;best&quot;' value='Best sellers' />
            <alias key='&quot;worst&quot;' value='Poor sellers' />
          </aliases>
          <members>
            <member alias='Best sellers' value='&quot;best&quot;' />
            <member alias='Poor sellers' value='&quot;worst&quot;' />
          </members>
        </column>
        <column caption='Low Stats' datatype='real' name='[Parameter 3]' param-domain-type='range' role='measure' type='quantitative' value='3.0'>
          <calculation class='tableau' formula='3.0' />
          <desc>
            <formatted-text>
              <run>Threshold at which stats are too low to calculate ratio</run>
            </formatted-text>
          </desc>
          <range granularity='1.0' max='10.0' min='1.0' />
        </column>
      </datasource-dependencies>
    </datasource>
  </datasources>
  <worksheets>
    <worksheet name='CompareRetailers_cat'>
      <layout-options>
        <title>
          <formatted-text>
            <run>&lt;</run>
            <run>[Parameters].[Parameter 2]</run>
            <run>&gt;</run>
            <run> by subcategory and retailer</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='extremesellers_lastweek (ds.extremesellers_lastweek) (demo)' name='greenplum.41871.617679803200' />
            <datasource name='Parameters' />
          </datasources>
          <datasource-dependencies datasource='greenplum.41871.617679803200'>
            <column caption='NormalisedRatio' datatype='real' name='[Calculation_1730812182851096]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='if ([Calculation_5270812182716952 1]&gt;[Parameters].[Parameter 3]) then [Calculation_8450812182825530]/[Calculation_5270812182716952] else -0.01 end' scope-isolation='false'>
                <table-calc ordering-type='Rows' />
              </calculation>
            </column>
            <column caption='ColourField' datatype='string' name='[Calculation_2730813141847173]' role='measure' type='nominal'>
              <calculation class='tableau' formula='if [Calculation_1730812182851096]&gt;1 then &quot;Over-represented&quot; elseif [Calculation_1730812182851096]&lt;0 then &quot;Stats too low&quot; else &quot;Under-represented&quot; end' scope-isolation='false'>
                <table-calc ordering-type='Rows' />
              </calculation>
            </column>
            <column caption='Count in extreme sellers' datatype='integer' name='[Calculation_5270812182716952 1]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='sum(if [sellers] = [Parameters].[Parameter 2] then 1 else 0 end)' scope-isolation='false' />
            </column>
            <column caption='Category' datatype='string' name='[category]' role='dimension' type='nominal'>
            </column>
            <column caption='Country' datatype='string' name='[country]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal'>
            </column>
            <column caption='Facetbrand' datatype='string' name='[facetbrand]' role='dimension' type='nominal'>
            </column>
            <column-instance column='[category]' derivation='None' name='[none:category:nk]' pivot='key' type='nominal' />
            <column-instance column='[country]' derivation='None' name='[none:country:nk]' pivot='key' type='nominal' />
            <column-instance column='[facetbrand]' derivation='None' name='[none:facetbrand:nk]' pivot='key' type='nominal' />
            <column-instance column='[price_currentdaymode]' derivation='None' name='[none:price_currentdaymode:qk]' pivot='key' type='quantitative' />
            <column-instance column='[retailername]' derivation='None' name='[none:retailername:nk]' pivot='key' type='nominal' />
            <column-instance column='[taxonomiccolour]' derivation='None' name='[none:taxonomiccolour:nk]' pivot='key' type='nominal' />
            <column caption='Price Currentdaymode' datatype='real' name='[price_currentdaymode]' role='measure' type='quantitative'>
            </column>
            <column caption='Retailername' datatype='string' name='[retailername]' role='dimension' type='nominal'>
            </column>
            <column caption='Taxonomiccolour' datatype='string' name='[taxonomiccolour]' role='dimension' type='nominal'>
            </column>
            <column-instance column='[Calculation_1730812182851096]' derivation='User' name='[usr:Calculation_1730812182851096:qk:2]' pivot='key' type='quantitative'>
              <table-calc ordering-type='Rows' />
              <table-calc field='[greenplum.41871.617679803200].[Calculation_5270812182716952]' ordering-type='Rows' />
              <table-calc field='[greenplum.41871.617679803200].[Calculation_8450812182825530]' ordering-type='Rows' />
            </column-instance>
            <column-instance column='[Calculation_2730813141847173]' derivation='User' name='[usr:Calculation_2730813141847173:nk:1]' pivot='key' type='nominal'>
              <table-calc ordering-type='Rows' />
              <table-calc field='[greenplum.41871.617679803200].[Calculation_5270812182716952]' ordering-type='Rows' />
              <table-calc field='[greenplum.41871.617679803200].[Calculation_1730812182851096]' ordering-type='Rows' />
              <table-calc field='[greenplum.41871.617679803200].[Calculation_8450812182825530]' ordering-type='Rows' />
            </column-instance>
            <column-instance column='[Calculation_5270812182716952 1]' derivation='User' name='[usr:Calculation_5270812182716952 1:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[greenplum.41871.617679803200].[none:country:nk]' filter-group='10'>
            <groupfilter function='member' level='[none:country:nk]' member='&quot;us&quot;' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[greenplum.41871.617679803200].[none:facetbrand:nk]'>
            <groupfilter function='level-members' level='[none:facetbrand:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='quantitative' column='[greenplum.41871.617679803200].[none:price_currentdaymode:qk]' filter-group='5' included-values='in-range-or-null'>
            <min>0.5</min>
            <max>99.799999999999997</max>
          </filter>
          <filter class='categorical' column='[greenplum.41871.617679803200].[none:retailername:nk]' filter-group='8'>
            <groupfilter function='level-members' level='[none:retailername:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[greenplum.41871.617679803200].[none:taxonomiccolour:nk]' filter-group='4'>
            <groupfilter function='level-members' level='[none:taxonomiccolour:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='quantitative' column='[greenplum.41871.617679803200].[usr:Calculation_5270812182716952 1:qk]' included-values='in-range'>
            <min>1</min>
          </filter>
          <slices>
            <column>[greenplum.41871.617679803200].[none:country:nk]</column>
            <column>[greenplum.41871.617679803200].[none:taxonomiccolour:nk]</column>
            <column>[greenplum.41871.617679803200].[none:facetbrand:nk]</column>
            <column>[greenplum.41871.617679803200].[usr:Calculation_5270812182716952 1:qk]</column>
            <column>[greenplum.41871.617679803200].[none:retailername:nk]</column>
            <column>[greenplum.41871.617679803200].[none:price_currentdaymode:qk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='height' field='[greenplum.41871.617679803200].[none:retailername:nk]' value='25' />
            <format attr='width' field='[greenplum.41871.617679803200].[none:category:nk]' value='47' />
          </style-rule>
          <style-rule element='header'>
            <format attr='height' field='[greenplum.41871.617679803200].[none:category:nk]' value='112' />
          </style-rule>
          <style-rule element='label'>
            <format attr='text-orientation' field='[greenplum.41871.617679803200].[none:category:nk]' value='-90' />
          </style-rule>
          <style-rule element='mark'>
            <encoding attr='size' field='[greenplum.41871.617679803200].[usr:Calculation_1730812182851096:qk:2]' field-type='quantitative' max-size='1' min-size='0.005' type='quantsize' />
          </style-rule>
          <style-rule element='worksheet'>
            <format attr='display-field-labels' scope='cols' value='false' />
            <format attr='display-field-labels' scope='rows' value='false' />
          </style-rule>
          <style-rule element='refline'>
            <format attr='fill-above' id='refline0' value='#dbf0cc' />
            <format attr='fill-below' id='refline0' value='#f2e6e6' />
            <format attr='stroke-color' id='refline0' value='#000000' />
            <format attr='line-pattern' id='refline0' value='dashed' />
          </style-rule>
        </style>
        <panes>
          <pane id='2'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[greenplum.41871.617679803200].[usr:Calculation_2730813141847173:nk:1]' />
              <size column='[greenplum.41871.617679803200].[usr:Calculation_1730812182851096:qk:2]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='size' value='2' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='minheight' value='-1' />
                <format attr='maxheight' value='-1' />
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[greenplum.41871.617679803200].[none:retailername:nk]</rows>
        <cols>[greenplum.41871.617679803200].[none:category:nk]</cols>
      </table>
    </worksheet>
    <worksheet name='CompareRetailers_subcat'>
      <layout-options>
        <title>
          <formatted-text>
            <run>&lt;</run>
            <run>[Parameters].[Parameter 2]</run>
            <run>&gt;</run>
            <run> by subcategory and retailer</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='extremesellers_lastweek (ds.extremesellers_lastweek) (demo)' name='greenplum.41871.617679803200' />
            <datasource name='Parameters' />
          </datasources>
          <datasource-dependencies datasource='greenplum.41871.617679803200'>
            <column caption='NormalisedRatio' datatype='real' name='[Calculation_1730812182851096]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='if ([Calculation_5270812182716952 1]&gt;[Parameters].[Parameter 3]) then [Calculation_8450812182825530]/[Calculation_5270812182716952] else -0.01 end' scope-isolation='false'>
                <table-calc ordering-type='Rows' />
              </calculation>
            </column>
            <column caption='ColourField' datatype='string' name='[Calculation_2730813141847173]' role='measure' type='nominal'>
              <calculation class='tableau' formula='if [Calculation_1730812182851096]&gt;1 then &quot;Over-represented&quot; elseif [Calculation_1730812182851096]&lt;0 then &quot;Stats too low&quot; else &quot;Under-represented&quot; end' scope-isolation='false'>
                <table-calc ordering-type='Rows' />
              </calculation>
            </column>
            <column caption='Count in extreme sellers' datatype='integer' name='[Calculation_5270812182716952 1]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='sum(if [sellers] = [Parameters].[Parameter 2] then 1 else 0 end)' scope-isolation='false' />
            </column>
            <column caption='Category' datatype='string' name='[category]' role='dimension' type='nominal'>
            </column>
            <column caption='Country' datatype='string' name='[country]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal'>
            </column>
            <column caption='Facetbrand' datatype='string' name='[facetbrand]' role='dimension' type='nominal'>
            </column>
            <column-instance column='[category]' derivation='None' name='[none:category:nk]' pivot='key' type='nominal' />
            <column-instance column='[country]' derivation='None' name='[none:country:nk]' pivot='key' type='nominal' />
            <column-instance column='[facetbrand]' derivation='None' name='[none:facetbrand:nk]' pivot='key' type='nominal' />
            <column-instance column='[price_currentdaymode]' derivation='None' name='[none:price_currentdaymode:qk]' pivot='key' type='quantitative' />
            <column-instance column='[retailername]' derivation='None' name='[none:retailername:nk]' pivot='key' type='nominal' />
            <column-instance column='[subcategory]' derivation='None' name='[none:subcategory:nk]' pivot='key' type='nominal' />
            <column-instance column='[taxonomiccolour]' derivation='None' name='[none:taxonomiccolour:nk]' pivot='key' type='nominal' />
            <column caption='Price Currentdaymode' datatype='real' name='[price_currentdaymode]' role='measure' type='quantitative'>
            </column>
            <column caption='Retailername' datatype='string' name='[retailername]' role='dimension' type='nominal'>
            </column>
            <column caption='Subcategory' datatype='string' name='[subcategory]' role='dimension' type='nominal'>
            </column>
            <column caption='Taxonomiccolour' datatype='string' name='[taxonomiccolour]' role='dimension' type='nominal'>
            </column>
            <column-instance column='[Calculation_1730812182851096]' derivation='User' name='[usr:Calculation_1730812182851096:qk:2]' pivot='key' type='quantitative'>
              <table-calc ordering-type='Rows' />
              <table-calc field='[greenplum.41871.617679803200].[Calculation_5270812182716952]' ordering-type='Rows' />
              <table-calc field='[greenplum.41871.617679803200].[Calculation_8450812182825530]' ordering-type='Rows' />
            </column-instance>
            <column-instance column='[Calculation_2730813141847173]' derivation='User' name='[usr:Calculation_2730813141847173:nk:1]' pivot='key' type='nominal'>
              <table-calc ordering-type='Rows' />
              <table-calc field='[greenplum.41871.617679803200].[Calculation_5270812182716952]' ordering-type='Rows' />
              <table-calc field='[greenplum.41871.617679803200].[Calculation_1730812182851096]' ordering-type='Rows' />
              <table-calc field='[greenplum.41871.617679803200].[Calculation_8450812182825530]' ordering-type='Rows' />
            </column-instance>
            <column-instance column='[Calculation_5270812182716952 1]' derivation='User' name='[usr:Calculation_5270812182716952 1:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[greenplum.41871.617679803200].[none:category:nk]' filter-group='9'>
            <groupfilter function='member' level='[none:category:nk]' member='&quot;jeans&quot;' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[greenplum.41871.617679803200].[none:country:nk]' filter-group='10'>
            <groupfilter function='member' level='[none:country:nk]' member='&quot;us&quot;' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[greenplum.41871.617679803200].[none:facetbrand:nk]' filter-group='6'>
            <groupfilter function='level-members' level='[none:facetbrand:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='quantitative' column='[greenplum.41871.617679803200].[none:price_currentdaymode:qk]' filter-group='5' included-values='in-range-or-null'>
            <min>0.5</min>
            <max>99.799999999999997</max>
          </filter>
          <filter class='categorical' column='[greenplum.41871.617679803200].[none:retailername:nk]' filter-group='8'>
            <groupfilter function='level-members' level='[none:retailername:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[greenplum.41871.617679803200].[none:taxonomiccolour:nk]' filter-group='4'>
            <groupfilter function='level-members' level='[none:taxonomiccolour:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='quantitative' column='[greenplum.41871.617679803200].[usr:Calculation_5270812182716952 1:qk]' included-values='in-range'>
            <min>1</min>
          </filter>
          <slices>
            <column>[greenplum.41871.617679803200].[none:country:nk]</column>
            <column>[greenplum.41871.617679803200].[none:taxonomiccolour:nk]</column>
            <column>[greenplum.41871.617679803200].[none:facetbrand:nk]</column>
            <column>[greenplum.41871.617679803200].[none:category:nk]</column>
            <column>[greenplum.41871.617679803200].[usr:Calculation_5270812182716952 1:qk]</column>
            <column>[greenplum.41871.617679803200].[none:retailername:nk]</column>
            <column>[greenplum.41871.617679803200].[none:price_currentdaymode:qk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='height' field='[greenplum.41871.617679803200].[none:retailername:nk]' value='39' />
            <format attr='width' field='[greenplum.41871.617679803200].[none:subcategory:nk]' value='161' />
          </style-rule>
          <style-rule element='header'>
            <format attr='height' field='[greenplum.41871.617679803200].[none:subcategory:nk]' value='96' />
          </style-rule>
          <style-rule element='label'>
            <format attr='text-orientation' field='[greenplum.41871.617679803200].[none:subcategory:nk]' value='-90' />
          </style-rule>
          <style-rule element='mark'>
            <encoding attr='size' field='[greenplum.41871.617679803200].[usr:Calculation_1730812182851096:qk:2]' field-type='quantitative' max-size='1' min-size='0.005' type='quantsize' />
          </style-rule>
          <style-rule element='worksheet'>
            <format attr='display-field-labels' scope='cols' value='false' />
            <format attr='display-field-labels' scope='rows' value='false' />
          </style-rule>
          <style-rule element='refline'>
            <format attr='fill-above' id='refline0' value='#dbf0cc' />
            <format attr='fill-below' id='refline0' value='#f2e6e6' />
            <format attr='stroke-color' id='refline0' value='#000000' />
            <format attr='line-pattern' id='refline0' value='dashed' />
          </style-rule>
        </style>
        <panes>
          <pane id='2'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[greenplum.41871.617679803200].[usr:Calculation_2730813141847173:nk:1]' />
              <size column='[greenplum.41871.617679803200].[usr:Calculation_1730812182851096:qk:2]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='size' value='2' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='minheight' value='-1' />
                <format attr='maxheight' value='-1' />
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[greenplum.41871.617679803200].[none:retailername:nk]</rows>
        <cols>[greenplum.41871.617679803200].[none:subcategory:nk]</cols>
      </table>
    </worksheet>
    <worksheet name='Count vs Brand'>
      <layout-options>
        <title>
          <formatted-text>
            <run>Product counts in </run>
            <run>&lt;</run>
            <run>[Parameters].[Parameter 2]</run>
            <run>&gt;</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='extremesellers_lastweek (ds.extremesellers_lastweek) (demo)' name='greenplum.41871.617679803200' />
            <datasource name='Parameters' />
          </datasources>
          <datasource-dependencies datasource='greenplum.41871.617679803200'>
            <column caption='ColourField' datatype='string' name='[Calculation_2730813141847173]' role='measure' type='nominal'>
              <calculation class='tableau' formula='if [Calculation_1730812182851096]&gt;1 then &quot;Over-represented&quot; elseif [Calculation_1730812182851096]&lt;0 then &quot;Stats too low&quot; else &quot;Under-represented&quot; end' scope-isolation='false'>
                <table-calc ordering-type='Rows' />
              </calculation>
            </column>
            <column caption='Count in extreme sellers' datatype='integer' name='[Calculation_5270812182716952 1]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='sum(if [sellers] = [Parameters].[Parameter 2] then 1 else 0 end)' scope-isolation='false' />
            </column>
            <column caption='Category' datatype='string' name='[category]' role='dimension' type='nominal'>
            </column>
            <column caption='Country' datatype='string' name='[country]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal'>
            </column>
            <column caption='Facetbrand' datatype='string' name='[facetbrand]' role='dimension' type='nominal'>
            </column>
            <column-instance column='[category]' derivation='None' name='[none:category:nk]' pivot='key' type='nominal' />
            <column-instance column='[country]' derivation='None' name='[none:country:nk]' pivot='key' type='nominal' />
            <column-instance column='[facetbrand]' derivation='None' name='[none:facetbrand:nk]' pivot='key' type='nominal' />
            <column-instance column='[price_currentdaymode]' derivation='None' name='[none:price_currentdaymode:qk]' pivot='key' type='quantitative' />
            <column-instance column='[retailername]' derivation='None' name='[none:retailername:nk]' pivot='key' type='nominal' />
            <column-instance column='[subcategory]' derivation='None' name='[none:subcategory:nk]' pivot='key' type='nominal' />
            <column-instance column='[taxonomiccolour]' derivation='None' name='[none:taxonomiccolour:nk]' pivot='key' type='nominal' />
            <column caption='Price Currentdaymode' datatype='real' name='[price_currentdaymode]' role='measure' type='quantitative'>
            </column>
            <column caption='Retailername' datatype='string' name='[retailername]' role='dimension' type='nominal'>
            </column>
            <column caption='Subcategory' datatype='string' name='[subcategory]' role='dimension' type='nominal'>
            </column>
            <column caption='Taxonomiccolour' datatype='string' name='[taxonomiccolour]' role='dimension' type='nominal'>
            </column>
            <column-instance column='[Calculation_2730813141847173]' derivation='User' name='[usr:Calculation_2730813141847173:nk:1]' pivot='key' type='nominal'>
              <table-calc ordering-type='Rows' />
              <table-calc field='[greenplum.41871.617679803200].[Calculation_5270812182716952]' ordering-type='Rows' />
              <table-calc field='[greenplum.41871.617679803200].[Calculation_1730812182851096]' ordering-type='Rows' />
              <table-calc field='[greenplum.41871.617679803200].[Calculation_8450812182825530]' ordering-type='Rows' />
            </column-instance>
            <column-instance column='[Calculation_5270812182716952 1]' derivation='User' name='[usr:Calculation_5270812182716952 1:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[greenplum.41871.617679803200].[none:category:nk]' filter-group='9'>
            <groupfilter function='member' level='[none:category:nk]' member='&quot;jeans&quot;' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[greenplum.41871.617679803200].[none:country:nk]' filter-group='10'>
            <groupfilter function='member' level='[none:country:nk]' member='&quot;us&quot;' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[greenplum.41871.617679803200].[none:facetbrand:nk]'>
            <groupfilter function='except' user:ui-domain='relevant' user:ui-enumeration='exclusive' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[none:facetbrand:nk]' />
              <groupfilter function='member' level='[none:facetbrand:nk]' member='&quot;Not found&quot;' />
            </groupfilter>
          </filter>
          <sort class='alphabetic' column='[greenplum.41871.617679803200].[none:facetbrand:nk]' direction='ASC' />
          <filter class='quantitative' column='[greenplum.41871.617679803200].[none:price_currentdaymode:qk]' filter-group='5' included-values='in-range-or-null'>
            <min>0.5</min>
            <max>99.799999999999997</max>
          </filter>
          <filter class='categorical' column='[greenplum.41871.617679803200].[none:retailername:nk]' filter-group='8'>
            <groupfilter function='level-members' level='[none:retailername:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[greenplum.41871.617679803200].[none:subcategory:nk]' filter-group='7'>
            <groupfilter function='level-members' level='[none:subcategory:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[greenplum.41871.617679803200].[none:taxonomiccolour:nk]' filter-group='4'>
            <groupfilter function='level-members' level='[none:taxonomiccolour:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='quantitative' column='[greenplum.41871.617679803200].[usr:Calculation_5270812182716952 1:qk]' included-values='in-range'>
            <min>1</min>
          </filter>
          <slices>
            <column>[greenplum.41871.617679803200].[none:category:nk]</column>
            <column>[greenplum.41871.617679803200].[none:subcategory:nk]</column>
            <column>[greenplum.41871.617679803200].[none:retailername:nk]</column>
            <column>[greenplum.41871.617679803200].[none:taxonomiccolour:nk]</column>
            <column>[greenplum.41871.617679803200].[none:price_currentdaymode:qk]</column>
            <column>[greenplum.41871.617679803200].[usr:Calculation_5270812182716952 1:qk]</column>
            <column>[greenplum.41871.617679803200].[none:facetbrand:nk]</column>
            <column>[greenplum.41871.617679803200].[none:country:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <format attr='title' class='0' field='[greenplum.41871.617679803200].[usr:Calculation_5270812182716952 1:qk]' scope='rows' value='Product counts' />
            <format attr='subtitle' class='0' field='[greenplum.41871.617679803200].[usr:Calculation_5270812182716952 1:qk]' scope='rows' value='' />
            <format attr='auto-subtitle' class='0' field='[greenplum.41871.617679803200].[usr:Calculation_5270812182716952 1:qk]' scope='rows' value='true' />
          </style-rule>
          <style-rule element='label'>
            <format attr='text-orientation' field='[greenplum.41871.617679803200].[none:facetbrand:nk]' value='-90' />
          </style-rule>
          <style-rule element='worksheet'>
            <format attr='display-field-labels' scope='cols' value='false' />
          </style-rule>
        </style>
        <panes>
          <pane>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[greenplum.41871.617679803200].[usr:Calculation_2730813141847173:nk:1]' />
            </encodings>
          </pane>
        </panes>
        <rows>[greenplum.41871.617679803200].[usr:Calculation_5270812182716952 1:qk]</rows>
        <cols>[greenplum.41871.617679803200].[none:facetbrand:nk]</cols>
      </table>
    </worksheet>
    <worksheet name='Count vs SubCategory'>
      <layout-options>
        <title>
          <formatted-text>
            <run>Product counts in </run>
            <run>&lt;</run>
            <run>[Parameters].[Parameter 2]</run>
            <run>&gt;</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='extremesellers_lastweek (ds.extremesellers_lastweek) (demo)' name='greenplum.41871.617679803200' />
            <datasource name='Parameters' />
          </datasources>
          <datasource-dependencies datasource='greenplum.41871.617679803200'>
            <column caption='ColourField' datatype='string' name='[Calculation_2730813141847173]' role='measure' type='nominal'>
              <calculation class='tableau' formula='if [Calculation_1730812182851096]&gt;1 then &quot;Over-represented&quot; elseif [Calculation_1730812182851096]&lt;0 then &quot;Stats too low&quot; else &quot;Under-represented&quot; end' scope-isolation='false'>
                <table-calc ordering-type='Rows' />
              </calculation>
            </column>
            <column caption='Count in extreme sellers' datatype='integer' name='[Calculation_5270812182716952 1]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='sum(if [sellers] = [Parameters].[Parameter 2] then 1 else 0 end)' scope-isolation='false' />
            </column>
            <column caption='Category' datatype='string' name='[category]' role='dimension' type='nominal'>
            </column>
            <column caption='Country' datatype='string' name='[country]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal'>
            </column>
            <column caption='Facetbrand' datatype='string' name='[facetbrand]' role='dimension' type='nominal'>
            </column>
            <column-instance column='[category]' derivation='None' name='[none:category:nk]' pivot='key' type='nominal' />
            <column-instance column='[country]' derivation='None' name='[none:country:nk]' pivot='key' type='nominal' />
            <column-instance column='[facetbrand]' derivation='None' name='[none:facetbrand:nk]' pivot='key' type='nominal' />
            <column-instance column='[price_currentdaymode]' derivation='None' name='[none:price_currentdaymode:qk]' pivot='key' type='quantitative' />
            <column-instance column='[retailername]' derivation='None' name='[none:retailername:nk]' pivot='key' type='nominal' />
            <column-instance column='[subcategory]' derivation='None' name='[none:subcategory:nk]' pivot='key' type='nominal' />
            <column-instance column='[taxonomiccolour]' derivation='None' name='[none:taxonomiccolour:nk]' pivot='key' type='nominal' />
            <column caption='Price Currentdaymode' datatype='real' name='[price_currentdaymode]' role='measure' type='quantitative'>
            </column>
            <column caption='Retailername' datatype='string' name='[retailername]' role='dimension' type='nominal'>
            </column>
            <column caption='Subcategory' datatype='string' name='[subcategory]' role='dimension' type='nominal'>
            </column>
            <column caption='Taxonomiccolour' datatype='string' name='[taxonomiccolour]' role='dimension' type='nominal'>
            </column>
            <column-instance column='[Calculation_2730813141847173]' derivation='User' name='[usr:Calculation_2730813141847173:nk:1]' pivot='key' type='nominal'>
              <table-calc ordering-type='Rows' />
              <table-calc field='[greenplum.41871.617679803200].[Calculation_5270812182716952]' ordering-type='Rows' />
              <table-calc field='[greenplum.41871.617679803200].[Calculation_1730812182851096]' ordering-type='Rows' />
              <table-calc field='[greenplum.41871.617679803200].[Calculation_8450812182825530]' ordering-type='Rows' />
            </column-instance>
            <column-instance column='[Calculation_5270812182716952 1]' derivation='User' name='[usr:Calculation_5270812182716952 1:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[greenplum.41871.617679803200].[none:category:nk]' filter-group='9'>
            <groupfilter function='member' level='[none:category:nk]' member='&quot;jeans&quot;' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[greenplum.41871.617679803200].[none:country:nk]' filter-group='10'>
            <groupfilter function='member' level='[none:country:nk]' member='&quot;us&quot;' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[greenplum.41871.617679803200].[none:facetbrand:nk]' filter-group='6'>
            <groupfilter function='level-members' level='[none:facetbrand:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='quantitative' column='[greenplum.41871.617679803200].[none:price_currentdaymode:qk]' filter-group='5' included-values='in-range-or-null'>
            <min>0.5</min>
            <max>99.799999999999997</max>
          </filter>
          <filter class='categorical' column='[greenplum.41871.617679803200].[none:retailername:nk]' filter-group='8'>
            <groupfilter function='level-members' level='[none:retailername:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[greenplum.41871.617679803200].[none:subcategory:nk]'>
            <groupfilter function='except' user:ui-domain='relevant' user:ui-enumeration='exclusive' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[none:subcategory:nk]' />
              <groupfilter function='member' level='[none:subcategory:nk]' member='&quot;unclassified&quot;' />
            </groupfilter>
          </filter>
          <sort class='alphabetic' column='[greenplum.41871.617679803200].[none:subcategory:nk]' direction='ASC' />
          <filter class='categorical' column='[greenplum.41871.617679803200].[none:taxonomiccolour:nk]' filter-group='4'>
            <groupfilter function='level-members' level='[none:taxonomiccolour:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <sort class='manual' column='[greenplum.41871.617679803200].[usr:Calculation_2730813141847173:nk:1]' direction='ASC'>
            <dictionary>
              <bucket>&quot;Over-represented&quot;</bucket>
              <bucket>&quot;Under-represented&quot;</bucket>
              <bucket>&quot;Stats too low&quot;</bucket>
              <bucket>%all%</bucket>
            </dictionary>
          </sort>
          <filter class='quantitative' column='[greenplum.41871.617679803200].[usr:Calculation_5270812182716952 1:qk]' included-values='in-range'>
            <min>1</min>
          </filter>
          <slices>
            <column>[greenplum.41871.617679803200].[none:country:nk]</column>
            <column>[greenplum.41871.617679803200].[none:category:nk]</column>
            <column>[greenplum.41871.617679803200].[none:facetbrand:nk]</column>
            <column>[greenplum.41871.617679803200].[none:retailername:nk]</column>
            <column>[greenplum.41871.617679803200].[none:taxonomiccolour:nk]</column>
            <column>[greenplum.41871.617679803200].[none:price_currentdaymode:qk]</column>
            <column>[greenplum.41871.617679803200].[usr:Calculation_5270812182716952 1:qk]</column>
            <column>[greenplum.41871.617679803200].[none:subcategory:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <format attr='title' class='0' field='[greenplum.41871.617679803200].[usr:Calculation_5270812182716952 1:qk]' scope='rows' value='Product counts' />
            <format attr='subtitle' class='0' field='[greenplum.41871.617679803200].[usr:Calculation_5270812182716952 1:qk]' scope='rows' value='' />
            <format attr='auto-subtitle' class='0' field='[greenplum.41871.617679803200].[usr:Calculation_5270812182716952 1:qk]' scope='rows' value='true' />
            <format attr='height' field='[greenplum.41871.617679803200].[none:subcategory:nk]' value='39' />
          </style-rule>
          <style-rule element='worksheet'>
            <format attr='display-field-labels' scope='cols' value='false' />
          </style-rule>
          <style-rule element='legend-title-text'>
            <format attr='color' field='[greenplum.41871.617679803200].[usr:Calculation_2730813141847173:nk:1]' value='Colour legend&#10;'>
              <formatted-text>
                <run>Colour legend&#10;</run>
              </formatted-text>
            </format>
          </style-rule>
          <style-rule element='quick-filter'>
            <format attr='title' field='[greenplum.41871.617679803200].[none:price_currentdaymode:qk]' value='Price'>
              <formatted-text>
                <run>Price</run>
              </formatted-text>
            </format>
            <format attr='title' field='[greenplum.41871.617679803200].[none:retailername:nk]' value='Retailer&#10;'>
              <formatted-text>
                <run>Retailer&#10;</run>
              </formatted-text>
            </format>
            <format attr='title' field='[greenplum.41871.617679803200].[none:facetbrand:nk]' value='Brand&#10;'>
              <formatted-text>
                <run>Brand&#10;</run>
              </formatted-text>
            </format>
            <format attr='title' field='[greenplum.41871.617679803200].[none:taxonomiccolour:nk]' value='Colour'>
              <formatted-text>
                <run>Colour</run>
              </formatted-text>
            </format>
          </style-rule>
        </style>
        <panes>
          <pane>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[greenplum.41871.617679803200].[usr:Calculation_2730813141847173:nk:1]' />
            </encodings>
          </pane>
        </panes>
        <rows>[greenplum.41871.617679803200].[usr:Calculation_5270812182716952 1:qk]</rows>
        <cols>[greenplum.41871.617679803200].[none:subcategory:nk]</cols>
      </table>
    </worksheet>
    <worksheet name='Ratio vs Brand'>
      <layout-options>
        <title>
          <formatted-text>
            <run>&lt;</run>
            <run>[Parameters].[Parameter 2]</run>
            <run>&gt;</run>
            <run> by brand</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='extremesellers_lastweek (ds.extremesellers_lastweek) (demo)' name='greenplum.41871.617679803200' />
            <datasource name='Parameters' />
          </datasources>
          <datasource-dependencies datasource='greenplum.41871.617679803200'>
            <column caption='NormalisedRatio' datatype='real' name='[Calculation_1730812182851096]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='if ([Calculation_5270812182716952 1]&gt;[Parameters].[Parameter 3]) then [Calculation_8450812182825530]/[Calculation_5270812182716952] else -0.01 end' scope-isolation='false'>
                <table-calc ordering-type='Rows' />
              </calculation>
            </column>
            <column caption='ColourField' datatype='string' name='[Calculation_2730813141847173]' role='measure' type='nominal'>
              <calculation class='tableau' formula='if [Calculation_1730812182851096]&gt;1 then &quot;Over-represented&quot; elseif [Calculation_1730812182851096]&lt;0 then &quot;Stats too low&quot; else &quot;Under-represented&quot; end' scope-isolation='false'>
                <table-calc ordering-type='Rows' />
              </calculation>
            </column>
            <column caption='Count in extreme sellers' datatype='integer' name='[Calculation_5270812182716952 1]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='sum(if [sellers] = [Parameters].[Parameter 2] then 1 else 0 end)' scope-isolation='false' />
            </column>
            <column caption='Category' datatype='string' name='[category]' role='dimension' type='nominal'>
            </column>
            <column caption='Country' datatype='string' name='[country]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal'>
            </column>
            <column caption='Facetbrand' datatype='string' name='[facetbrand]' role='dimension' type='nominal'>
            </column>
            <column-instance column='[category]' derivation='None' name='[none:category:nk]' pivot='key' type='nominal' />
            <column-instance column='[country]' derivation='None' name='[none:country:nk]' pivot='key' type='nominal' />
            <column-instance column='[facetbrand]' derivation='None' name='[none:facetbrand:nk]' pivot='key' type='nominal' />
            <column-instance column='[price_currentdaymode]' derivation='None' name='[none:price_currentdaymode:qk]' pivot='key' type='quantitative' />
            <column-instance column='[retailername]' derivation='None' name='[none:retailername:nk]' pivot='key' type='nominal' />
            <column-instance column='[subcategory]' derivation='None' name='[none:subcategory:nk]' pivot='key' type='nominal' />
            <column-instance column='[taxonomiccolour]' derivation='None' name='[none:taxonomiccolour:nk]' pivot='key' type='nominal' />
            <column caption='Price Currentdaymode' datatype='real' name='[price_currentdaymode]' role='measure' type='quantitative'>
            </column>
            <column caption='Retailername' datatype='string' name='[retailername]' role='dimension' type='nominal'>
            </column>
            <column caption='Subcategory' datatype='string' name='[subcategory]' role='dimension' type='nominal'>
            </column>
            <column caption='Taxonomiccolour' datatype='string' name='[taxonomiccolour]' role='dimension' type='nominal'>
            </column>
            <column-instance column='[Calculation_1730812182851096]' derivation='User' name='[usr:Calculation_1730812182851096:qk:2]' pivot='key' type='quantitative'>
              <table-calc ordering-type='Rows' />
              <table-calc field='[greenplum.41871.617679803200].[Calculation_5270812182716952]' ordering-type='Rows' />
              <table-calc field='[greenplum.41871.617679803200].[Calculation_8450812182825530]' ordering-type='Rows' />
            </column-instance>
            <column-instance column='[Calculation_2730813141847173]' derivation='User' name='[usr:Calculation_2730813141847173:nk:1]' pivot='key' type='nominal'>
              <table-calc ordering-type='Rows' />
              <table-calc field='[greenplum.41871.617679803200].[Calculation_5270812182716952]' ordering-type='Rows' />
              <table-calc field='[greenplum.41871.617679803200].[Calculation_1730812182851096]' ordering-type='Rows' />
              <table-calc field='[greenplum.41871.617679803200].[Calculation_8450812182825530]' ordering-type='Rows' />
            </column-instance>
            <column-instance column='[Calculation_5270812182716952 1]' derivation='User' name='[usr:Calculation_5270812182716952 1:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[greenplum.41871.617679803200].[none:category:nk]' filter-group='9'>
            <groupfilter function='member' level='[none:category:nk]' member='&quot;jeans&quot;' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[greenplum.41871.617679803200].[none:country:nk]' filter-group='10'>
            <groupfilter function='member' level='[none:country:nk]' member='&quot;us&quot;' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[greenplum.41871.617679803200].[none:facetbrand:nk]'>
            <groupfilter function='except' user:ui-domain='relevant' user:ui-enumeration='exclusive' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[none:facetbrand:nk]' />
              <groupfilter function='member' level='[none:facetbrand:nk]' member='&quot;Not found&quot;' />
            </groupfilter>
          </filter>
          <sort class='alphabetic' column='[greenplum.41871.617679803200].[none:facetbrand:nk]' direction='ASC' />
          <filter class='quantitative' column='[greenplum.41871.617679803200].[none:price_currentdaymode:qk]' filter-group='5' included-values='in-range-or-null'>
            <min>0.5</min>
            <max>99.799999999999997</max>
          </filter>
          <filter class='categorical' column='[greenplum.41871.617679803200].[none:retailername:nk]' filter-group='8'>
            <groupfilter function='level-members' level='[none:retailername:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[greenplum.41871.617679803200].[none:subcategory:nk]' filter-group='7'>
            <groupfilter function='level-members' level='[none:subcategory:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[greenplum.41871.617679803200].[none:taxonomiccolour:nk]' filter-group='4'>
            <groupfilter function='level-members' level='[none:taxonomiccolour:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='quantitative' column='[greenplum.41871.617679803200].[usr:Calculation_5270812182716952 1:qk]' included-values='in-range'>
            <min>1</min>
          </filter>
          <slices>
            <column>[greenplum.41871.617679803200].[none:country:nk]</column>
            <column>[greenplum.41871.617679803200].[none:category:nk]</column>
            <column>[greenplum.41871.617679803200].[none:subcategory:nk]</column>
            <column>[greenplum.41871.617679803200].[none:retailername:nk]</column>
            <column>[greenplum.41871.617679803200].[none:taxonomiccolour:nk]</column>
            <column>[greenplum.41871.617679803200].[none:facetbrand:nk]</column>
            <column>[greenplum.41871.617679803200].[usr:Calculation_5270812182716952 1:qk]</column>
            <column>[greenplum.41871.617679803200].[none:price_currentdaymode:qk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <format attr='title' class='0' field='[greenplum.41871.617679803200].[usr:Calculation_1730812182851096:qk:2]' scope='rows' value='Observed/Expected' />
            <format attr='subtitle' class='0' field='[greenplum.41871.617679803200].[usr:Calculation_1730812182851096:qk:2]' scope='rows' value='' />
            <format attr='auto-subtitle' class='0' field='[greenplum.41871.617679803200].[usr:Calculation_1730812182851096:qk:2]' scope='rows' value='true' />
          </style-rule>
          <style-rule element='label'>
            <format attr='text-orientation' field='[greenplum.41871.617679803200].[none:facetbrand:nk]' value='-90' />
          </style-rule>
          <style-rule element='mark'>
            <encoding attr='color' center='1.0' field='[greenplum.41871.617679803200].[usr:Calculation_1730812182851096:qk:2]' palette='tableau-red-green' symmetric='false' type='interpolated' />
          </style-rule>
          <style-rule element='worksheet'>
            <format attr='display-field-labels' scope='cols' value='false' />
          </style-rule>
          <style-rule element='refline'>
            <format attr='fill-above' id='refline0' value='#00000000' />
            <format attr='fill-below' id='refline0' value='#00000000' />
            <format attr='stroke-color' id='refline0' value='#000000' />
            <format attr='line-pattern' id='refline0' value='dashed' />
          </style-rule>
        </style>
        <panes>
          <pane id='3'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[greenplum.41871.617679803200].[usr:Calculation_2730813141847173:nk:1]' />
            </encodings>
          </pane>
        </panes>
        <rows>[greenplum.41871.617679803200].[usr:Calculation_1730812182851096:qk:2]</rows>
        <cols>[greenplum.41871.617679803200].[none:facetbrand:nk]</cols>
      </table>
    </worksheet>
    <worksheet name='Ratio vs SubCategory'>
      <layout-options>
        <title>
          <formatted-text>
            <run>&lt;</run>
            <run>[Parameters].[Parameter 2]</run>
            <run>&gt;</run>
            <run> by subcategory</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='extremesellers_lastweek (ds.extremesellers_lastweek) (demo)' name='greenplum.41871.617679803200' />
            <datasource name='Parameters' />
          </datasources>
          <datasource-dependencies datasource='Parameters'>
            <column caption='1' datatype='real' name='[Parameter 1]' param-domain-type='any' role='measure' type='quantitative' value='1.0'>
              <calculation class='tableau' formula='1.0' />
            </column>
          </datasource-dependencies>
          <datasource-dependencies datasource='greenplum.41871.617679803200'>
            <column caption='NormalisedRatio' datatype='real' name='[Calculation_1730812182851096]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='if ([Calculation_5270812182716952 1]&gt;[Parameters].[Parameter 3]) then [Calculation_8450812182825530]/[Calculation_5270812182716952] else -0.01 end' scope-isolation='false'>
                <table-calc ordering-type='Rows' />
              </calculation>
            </column>
            <column caption='ColourField' datatype='string' name='[Calculation_2730813141847173]' role='measure' type='nominal'>
              <calculation class='tableau' formula='if [Calculation_1730812182851096]&gt;1 then &quot;Over-represented&quot; elseif [Calculation_1730812182851096]&lt;0 then &quot;Stats too low&quot; else &quot;Under-represented&quot; end' scope-isolation='false'>
                <table-calc ordering-type='Rows' />
              </calculation>
            </column>
            <column caption='Count in extreme sellers' datatype='integer' name='[Calculation_5270812182716952 1]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='sum(if [sellers] = [Parameters].[Parameter 2] then 1 else 0 end)' scope-isolation='false' />
            </column>
            <column caption='Category' datatype='string' name='[category]' role='dimension' type='nominal'>
            </column>
            <column caption='Country' datatype='string' name='[country]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal'>
            </column>
            <column caption='Facetbrand' datatype='string' name='[facetbrand]' role='dimension' type='nominal'>
            </column>
            <column-instance column='[category]' derivation='None' name='[none:category:nk]' pivot='key' type='nominal' />
            <column-instance column='[country]' derivation='None' name='[none:country:nk]' pivot='key' type='nominal' />
            <column-instance column='[facetbrand]' derivation='None' name='[none:facetbrand:nk]' pivot='key' type='nominal' />
            <column-instance column='[price_currentdaymode]' derivation='None' name='[none:price_currentdaymode:qk]' pivot='key' type='quantitative' />
            <column-instance column='[retailername]' derivation='None' name='[none:retailername:nk]' pivot='key' type='nominal' />
            <column-instance column='[subcategory]' derivation='None' name='[none:subcategory:nk]' pivot='key' type='nominal' />
            <column-instance column='[taxonomiccolour]' derivation='None' name='[none:taxonomiccolour:nk]' pivot='key' type='nominal' />
            <column caption='Price Currentdaymode' datatype='real' name='[price_currentdaymode]' role='measure' type='quantitative'>
            </column>
            <column caption='Retailername' datatype='string' name='[retailername]' role='dimension' type='nominal'>
            </column>
            <column caption='Subcategory' datatype='string' name='[subcategory]' role='dimension' type='nominal'>
            </column>
            <column caption='Taxonomiccolour' datatype='string' name='[taxonomiccolour]' role='dimension' type='nominal'>
            </column>
            <column-instance column='[Calculation_1730812182851096]' derivation='User' name='[usr:Calculation_1730812182851096:qk:2]' pivot='key' type='quantitative'>
              <table-calc ordering-type='Rows' />
              <table-calc field='[greenplum.41871.617679803200].[Calculation_5270812182716952]' ordering-type='Rows' />
              <table-calc field='[greenplum.41871.617679803200].[Calculation_8450812182825530]' ordering-type='Rows' />
            </column-instance>
            <column-instance column='[Calculation_2730813141847173]' derivation='User' name='[usr:Calculation_2730813141847173:nk:1]' pivot='key' type='nominal'>
              <table-calc ordering-type='Rows' />
              <table-calc field='[greenplum.41871.617679803200].[Calculation_5270812182716952]' ordering-type='Rows' />
              <table-calc field='[greenplum.41871.617679803200].[Calculation_1730812182851096]' ordering-type='Rows' />
              <table-calc field='[greenplum.41871.617679803200].[Calculation_8450812182825530]' ordering-type='Rows' />
            </column-instance>
            <column-instance column='[Calculation_5270812182716952 1]' derivation='User' name='[usr:Calculation_5270812182716952 1:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[greenplum.41871.617679803200].[none:category:nk]' filter-group='9'>
            <groupfilter function='member' level='[none:category:nk]' member='&quot;jeans&quot;' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[greenplum.41871.617679803200].[none:country:nk]' filter-group='10'>
            <groupfilter function='member' level='[none:country:nk]' member='&quot;us&quot;' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[greenplum.41871.617679803200].[none:facetbrand:nk]' filter-group='6'>
            <groupfilter function='level-members' level='[none:facetbrand:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='quantitative' column='[greenplum.41871.617679803200].[none:price_currentdaymode:qk]' filter-group='5' included-values='in-range-or-null'>
            <min>0.5</min>
            <max>99.799999999999997</max>
          </filter>
          <filter class='categorical' column='[greenplum.41871.617679803200].[none:retailername:nk]' filter-group='8'>
            <groupfilter function='level-members' level='[none:retailername:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[greenplum.41871.617679803200].[none:subcategory:nk]'>
            <groupfilter function='except' user:ui-domain='relevant' user:ui-enumeration='exclusive' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[none:subcategory:nk]' />
              <groupfilter function='member' level='[none:subcategory:nk]' member='&quot;unclassified&quot;' />
            </groupfilter>
          </filter>
          <sort class='alphabetic' column='[greenplum.41871.617679803200].[none:subcategory:nk]' direction='ASC' />
          <filter class='categorical' column='[greenplum.41871.617679803200].[none:taxonomiccolour:nk]' filter-group='4'>
            <groupfilter function='level-members' level='[none:taxonomiccolour:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='quantitative' column='[greenplum.41871.617679803200].[usr:Calculation_5270812182716952 1:qk]' included-values='in-range'>
            <min>1</min>
          </filter>
          <slices>
            <column>[greenplum.41871.617679803200].[none:country:nk]</column>
            <column>[greenplum.41871.617679803200].[none:category:nk]</column>
            <column>[greenplum.41871.617679803200].[none:retailername:nk]</column>
            <column>[greenplum.41871.617679803200].[none:taxonomiccolour:nk]</column>
            <column>[greenplum.41871.617679803200].[none:facetbrand:nk]</column>
            <column>[greenplum.41871.617679803200].[none:price_currentdaymode:qk]</column>
            <column>[greenplum.41871.617679803200].[usr:Calculation_5270812182716952 1:qk]</column>
            <column>[greenplum.41871.617679803200].[none:subcategory:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <format attr='title' class='0' field='[greenplum.41871.617679803200].[usr:Calculation_1730812182851096:qk:2]' scope='rows' value='Observed/Expected' />
            <format attr='subtitle' class='0' field='[greenplum.41871.617679803200].[usr:Calculation_1730812182851096:qk:2]' scope='rows' value='' />
            <format attr='auto-subtitle' class='0' field='[greenplum.41871.617679803200].[usr:Calculation_1730812182851096:qk:2]' scope='rows' value='true' />
          </style-rule>
          <style-rule element='mark'>
            <encoding attr='color' center='1.0' field='[greenplum.41871.617679803200].[usr:Calculation_1730812182851096:qk:2]' palette='tableau-red-green' type='interpolated' />
          </style-rule>
          <style-rule element='worksheet'>
            <format attr='display-field-labels' scope='cols' value='false' />
          </style-rule>
          <style-rule element='refline'>
            <format attr='fill-above' id='refline0' value='#00000000' />
            <format attr='fill-below' id='refline0' value='#00000000' />
            <format attr='stroke-color' id='refline0' value='#000000' />
            <format attr='line-pattern' id='refline0' value='dashed' />
          </style-rule>
        </style>
        <panes>
          <pane id='2'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[greenplum.41871.617679803200].[usr:Calculation_2730813141847173:nk:1]' />
            </encodings>
            <reference-line axis-column='[greenplum.41871.617679803200].[usr:Calculation_1730812182851096:qk:2]' formula='average' id='refline0' label='Expected' label-type='custom' scope='per-pane' value-column='[Parameters].[Parameter 1]' z-order='1' />
          </pane>
        </panes>
        <rows>[greenplum.41871.617679803200].[usr:Calculation_1730812182851096:qk:2]</rows>
        <cols>[greenplum.41871.617679803200].[none:subcategory:nk]</cols>
      </table>
    </worksheet>
  </worksheets>
  <dashboards>
    <dashboard name='Competitive view'>
      <style>
        <style-rule element='dash-container'>
          <format attr='border-style' id='dash-zone_38' value='solid' />
          <format attr='border-width' id='dash-zone_38' value='3' />
          <format attr='border-width' id='dash-zone_39' value='3' />
          <format attr='border-style' id='dash-zone_39' value='solid' />
          <format attr='border-color' id='dash-zone_38' value='#898989' />
          <format attr='border-color' id='dash-zone_39' value='#898989' />
        </style-rule>
        <style-rule element='parameter-ctrl'>
          <format attr='font-family' value='Arial' />
          <format attr='border-width' value='4' />
          <format attr='background-color' value='#ffffff' />
          <format attr='border-color' value='#000000' />
          <format attr='color' value='#000000' />
          <format attr='border-style' value='none' />
          <format attr='font-size' value='8' />
        </style-rule>
        <style-rule element='parameter-ctrl-title'>
          <format attr='color' value='#000000' />
          <format attr='font-size' value='8' />
        </style-rule>
      </style>
      <zones>
        <zone h='100000' id='2' type='layout-basic' w='100000' x='0' y='0'>
          <zone h='100000' id='22' param='horz' type='layout-flow' w='12470' x='0' y='0'>
            <zone h='100000' id='20' param='horz' type='layout-flow' w='12470' x='0' y='0'>
              <zone h='100000' id='18' param='horz' type='layout-flow' w='12470' x='0' y='0'>
                <zone h='100000' id='16' param='horz' type='layout-flow' w='12470' x='0' y='0'>
                  <zone h='100000' id='14' param='horz' type='layout-flow' w='12470' x='0' y='0'>
                    <zone h='100000' id='7' param='horz' type='layout-flow' w='12470' x='0' y='0'>
                      <zone h='100000' id='5' param='horz' type='layout-flow' w='12470' x='0' y='0'>
                        <zone h='100000' id='3' type='layout-basic' w='12470' x='0' y='0'>
                          <zone h='12840' id='8' name='CompareRetailers_subcat' param='[greenplum.41871.617679803200].[none:category:nk]' type='filter' w='12470' x='0' y='21728'>
                          </zone>
                          <zone h='21728' id='9' name='CompareRetailers_cat' param='[greenplum.41871.617679803200].[none:country:nk]' type='filter' w='12470' x='0' y='0'>
                          </zone>
                          <zone h='11851' id='25' name='CompareRetailers_cat' param='[greenplum.41871.617679803200].[none:retailername:nk]' type='filter' w='12470' x='0' y='34568'>
                          </zone>
                          <zone h='14074' id='26' name='CompareRetailers_cat' param='[greenplum.41871.617679803200].[none:taxonomiccolour:nk]' type='filter' w='12470' x='0' y='46419'>
                          </zone>
                          <zone h='8642' id='24' name='CompareRetailers_cat' param='[greenplum.41871.617679803200].[none:price_currentdaymode:qk]' type='filter' w='12470' x='0' y='60493'>
                          </zone>
                          <zone h='30865' id='32' param='[Parameters].[Parameter 3]' type='paramctrl' w='12470' x='0' y='69135'>
                            <formatted-text>
                              <run>Low stats threshold</run>
                            </formatted-text>
                          </zone>
                        </zone>
                      </zone>
                    </zone>
                  </zone>
                </zone>
              </zone>
            </zone>
          </zone>
          <zone h='50000' id='36' name='CompareRetailers_subcat' w='87530' x='12470' y='0'>
          </zone>
          <zone h='50000' id='37' name='CompareRetailers_cat' w='87530' x='12470' y='50000'>
          </zone>
        </zone>
      </zones>
    </dashboard>
    <dashboard lock-updates='true' name='Retailer view'>
      <style>
        <style-rule element='dash-container'>
          <format attr='border-style' id='dash-zone_38' value='solid' />
          <format attr='border-width' id='dash-zone_38' value='3' />
          <format attr='border-width' id='dash-zone_39' value='3' />
          <format attr='border-style' id='dash-zone_39' value='solid' />
          <format attr='border-color' id='dash-zone_38' value='#898989' />
          <format attr='border-color' id='dash-zone_39' value='#898989' />
        </style-rule>
        <style-rule element='parameter-ctrl'>
          <format attr='font-family' value='Arial' />
          <format attr='border-width' value='4' />
          <format attr='background-color' value='#ffffff' />
          <format attr='border-color' value='#000000' />
          <format attr='color' value='#000000' />
          <format attr='border-style' value='none' />
          <format attr='font-size' value='8' />
        </style-rule>
        <style-rule element='parameter-ctrl-title'>
          <format attr='color' value='#000000' />
          <format attr='font-size' value='8' />
        </style-rule>
      </style>
      <zones>
        <zone h='100000' id='2' type='layout-basic' w='100000' x='0' y='0'>
          <zone h='100000' id='22' param='horz' type='layout-flow' w='100000' x='0' y='0'>
            <zone h='100000' id='20' param='horz' type='layout-flow' w='99791' x='0' y='0'>
              <zone h='100000' id='18' param='horz' type='layout-flow' w='99791' x='0' y='0'>
                <zone h='100000' id='16' param='horz' type='layout-flow' w='99791' x='0' y='0'>
                  <zone h='100000' id='14' param='horz' type='layout-flow' w='99791' x='0' y='0'>
                    <zone h='100000' id='7' param='horz' type='layout-flow' w='99791' x='0' y='0'>
                      <zone h='100000' id='5' param='horz' type='layout-flow' w='99791' x='0' y='0'>
                        <zone h='100000' id='3' type='layout-basic' w='99791' x='0' y='0'>
                          <zone h='9329' id='8' name='Count vs SubCategory' param='[greenplum.41871.617679803200].[none:category:nk]' type='filter' w='17226' x='0' y='13557'>
                          </zone>
                          <zone h='13557' id='9' name='Count vs SubCategory' param='[greenplum.41871.617679803200].[none:country:nk]' type='filter' w='17226' x='0' y='0'>
                          </zone>
                          <zone h='10350' id='25' name='Count vs SubCategory' param='[greenplum.41871.617679803200].[none:retailername:nk]' type='filter' w='17226' x='0' y='22886'>
                          </zone>
                          <zone h='9475' id='26' name='Count vs SubCategory' param='[greenplum.41871.617679803200].[none:taxonomiccolour:nk]' type='filter' w='17226' x='0' y='33236'>
                          </zone>
                          <zone h='10204' id='24' name='Count vs SubCategory' param='[greenplum.41871.617679803200].[none:price_currentdaymode:qk]' type='filter' w='17226' x='0' y='53790'>
                          </zone>
                          <zone h='15309' id='31' name='Count vs SubCategory' pane-specification-id='0' param='[greenplum.41871.617679803200].[usr:Calculation_2730813141847173:nk:1]' type='color' w='17226' x='0' y='84691'>
                          </zone>
                          <zone h='20697' id='32' param='[Parameters].[Parameter 3]' type='paramctrl' w='17226' x='0' y='63994'>
                            <formatted-text>
                              <run>Low stats threshold</run>
                            </formatted-text>
                          </zone>
                          <zone h='50000' id='39' param='vert' type='layout-flow' w='82565' x='17226' y='50000'>
                            <zone h='48404' id='28' name='Ratio vs SubCategory' w='82147' x='17435' y='50532'>
                              <layout-cache minheight='141' type-h='scalable' type-w='fixed' />
                            </zone>
                          </zone>
                          <zone h='11079' id='23' name='Count vs SubCategory' param='[greenplum.41871.617679803200].[none:facetbrand:nk]' type='filter' w='17226' x='0' y='42711'>
                          </zone>
                          <zone h='50000' id='11' name='Count vs SubCategory' w='82565' x='17226' y='0'>
                          </zone>
                        </zone>
                      </zone>
                    </zone>
                  </zone>
                </zone>
              </zone>
            </zone>
          </zone>
        </zone>
      </zones>
    </dashboard>
  </dashboards>
  <windows show-side-pane='false'>
    <window class='schema' source-height='-1' />
    <window auto-hidden='0' class='worksheet' maximized='0' name='Count vs Brand'>
      <cards>
        <edge name='left'>
          <strip size='300'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='31'>
            <card type='columns' />
          </strip>
          <strip size='31'>
            <card type='rows' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card mode='compact' param='[Parameters].[Parameter 2]' type='parameter' />
            <card param='[greenplum.41871.617679803200].[usr:Calculation_5270812182716952 1:qk]' show-null-ctrls='false' type='filter' />
          </strip>
        </edge>
      </cards>
      <highlight>
        <color-one-way>
          <field>[greenplum.41857.610422361100].[none:taxonomiccolour:nk]</field>
          <field>[greenplum.41858.803400914400].[none:facetbrand:nk]</field>
          <field>[greenplum.41858.803400914400].[none:sellers:nk]</field>
          <field>[greenplum.41863.764809224500].[none:facetbrand:nk]</field>
          <field>[greenplum.41863.764809224500].[none:price_currentdaymode:qk]</field>
          <field>[greenplum.41863.764809224500].[none:sellers:nk]</field>
          <field>[greenplum.41863.764809224500].[pcto:cnt:Number of Records:qk]</field>
          <field>[greenplum.41863.764809224500].[pcto:usr:Calculation_1730812182851096:qk]</field>
          <field>[greenplum.41871.617679803200].[usr:Calculation_2730813141847173:nk:1]</field>
          <field>[postgres.41855.511457280100].[none:category:nk]</field>
          <field>[postgres.41855.511457280100].[none:country:nk]</field>
          <field>[postgres.41855.511457280100].[none:price_currentdaymode:qk]</field>
          <field>[postgres.41855.511457280100].[none:retailername:nk]</field>
          <field>[postgres.41855.511457280100].[none:subcategory:nk]</field>
        </color-one-way>
      </highlight>
      <viewpoint>
      </viewpoint>
    </window>
    <window auto-hidden='0' class='worksheet' maximized='0' name='Ratio vs Brand'>
      <cards>
        <edge name='left'>
          <strip size='300'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='31'>
            <card type='columns' />
          </strip>
          <strip size='31'>
            <card type='rows' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <floating-toolbar-visibility value='1' />
      </viewpoint>
      <highlight>
        <color-one-way>
          <field>[greenplum.41858.803400914400].[none:subcategory:nk]</field>
          <field>[greenplum.41863.764809224500].[none:facetbrand:nk]</field>
          <field>[greenplum.41863.764809224500].[none:subcategory:nk]</field>
          <field>[greenplum.41863.764809224500].[usr:Calculation_1730812182851096:qk]</field>
          <field>[greenplum.41863.764809224500].[usr:Calculation_2730813141847173:nk:1]</field>
          <field>[greenplum.41871.617679803200].[none:price_currentdaymode:qk]</field>
        </color-one-way>
      </highlight>
    </window>
    <window auto-hidden='0' class='worksheet' maximized='0' name='Count vs SubCategory'>
      <cards>
        <edge name='left'>
          <strip size='253'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='31'>
            <card type='columns' />
          </strip>
          <strip size='31'>
            <card type='rows' />
          </strip>
        </edge>
      </cards>
      <highlight>
        <color-one-way>
          <field>[greenplum.41857.610422361100].[none:taxonomiccolour:nk]</field>
          <field>[greenplum.41858.803400914400].[none:sellers:nk]</field>
          <field>[greenplum.41863.764809224500].[none:facetbrand:nk]</field>
          <field>[greenplum.41863.764809224500].[none:subcategory:nk]</field>
          <field>[greenplum.41863.764809224500].[none:taxonomiccolour:nk]</field>
          <field>[greenplum.41863.764809224500].[usr:Calculation_2730813141847173:nk:1]</field>
          <field>[postgres.41855.511457280100].[none:category:nk]</field>
          <field>[postgres.41855.511457280100].[none:country:nk]</field>
          <field>[postgres.41855.511457280100].[none:facetbrand:nk]</field>
          <field>[postgres.41855.511457280100].[none:price_currentdaymode:qk]</field>
          <field>[postgres.41855.511457280100].[none:retailername:nk]</field>
        </color-one-way>
      </highlight>
    </window>
    <window auto-hidden='0' class='worksheet' maximized='0' name='Ratio vs SubCategory'>
      <cards>
        <edge name='left'>
          <strip size='300'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='31'>
            <card type='columns' />
          </strip>
          <strip size='31'>
            <card type='rows' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <floating-toolbar-visibility value='1' />
      </viewpoint>
      <highlight>
        <color-one-way>
          <field>[greenplum.41858.803400914400].[none:subcategory:nk]</field>
          <field>[greenplum.41863.764809224500].[none:facetbrand:nk]</field>
          <field>[greenplum.41863.764809224500].[usr:Calculation_2730813141847173:nk:1]</field>
          <field>[greenplum.41871.617679803200].[usr:Calculation_2730813141847173:nk:1]</field>
        </color-one-way>
      </highlight>
    </window>
    <window auto-hidden='0' class='worksheet' maximized='0' name='CompareRetailers_subcat'>
      <cards>
        <edge name='left'>
          <strip size='300'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card pane-specification-id='2' param='[greenplum.41871.617679803200].[usr:Calculation_2730813141847173:nk:1]' type='color' />
            <card pane-specification-id='2' param='[greenplum.41871.617679803200].[usr:Calculation_1730812182851096:qk:2]' type='size' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='31'>
            <card type='columns' />
          </strip>
          <strip size='31'>
            <card type='rows' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <floating-toolbar-visibility value='1' />
      </viewpoint>
      <highlight>
        <color-one-way>
          <field>[greenplum.41858.803400914400].[none:subcategory:nk]</field>
          <field>[greenplum.41863.764809224500 (copy)].[none:retailername:nk]</field>
          <field>[greenplum.41863.764809224500 (copy)].[none:subcategory:nk]</field>
          <field>[greenplum.41863.764809224500 (copy)].[none:taxonomiccolour:nk]</field>
          <field>[greenplum.41863.764809224500].[none:facetbrand:nk]</field>
          <field>[greenplum.41871.617679803200 (copy)].[none:category:nk]</field>
          <field>[greenplum.41871.617679803200 (copy)].[none:retailername:nk]</field>
          <field>[greenplum.41871.617679803200 (copy)].[none:subcategory:nk]</field>
          <field>[greenplum.41871.617679803200].[usr:Calculation_2730813141847173:nk:1]</field>
        </color-one-way>
      </highlight>
    </window>
    <window auto-hidden='0' class='worksheet' maximized='0' name='CompareRetailers_cat'>
      <cards>
        <edge name='left'>
          <strip size='300'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card pane-specification-id='2' param='[greenplum.41871.617679803200].[usr:Calculation_2730813141847173:nk:1]' type='color' />
            <card pane-specification-id='2' param='[greenplum.41871.617679803200].[usr:Calculation_1730812182851096:qk:2]' type='size' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='31'>
            <card type='columns' />
          </strip>
          <strip size='31'>
            <card type='rows' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <floating-toolbar-visibility value='1' />
      </viewpoint>
      <highlight field='[greenplum.41871.617679803200].[usr:Calculation_2730813141847173:nk:1]'>
        <color-one-way>
          <field>[greenplum.41858.803400914400].[none:subcategory:nk]</field>
          <field>[greenplum.41863.764809224500 (copy 2)].[none:category:nk]</field>
          <field>[greenplum.41863.764809224500 (copy 2)].[none:retailername:nk]</field>
          <field>[greenplum.41863.764809224500 (copy 2)].[none:subcategory:nk]</field>
          <field>[greenplum.41863.764809224500].[none:category:nk]</field>
          <field>[greenplum.41863.764809224500].[none:facetbrand:nk]</field>
          <field>[greenplum.41863.764809224500].[none:price_currentdaymode:qk]</field>
          <field>[greenplum.41863.764809224500].[none:retailername:nk]</field>
          <field>[greenplum.41863.764809224500].[none:taxonomiccolour:nk]</field>
          <field>[greenplum.41871.617679803200 (copy)].[none:category:nk]</field>
          <field>[greenplum.41871.617679803200 (copy)].[none:retailername:nk]</field>
          <field>[greenplum.41871.617679803200 (copy)].[none:subcategory:nk]</field>
          <field>[greenplum.41871.617679803200].[usr:Calculation_2730813141847173:nk:1]</field>
        </color-one-way>
        <bucket-selection>
          <bucket>&quot;Over-represented&quot;</bucket>
        </bucket-selection>
      </highlight>
    </window>
    <window auto-hidden='0' class='dashboard' maximized='1' name='Retailer view'>
      <active id='9' />
      <zones>
        <zone mode='dropdown' name='Count vs SubCategory' param='[greenplum.41871.617679803200].[none:category:nk]' type='filter' />
        <zone mode='radiolist' name='Count vs SubCategory' param='[greenplum.41871.617679803200].[none:country:nk]' show-all='false' type='filter' />
        <zone mode='checkdropdown' name='Count vs SubCategory' param='[greenplum.41871.617679803200].[none:retailername:nk]' type='filter' values='relevant' />
        <zone mode='checkdropdown' name='Count vs SubCategory' param='[greenplum.41871.617679803200].[none:taxonomiccolour:nk]' type='filter' values='relevant' />
        <zone name='Count vs SubCategory' param='[greenplum.41871.617679803200].[none:price_currentdaymode:qk]' show-null-ctrls='false' type='filter' values='relevant' />
        <zone name='Count vs SubCategory' pane-specification-id='0' param='[greenplum.41871.617679803200].[usr:Calculation_2730813141847173:nk:1]' type='color' />
        <zone custom-title='true' mode='slider' name='' param='[Parameters].[Parameter 3]' type='paramctrl' />
        <zone name='Ratio vs SubCategory'>
          <viewpoint>
            <zoom type='entire-view' />
          </viewpoint>
        </zone>
        <zone mode='checkdropdown' name='Count vs SubCategory' param='[greenplum.41871.617679803200].[none:facetbrand:nk]' type='filter' values='relevant' />
        <zone name='Count vs SubCategory'>
          <viewpoint>
            <zoom type='entire-view' />
          </viewpoint>
          <highlight>
            <color-one-way>
              <field>[greenplum.41863.764809224500 (copy)].[usr:Calculation_2730813141847173:nk:1]</field>
            </color-one-way>
          </highlight>
        </zone>
      </zones>
    </window>
    <window auto-hidden='0' class='dashboard' maximized='0' name='Competitive view'>
      <active id='25' />
      <zones>
        <zone mode='dropdown' name='CompareRetailers_subcat' param='[greenplum.41871.617679803200].[none:category:nk]' type='filter' />
        <zone mode='radiolist' name='CompareRetailers_cat' param='[greenplum.41871.617679803200].[none:country:nk]' show-all='false' type='filter' />
        <zone mode='checkdropdown' name='CompareRetailers_cat' param='[greenplum.41871.617679803200].[none:retailername:nk]' type='filter' values='relevant' />
        <zone mode='checkdropdown' name='CompareRetailers_cat' param='[greenplum.41871.617679803200].[none:taxonomiccolour:nk]' type='filter' values='relevant' />
        <zone name='CompareRetailers_cat' param='[greenplum.41871.617679803200].[none:price_currentdaymode:qk]' show-null-ctrls='false' type='filter' values='relevant' />
        <zone custom-title='true' mode='slider' name='' param='[Parameters].[Parameter 3]' type='paramctrl' />
      </zones>
    </window>
  </windows>
  <thumbnails>
    <thumbnail height='384' name='Count vs Brand' width='384'>
      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
      CRYAAAAASUVORK5CYII=
    </thumbnail>
    <thumbnail height='384' name='Ratio vs Brand' width='384'>
      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
    </thumbnail>
    <thumbnail height='384' name='Count vs SubCategory' width='384'>
      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
      Pn4AAAAASUVORK5CYII=
    </thumbnail>
    <thumbnail height='384' name='Ratio vs SubCategory' width='384'>
      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
    </thumbnail>
    <thumbnail height='384' name='CompareRetailers_subcat' width='384'>
      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
      TkSuQmCC
    </thumbnail>
    <thumbnail height='384' name='CompareRetailers_cat' width='384'>
      iVBORw0KGgoAAAANSUhEUgAAAYAAAAGACAYAAACkx7W/AAAACXBIWXMAAAsTAAALEwEAmpwY
      AAAgAElEQVR4nOzdeXxddZ3/8de559x9SW72tUmapU2b7nvLUsCCQNlxQwVRwRFQFNxAHZ3f
      OOM46DDquKCDoIIoMGxSoDhsLaWFli606ZY2aZp9ucnN3ddzf3+kiRQBdWhym57P8/Hoo+3t
      zTmfe5uc9z3fVclkMhmEEEIYjinbBQghhMgOCQAhhDAoCQAhhDAoCQAhhDAoCQAhhDAoCQAh
      hDAoCQAhhDAoCQAhhDAoCQAhhDAoCQAhhDAoCQAhhDAoCQAhhDAoCQAhhDAoCQAhhDAoCQAh
      hDAoCQAhhDAoCQAhhDAoCQAhhDAoCQAhhDAoCQAhhDAoCQAhhDAoCQAhhDAoCQAhhDAoCQAh
      hDAoCQAhhDAoCQAhhDAoCQAhhDAoCQAhhDAoCQAhhDAoCQAhhDAoCQAhhDAoCQAhhDAoCQAh
      hDAoCQAhhDAoCQAhhDAoCQAhhDAoCQAhhDAoCQAhhDAoCQAhhDAoCQAhhDAoCQAhhDAoCQAh
      hDAoCQAhhDAoCQAhhDAoCQAhhDAoCQAhhDAoCQAhhDAoCQAhhDAoCQAhhDAoCQAhhDAoCQAh
      hDAoCQAhhDAoCQAhhDAoCQAhhDAoCQAhhDAoCQAhhDAoCQAhhDAoCQAhhDAoCQAhhDAoCQAh
      hDAoCQAhhDAoCQAhhDAoCQAhhDAoCQAhhDAoCQAhhDAoCQAhhDAoCQAhhDAoCQAhhDAoCQAh
      hDAoCQAhhDAoCQAhhDAoCQAhhDAoCQAhhDAoCQAhhDAoCQAhhDAoCQAhhDAoCQAhhDAoCQAh
      hDAoLdsFCCHEySKTyaDrOul0mnQ6jdVqJRaL0dvbi6qqaJpGWVkZAIqiZLna904CQAgh3iSR
      SBCLxYhGo+Tn5zM4OMjzzz+PzWbD5XJxySWXZLvEE0YCQAghGP30H41GueWWW5g+fTozZ84k
      k8nQ1dXFs88+i8fjwePxoGkaDQ0NNDQ0ZLvk90wCQExZkUiEdDqNoiioqoqqqnR1daEoCoqi
      UFhYiMViQdPk2zyZTJLJZMhkMmiahq7r+P3+8ffK6/WO/9moUqkUsViMnTt3YrFYqK2tpb29
      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
      8N3vfpc777yTdevW8YMf/ICtW7eybt06qqqqyMvLy3a5WTUWlFarlZqaGj74wQ+yceNGuru7
      8Xg8rFq1itmzZ3P77bdLADAaAGNDiZ955hmam5vHZwIPDQ1RV1cnASBENqXTaWKxGJWVlZhM
      JhwOBzk5OeTn59Pf309ZWRnXXHMN99xzD0ePHjV0s8bY2P9wOEwsFvuLLTITiQThcBiXy3VK
      NW38X+i6Tjgc5nOf+xxVVVUsW7aMq6++Gk3TiMfjbNiwgZdeeon8/HxmzJjBzJkzs13yeyYB
      IKacsXkAY4uejW3U7fV66ezsxGq14nA4CAaDhlwC+s00TcNqtaKqKoFAgB07djA0NEQkEqG9
      vZ22tja6urooLS01/N1SIpEgGo0yNDREQ0MDtbW1NDQ0oKoqsViM1tZWMpkMhw8fpqioKNvl
      nhASAGLKcTgcWK1WBgcHGRoaYtu2baiqSkNDA0899RQej4fCwkICgYAhhn2+G4fDgcPhIC8v
      j5aWFm666Sb6+vowm838+te/ZuvWrezdu5d77rmHysrKbJebVcPDwwwODlJTU8OSJUu4+OKL
      j/v34uJiBgYG+PrXv055eTkrVqzIUqUnjgSAmHLGZmZedtll+Hw+hoaGmD59OnPnzuVHP/oR
      uq6TTqc57bTTqKury3a5J4VPfOIT9PT00NzcTFtbG4lEArPZzJo1a7joootobGw0fFiOzYPo
      6+sjGAyOzwoeu4v0+/0MDAyMLz54Kjg1XoUwlLEfynnz5uHz+cZnZ1ZUVBAKhYhGowSDQWpq
      aqitrc12uVk1dvFasmQJXV1dpNNpFEUhFAqhqir19fXU19dTXFx8Sixv/F5omobFYiEajRIO
      hwkGg5jN5vFlNHw+H4ODgzidzvGlx6c6CQAxZc2cOZNUKkVjYyO9vb20tLTw/e9/n5ycHIqK
      io779GZ06XSaVCpFPB4nlUqh6zqqqo5f9MToKrIWi4UVK1bw8ssv86tf/Wp8NdBgMMiePXtI
      p9M8+OCDp8yIKVkKQkxZ+/bto7e3l61bt44vezy2PHRubu74aqBGHt0y9uP96KOPMjg4OL4h
      zFgzmslkwmQycdVVV+HxeAzfEZxMJlm/fj0dHR20trbicDiOm1xot9v51Kc+hdPpxOVyZbvc
      90zuAMSUtWvXLnbu3Mk999xDQUEBHo+HkZGR8Sn9M2fOxGazGToAxjzwwAOEQiGsViuzZs3C
      7XYTDAbZsWMH+/fvZ9myZVRWVho+AMxmM2vXrqW7u5uOjg727t2Lrus4nU7mzZtHcXHxKfUe
      SQCIKScejxOJRHj22WeJRCI899xzOJ3O8V2b2tra2LVrF0899RRlZWVcf/312S45a0ZGRggE
      AphMJpYsWcKNN96I2WzGZDKNrw3U19fHQw89xOLFiw2zYuo70XWdoaEh9u3bx6uvvsq+ffvI
      ZDK4XC5SqRTTp09n5cqV2S7zhJEAEFPO2Fr3uq5jsVioqanBYrGML2aWTqcJBAK0tbUxNDSU
      5WpPDplMBqvVOj5+faxvJBaLoes6sVjsHfcKMIpMJkM6nWbr1q10dXURiUTGF32zWCx0dXUR
      i8Wora2VJiAhsmVsLaCxkStvHb5YWFjIokWLeOaZZxgZGclSlScHq9WK2+0e7wQeWzBvTDqd
      JplM4nQ6Dd9UlslkiEQifP3rX6empmZ8hzRVVQmHwzz++ON0d3fj9XppbGxk1qxZ2S75PZMA
      EFNCPB4f36wjmUySSCTo7u4mFovx0EMPUVpaSm5uLkNDQ7S3t7N7927KysoMuQeuz+fD7/fz
      pz/9aXxvgJ6eHkKhEF/5yleoqqrCZrPh9/tpbW2ls7OTVatWnRJ73L4Xfr+foaEhysrKWL58
      ORdccAFerxdFUUilUhQXF9Pb28tLL72E3W6XABBisiSTSWKxGO3t7eMjMkKh0PiGMOFwmKKi
      Inp7ezl48CDbtm3j0ksvJT8/P9ulT7p4PE4gEGDPnj3jj+m6jt/v57XXXhufIT0wMEBraytd
      XV2sXbsWt9udxaqzL5FIEI/HcTgclJaW0tjYeNxQYovFQmFhIY8++ijBYDDL1Z4YEgBiSggG
      g/h8Pu67777j9mN1Op3s2rWLXbt2Hfd8j8dDKBQiEAhMdqlZZ7fb8Xq9LF68ePyxN//57Uyf
      Pt3wdwC5ubmoqsrg4CDDw8OEw+HxTeEB2tvbOXr0KPX19afMSCAJADEljG3Q/YEPfABd1/+m
      rykvLzfkHYDNZhufKf238nq9p0Sn5t9rcHCQ/v5+XnvttfFVZn0+Hxs3bmRkZISKigoURSES
      ibB//378fj+1tbWnzO5pMhFMCGFY+/fvp7m5mR//+McA48OIk8kkqVSKOXPmjO8R0NnZia7r
      fOMb32DFihWsWrUqy9W/dxIAQgjDCgQCjIyM0NLSMv7Y2PaiwPiib7qujy8OV15eTmFhIYWF
      hVmp+USSJiAhhGFZLBbcbvffPFpMURRcLhd2u32CK5sccgcghBAGZez1X4UQwsAkAIQQwqAk
      AIQQwqAkAIQQwqAkAIQQwqAkAIQQwqAkAIQQwqAkAIQQwqAkAIQQwqAkAIQQwqAkAIQQwqAk
      AIQQwqAkAIQQwqAkAIQQwqAkAIQQwqAkAIQQwqAkAIQQwqAkAIQQwqAkAIQQwqAkAIQQwqAk
      AIQQwqAkAIQQwqAkAIQQwqAkAIQQwqAkAIQQwqAkAIQQwqAkAIQQwqAkAIQQwqAkAIQQwqAk
      AIQQwqAkAIQQwqAkAIQQwqAkAIQQwqAkAIQQwqAkAIQQwqAkAIQQwqAkAIQQwqAkAIQQwqAk
      AIQQwqAkAIQQwqAkAIQQwqAkAIQQwqAkAIQQwqAkAIQQwqAkAIQQwqAkAIQQwqAkAIQQwqAk
      AIQQwqAkAIQQwqAkAIQQwqAkAIQQwqAkAIQQwqAkAIQQwqAkAIQQwqAkAIQQwqAkAIQQwqAk
      AIQQwqAkAIQQwqAkAIQQwqAkAIQQwqAkAIQQwqAkAIQQwqAkAIQQwqAkAIQQwqAkAIQQwqAk
      AIQQwqAkAIQQwqC0v/cLhoeHeeONNyaiFiGEEJPo7w4AgEwmc6LrEEIIMUkSR4+iB4MoGbma
      CyGEoRy9/jOEN2yY7D6AOIMHtrDpjk/zp9d2sKErOjlnHWgn2L6bXZ1hekYSo4/1bmL7luf5
      9LdfZOv+QeKTUokQQpw8JjkAUoR6D3Fw3d3sOdzO/uHEpJw1GRggOnCU9qEEw9H0aCX+gxw5
      1Mzdj+yntSdIalIqEUKIk8ckB4AJEiYYApKTd9b+nU/R+uzP2Bkx05M49pKTf67BhAyHEkIY
      z/+pE/hvkyKViNG1ZzMHjg5ysNMHeW6Gdm/joA/qkgoeFCDFSE87YV83T2zcTSqtAzBtzioK
      iopZ3FgGkT6Ij/DStj6I+SDUSbtrKe7cXC6e7+LI3tcZ6GrnjW7A5gVnEWedtoQ8p4n8TBev
      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
    </thumbnail>
    <thumbnail height='384' name='Retailer view' width='384'>
      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
    </thumbnail>
    <thumbnail height='384' name='Competitive view' width='384'>
      iVBORw0KGgoAAAANSUhEUgAAAYAAAAGACAYAAACkx7W/AAAACXBIWXMAAAsTAAALEwEAmpwY
      AAAgAElEQVR4nOzdd5hU5dn48e/0tr33vkvZRgcRxQKIgAWMGismakw0pr3xl+SNSTTGV2Oi
      JmqIsTdUbKCIBVFRERQQFpa6LNt7352ZnX7O7w8CibIguw6sy9yf6+ISZs6595kRzn3O/TSN
      qqoqQgghQo52uBsghBBieEgCEEKIECUJQAghQpQkACGECFGHJYCA182yZ5/g7j//lb3Vjccc
      KOD3snfv/qA2TgghxPGj+eoooKfuu5VXP2vkghljWfF5JS8s+T9WrnyL5KwxTC1O55NtNYzP
      T6a6yYHa1063sxtMMeh6dvC/96/iXw/9iZqaGjz9DkqnziRMtdPhNjGxJG+4PqMQQogB6L/6
      wpb1W/nh//yFedPG8L2bVG657lJIHs/nf7uXn//sR/zt5c3c9eNzWPp2FUrF2yRMWcCql37L
      z3/yPbw+P59++DYvvL6Oy86Zwm/XbCUrUM3Ma29j4nB8OiGEEEd0WAkoIT2Zj9asYcu6NVz5
      vZ/S3N7CmbPnkZeZRHefE4/bTXdr66HjL776clLjLWRm5pOakUN0hIlZCy7kxltuoaP8Pd7b
      0cG800tO6IcSQnz7qar6pV/ixDssAdx86x9x1m3md39+gKsWX8Utv7mdpx64nbDsKVx21fcY
      E+Xh3Y/KKRmbR/HkU4i0mpk8fQYZ+aPRexpwqGEUF4xGZ7By9qnjmTl/ISatZjg+mxDiW0pV
      VSorKykrK+ODDz7A5/MNd5NC0mF9AMFS/vlafvrrO3jo8ecZm5N4PH6EEGKEcjqdPPHEE/T0
      9BAVFcWCBQvIzs4e7maFnMP6AIKleOoZfPDhGccrvBBiBDMYDLjdbpKSklAUhfDw8OFuUkga
      MAGoqspLL73Etm3b0Ol0+P1+5syZw5lnnnmi2yeEOAnp9XrGjBlDS0sLVqsVo9E43E0KSQMm
      gFdffZWIiAjuvPNONBoNiqLw6KOPYrPZmDJlyoluoxDiJON2u9m9ezeLFi3CYDBgsViGu0kj
      lsvlwufz0dPTQ1paGlrtsc/vPexIVVUpKytj7ty5aDQHOm+1Wi3XXnstb7755qHjavZu5X9u
      +X/84v/9lk0fr+SLvfW8s/JV6jqcQfhIQoiTmV6vp7u7m5dffpl33nkHh8Mx3E0akfx+P8uW
      LeOFF17gueeeo6amZlDnH5YAvF4vZrP50MX/IJ1O96WhWvbOTmJjY9lTvp39+ypo7bJTu38/
      jn7pzRdCHJ1er+fMM88kJiYGg8Fw2PVGHJtAIEB7ezutra2kp6fT398/qPMPSwBGoxGXy4Xf
      7//S606n80t1ujXvryE+dyxhJh3oTJRv38L2neWo8v9RCPE1XC4XGzdupLq6mr6+PpxOqRwM
      hdFo5NRTT2XcuHFERESQmZk5qPMPSwAajYYFCxawZMkS3G43AL29vdxzzz0sXrz40HFXX/tD
      jK5ubrjxx5wx71KybCrzvrOY1FjrN/xIQoiTncFgICYmhoyMDOx2u8wDGCK/38+6desO3fkP
      9ns84jyAbdu2sWLFCvx+PxaLhSuvvJKMjIxv3mIhRjBVVQkEAodGx+l0ukF1uokDVFVl+/bt
      7NmzB4vFwty5c2Uk0BD4/X7uu+8+JkyYQFhYGIWFhYMaUnvEeQClpaWUlpYGpZFCnAz8fj+f
      ffYZu3fvpqCggPr6es4991xiY2OHu2kjjsfj4cMPP8TpdJKQkEBzc/OgyxfiwACdcePG0dDQ
      gNFoJDc3d1AJ4Ii3LoFAgJ07d7Jq1SqqqqpkrQ4R8jQaDVqtlv7+flpbW0lJSSEsLGy4mzUi
      aTSaQx2YLpcLk8k03E0akRRFoaysjHXr1rF58+ZB96UMmAAcDge33347ZWVlxMbG8t577/HX
      v/4VRVEGDOJ1u/B4/QO+J8TJQqfTMX78eGJiYmhra2PdunWH+snEsfP5fPT19TF9+nTy8/MZ
      NWoUXq9X+gGGIBAIYLFYmDRpElOmTKGrq2tQ5+tuu+2227764t///neuueYa9Ho977zzDhdc
      cAFJSUmsXbuWkpIDK3sqSgCVA5PE1r/xOLsd4eQkR6PRaGRIlzhpabVakpKSyM3Npa2tjezs
      bFnGYJA8Hg/19fW0tbWh1+txu918/vnnxMbGEh8fP9zNG1F0Oh1msxmz2Ux9fT0zZ87EbDYf
      8/mH9QH4/X6cTid6vZ5zzjmHvr4+li5dyq5du3jjjTcOHbfqmXuIm7qYT5Y/QUailfqWtax6
      bSl/u+sOTHpJAOLk5PV6ef3113G73aSlpUn9fwisVivFxcUUFxcfeu2rw87FsVFVla1bt7J1
      61ZKSkpwOp1ERUUd8/mHJQBVVdFoNHg8HjweD3BgDsBhfQAqqP/+L6g8/OA/+MuSpzHpZUSE
      OHl5vV68Xi8XXnghK1euPGx+jPh6LpeLdevWYbfb0ev1GAwGTjvtNOlPGQKfz4fT6SQ1NZX4
      +Hja29tJTU095vMPu1obDAa0Wi2RkZE8++yzXHHFFbz00kvU1dWRnJx86Lj41FyW/PUO3v7o
      U1StjvuWPM6rD99Hl90TnE8mxLeUqqqHyhdy5zp4Op2OuLg4tm3bRkpKClVVVXR3dw93s0Yc
      VVXRarUUFhbS1tZGZ2cnOTk5R+yrHciA8wDa2tq47777OO+888jKymL79u18+umn/O53vzvU
      W6+qKn29vRjNFgx6LWh0KH4fOoMRnWwAI05Cqqpit9vZsGEDXV1dREZGMnPmTGw223A3bcTx
      +XwsWbKElJQUWltbufTSS6X+P0hut5stW7bQ2NhIQ0MDWq0WjUbDnDlzGD169DHFOOJEMLfb
      zZo1a2hoaGD06NHMmDEDvf64bR8gxLee1+tl6dKlfP755xQUFGAymbjyyiuJjIwc7qaNOKqq
      snnzZjZt2kR6ejpnn302VqusIjAYqqri8/kIBAKH7vrtdjuqqn6pWnM0R7yim81mFixYEJyW
      CnESMBgMXHzxxVitVlpaWsjPz5e7/yFyu92sXr2aqVOnylLQ38DBcmRSUhJdXV2YzWaio6OP
      +fwjJoCmpiZeeeUVuru7SUlJ4dJLLyUiIiIojRZiJDo4OKK3t5eFCxfyySef0NnZSWKibHk6
      WFqtFrvdTnt7OxEREYOqW4v/eO+993j99dcpLCwkEAhw8cUXf/MEsGfPHpYtW8YNN9xAXFwc
      tbW13HnnnfzqV78iJiYmaI0XYqQxm8243W4+/PBDXC6X3L0OkV6vZ/78+dTU1GCxWKS8PAQa
      jYbZs2ej1+uprKwkIyNj0DcjA24Is3TpUn71q1+RlJSEXq8nNzeXW265hccee+zQcU3Vu+ns
      c7Fn9y66ujp4+cUX2Vy255t/KiG+xcxmMwUFBdTW1lJQUCAloCHy+/1s3bqVqqoq9u3bR2dn
      53A3acSqrKxk3rx56HQ6KisrB3XuYWnX6/ViNBoPm00WGxuL3W4/9OfNa1f8eyLYq1iMWpr6
      dbR0OpgwbvSRFxgSYoTr6+ujqqqKiy66iE2bNtHV1SWjV4bg4KqqLpcLVVWlBDREB+dRHByZ
      NnHixEGdP+A8AK/Xe9jEL0VRvrTEgwYNbr8Pj6ef0ROmkxJl4v3V7+Lyyf9IcfLS6/V4vV4q
      KytxuVxSuhgCv9+P2+0+tIlJWloaCQkJw92sEUlRFKxWK0VFRSxcuHBQk8BggASg1WrJyMhg
      y5Yth5KAqqqsXLmS6dOnHzqu5JRzeOmhO2no9mExBKjYX0Px1CmYdDIHQJy8bDYbJSUlbN++
      neLiYhkCOgQej4fKykp2795NYmIiDodDFtX7Bqqrq3nzzTdZuXIlbW1tgzp3wHkAfr+fJUuW
      0NPTQ3JyMrW1tRQWFnLZZZcFrdFCjEQ9PT089dRTTJw4kd27d7No0SLi4uKGu1kjTn9/P/fe
      ey/z5s3DYrGQm5srS0IPgdfr5cknn+S8887DZDIRERGBwWA45vMHfH7V6/XcfPPNuN1u2tvb
      SU5OHlRQIU5GDoeDTz/9lObmZrq6uga99K44oLe3l+bmZlJTU9m/fz/h4eFkZGRIAhgCrVZL
      X18fTzzxBOHh4Vx66aUkJSUd8/lHLGBqNBosFotsAynEv+l0OpKSkli4cCEAWVlZMjdmCBRF
      4fnnn6eyspLS0lLCw8OZNm3acDdrRNLpdIwZM4bt27fjdrsH3Zl+xKUghBDieFBVFafTyTPP
      PMPEiRPJz88nKipK9lYeArfbzYMPPkggECArK4vS0lLGjBlzzOfLNy6EOKE0Gg02m43Zs2fz
      +eefc+edd/LOO+/Q398/3E0bcYxGI+np6aSmplJeXj7oUWmSAIQQJ5zf7+ejjz4iLCyMSy+9
      FEVRaGxsHO5mjUg2m43Jkycf2hNgMCQBCCFOOK1WS2xsLK2trTQ3NzNr1ixyc3OHu1kjjs/n
      o6amhvj4eNLT06mpqRnU+ZIAhBAnnNvtpqmpiZtuugmPx0Nzc7P0AQyB0WhkzJgxPPfcc3R0
      dAw6iUonsBDihPP7/fzrX/9Cq9Xi9Xq5+uqrB7WKpfgPRVHw+XzodDp0Ot2XVmz4OpJyhRAn
      nE6no6ioiObmZgoKCggPDx/uJo1YWq0Wk8mEXq8f1MUfJAEIIYaBy+WirKyM66+/nra2NukA
      HiaykpUQ4oRyOBwsW7aMTZs24ff7qa+vZ9asWcPdrJAkfQBCiBNKURTsdjuBQACNRoNGoyE8
      PBydTjfcTQs5kgCEECJESR+AEEKEKEkAQggRoiQBCCFEiJIEIIQQIUqGgYYQVVXZs2fPcDdD
      CPEtIaOAhBAiREkJSAghQpQkACGECFGSAIQQIkRJAhBCiBAlCUAIIUKUJAAxIMXnorK2HRki
      JsTJS+YBhCwVR3cbZTsqSMweRYLZx47ddeSMKcLi6WT7lg0sX6/n9784hZ279pOWX0Rmcgyo
      Aar3bKfTrSU9I4uAvY6aThhfPBa/o51tu/aTX1iCxtVNY4eduHAdzR12EpKziDI52bm/jdGF
      JcRFWIb7CxAi5Mk8gBClBny89fwyarq7aWzoIjHJQ5sriqy8CTi3fUhMVgyfVoczL9tDk8dF
      RVMC99y5mJZdn7F0xceEGZ10BZLwtu4lLCGe8NRSvM07iE9No3ZvJ6raTFhmAd17KikoSWTj
      7gCJ3hpMGRl0eRL53S1XYdYNbveib4vW1lb6+/vJzs4e7qaMaF1dXXR0dJCfnz/onazEf/T1
      9VFfX8/YsWNlRzBxbFRVob2/DlOYGZ+9j/S8scSa/dTt3ka138ac8y8k2hpJY0MbhrBw7F4n
      CtDR2UVYZimTJoynu6sZR8BMfnYqWqWbJnzMmTcXT6CfXmc2c6dPxBOWzsyZM/F5+2jq6icn
      O5uYCBVfYOTed2zZsoV33313uJsx4u3du5fly5cPdzNGvIaGBpYuXTqkc+UJIEQpfi8vPvF3
      yhtd6LQwNjWC8opG0kpnkOppYENVLdq0KeT3l1Hr0OL0pPL7235AoHUfTz7wBNU9nWQVL8DW
      W0Z9v4uZ512Fr2oj63btJ2ncVMIdcO68Kbz78D+pdLTR7Z/IWQV2ttQ0kj91AVdeeDp67ci8
      61MUBTiwF6sYOkVRUFUVrVYrTwDfgKqqKIoypO9REkCIUlUVJeDHH1DR6XVoUfH5AugNBjQa
      BZ8vgE5vADVAQFHRaXXodFp6mnbx2GOP0uc3suDS/2Hi6BgCARWD0QCqgs/rR280gAqKt5cn
      H7iTln4vo6ddz0VzxuDzBzAYDOjk4inEsJMEIAZFVRVcTgcB9NhsFrRHueNQVRWv24XbF8Bm
      s6HXyUVfiG8TSQBCCBGi5JZMCCFClCQAIYQIUZIAhBAiREkCEEKIECUJQAghQpQkACGECFGS
      AIQQIkRJAhBCiBAlCUAIIUKU7AcgxFGoqoridMLXTJjX6PVoLbLHgTj+Ak4n/HtBwiPSatHZ
      bF8bS5aCEOIoAr19VF98MYrDcdTjwmbOJOWu/ztBrRqZVFXF7XejMPDFS6fRYdKZZGXQr1Fz
      xZV4q6uPeowhNZXsl1/62ljyBCDEUaiqQqC7G8VuP+pxga95X4BX8fL9d79Ps7N5wPfHJ4zn
      3jPuRYMkgKMJ9PYS6Oo66jHasLBjiiUJQAhxYqjQ4+mh09054Nt93r4T3CAhCSBEqapKZ2Ml
      b3+wntzx08kO9/D+xzuYdPpZRAWaWPPZLiadNgdTbzXrt1cxc+58UmNs8nguxElEEkCoUvx8
      sa4MvUbDa48+RmyiD68tB2XLduo/+5CZF81l2QMP4W2pJn7SRGpqqkmNKRruVgshgkiGgYYo
      VfGzu3ELAYMOo89P/rhJZIYrbPz4Y9oDRvLz8zB57WSedTph+l7e3L4PGS0gxMlFEkCo0uoZ
      k5bL7r01xJXkEeFSqKxoYua8uXznrDE8cM/9jL3wO6RFQEWtjzPGFEnXnBAnGSkBhSiNVs+c
      S65lzn+9NmuReqjGP/3c7/z799OY+1+vCyFOHocnAFVlx7YvaGjr4ZTppxIZZvmvt1TsdicR
      Ecc2xEh8ew10Qf/v1470eyGGSqvRcmrqqXS6Bh4FlBedd4JbJA5LAO+8+DC/f+AlphSmc+/j
      L/LGE/ezZ+8+kjKy2fT2k7z+mZMl9/4Pu3fvJadgDGFmPbt37sQWGUVETDx6v5Oq2iZGjS2k
      t7OVnj4HAZ+PrLxROLvbMFqjiYq0DsdnFWLQNAYDttNPQ3W5jnqcpbj4BLVo5DLoDNw67dbh
      bsaIZ506FWNG+lGP0cfHH1Osw2YC/+ySBcz88Z+4YHoh3b0OXn7kPtbvrWHH/g4umBjDqx93
      M73QjMMQQ0unhyvnjOWFdzbTUVPO1b/4M6889Afyi4vo8EQzKq6f9VsbSA7Xctp3f8yHT9zF
      7x5/jYl5SUP/9EIIIYLisCcAS4SNuqpa2jOtPPTk6xjdXegMZhxOO6Xjz6UvXMvGN//G2Onn
      YjF52bOrjIsW/4T69x+hp6MRty2NB+77CxNnXED+2WP52e9uZ1q6hkXf/wVGWwqlOYnD8TmF
      EEJ8xWGjgG645Te88eTdzL3gEuJSMnE77fR29RBpiyI+PYtVrzzFhRdfzr49u0lMyeL8hVfy
      2J9v4Y1PPiMpazQTMwzMu+Birrr+x0RHxhIbkUD6mKnEBLq48LtXoNdKPVkIIb4NBlwMTlEU
      FFVFr9MdWA1RUdHptKiqSiCgoNPpCAT86HQ63nv1We557GVcPR089OwrjMtLIRBQ0Ot1h+K9
      s/x5fnXrX3lr3SekRn/9CnVCCCGOv2++Gqiq0tfXi85gxmY1D3iIx91PQNVitQz8vhBCiBNv
      wIlg7725gl6X/9giaDREREYd8eIPYDJb5eIvhBDfMgNOBNPoAji623jw3keIzyrmmkWzeeCh
      f9DvVbh+8cW8+PLrdPX084tf/oIXn3qEHqeOm392E+EWw4luvxBCiCEa8AmgfPMG/nnfPfj1
      8Xz86iN8uG4ztoh4Oiu3snbdJpocFmYUprL6482sWrmBiEgDDpf7RLddCCHEN3DktYC0AXJz
      czl15lnUVG6jpsNOZEQkit9PemYqUYnx+H0ql169iOY9Zaz9Yt8JbLYQQohvasAEoAKLf/RL
      arevI2BOYtF5F2BTekjIKSE7K51JRQWkZORTWjIKR1cDuvgczpk6+gQ3XQghxDdx2CignvZG
      7n3oaX77u19j1stioUIIcbKSTeGFECJEyS1+iFIVPx+u/Yz2Pg+qEmD9+o00dPQPd7OEECeQ
      PAGEKDXg5f67/4hd0XPKafOpKltNUy8UTTmd8ek63nxnI6WnL+DMKXmyEYwQJyl5AghhWlMY
      M+ecz7aPV9PcAVNPnUVn+fssf3sV7YpKQ1M7itweHGbTpk28+eabw92MEW/Xrl0sW7YMuQf9
      Zmpra3niiSeG9D1KAghhWswE/AEUUwCNNoG0lCzCkiKJSMkkL9bI+rWf4FKGu5XfPhaLhfDw
      8OFuxohnMpmIjIwc7maMeEajkejo6CGdKyWgEKUqAbZ+to5Nm3eQdspMkvWQmplNZ9MuPL39
      bNi4lYJTZnHm1CJ0UgMS4qQkCSCUqSoH/+f/97aP//kroUF2gxTi5CUJQAghQpT0AQghRIiS
      BCCEECFKEoAQQoQoSQBCCBGiJAEIIUSIkgQghBAhShKAEEKEKEkAQggRoiQBCCFEiJIEIIQQ
      IUoSgBBChChJAEIIEaL0w90AIUToUFSFbe3bcPvdX3o9yhTF6JjRX1qVVhx/shpoiFIDPl57
      /QNOOeN0UmIsAx+jqny27iP08UVMGh0nW0OKb8wb8LLw9YXU2eu+9Pr05On8c/Y/0WqkKHEi
      yRNAyFKp2fEO6ze8zcQp5zIm1cjytz8gb8xUxhdE88rr75KRU0K4to41Lyxn7ZjxXDBrPC8t
      W0FUXCaLvjOHj5c/za4eCxd95zJK8hJl7wAhRhhJtyFMH5HNFd+/mca9n/Ps28tZuPiHOCvK
      eeT5Z5lz+Q3o22oo26UwZ/73ydI38MIbT1E872pyzU6eeuot6snhqjnj+OjNd/GH0IPke++9
      x+OPPz7czRACgD179nDbbbcNaU9geQIIYVqPm13by3HpNMQaY9lZto12g4/EmGT2lG2jTekn
      IiGNiIg4/PGRaB1a9m8vx9DbSVr+OOp2VLB9Vw+WuMyQupMYM2YMaWlpw90MIQBITExkwYIF
      QzpX+gBClKoq1O7bw549VcQXjSc3XGHD52VE5xUzJsHEZxu+wJYxiuxYKwZLDLiaCeht7Nn6
      BUpMOqeWFrB3y+c09riYNmMm0TazlIDE15I+gG8XSQCh7L/2BD6Sr47KOPjXRaPR/OeRU6OR
      DmJxTBRVYX3Tevp9/V96PdYSy4SECTIK6ASTBCCEECFKnreEECJESQIQQogQJQlACCFClCQA
      IYQIUZIAhBAiREkCEEKIECUJQAghQpQkACGECFGSAIQQIkQdlgBee/ZhFi68iIWLFvHos298
      6b22+r2semfdl177ZOXLvPr2an7785/j9CnHt7VCCCGC5rDVQKsqdlE6bR7TCsz88t6HGZ9j
      Y8nDT3PmhZdRsfYpXlnbBe5reXn5W5ScNpcJMeBXPWxat46Gmn088Od7SCwYx3WLpnPX3x4l
      LqOQ/poq+jzdzJh3KVkRXh5b+ir5k86gOM7Px5v34vKCSXGSOfFsZpWmcu/9/2TqOQu5/oqF
      sjaIGHaK14vq9R71GK3FgkanO0EtGnlUn4/uV15BcTiOepwhKYmI+fPRaKU4cSIMuBz0Gy89
      zIOV+7nz4We549e/ILn0DP73l7fwx1su51RU+lpbiQgz8fiSp0m95kzqTLEAPPXAXdT1qqx7
      4l7yE4x8sr2ZN3/9S+bOuIAnH/0Ttz2xnBvmTSbMZuGJhx5n8YIcUsecx8v3/p5b73uIP975
      ZzaFOzFmTeX2X/2SS79zPpFmWbFaDK/u556j84knj/i+Rqcj/dFHMRfkn8BWjSyq30/nI4/i
      b24+6nGWiROJmDfvBLVKDHh1vf4nd+CseIs333qLsPAwrGGRnHL6qUSFR9DSWM5jX3zO6fMv
      ArWG/15KLiwiDEN3gLHjJ5MQayOnYBSpyQlERIWTnpGAVgPPPf8M+dNmodPsQFUhMzuTMIuZ
      rLwsTOqBGFprOFNPm4FJL3f/x5uqqgT8fnR6/aEVPgOBABqtDp32yN+/qigEFAWdTnfSP6Up
      zn4CHR1HPkCnA7//xDVIiCDR3Xbbbbf99wtmq43s3ALmnTcPr72bq6+7kbbGOi686FKmTBpP
      T0873/3uJbg8WmadOZnxEyeTkZ1DQX4ely6+Dnd3M+OnzWLGtPEkp6aTm5lBZFQMxeNKiYlP
      YsHsM+mxBzhnzilMmDyNvPwxZGWkUVhaSmJiPN+/4QYaqiuZf+HF5Gelyxrzx42Koii4HF2s
      eu5RUoqmoAn4AJW333yLHiWCxBgrWg34fF4U9cCSz36fj4Ci0le/i3fXfEJWXgE6rZZAwI/P
      F0Cr1Rz6PaqCX1HQaDT4vF5UjQaNRjvi/p/2b9xI/6ZNRz5AqyX6kkvQx8efuEaNMKrfT/fS
      57++BJSSQtTChVICOkFkOegQpSp+3n/lRd7aWk5Xj4fL5p3JBxs2kZaVh8lTxcZdTYzOnMiM
      U0exfNWHxCclMr4wmbUffwJqPJddcjZ/+svfyYjJ5vR5i6jf8jrVHV6mnHkRFV+8TnOvm2h9
      OHZFy9xTR7FuwxckjxnH4qu+i0U/sv5xtz/4EB3/+MeRD9DpyH75Zcxjx5y4Ro0wisvF/nnz
      j6kElPnM09KfMgiKoqAM8Wn8iP8SvW4XXp8fVVXpd7lwuVxIqjh5BHz9fNywnR/d9DPOGhvF
      Rx+8T3xKLs27Kmn3J3Hl9beSGN3PM0uXYYzOxFHbwJbt7RRNuJ5ZpdF0OnzMPP1svnf1PCrL
      duE3xJEY56V8fwM2s43vXTCOsFPPYUp6Iu3NPfgDelz+AP6AjBQTIpjKy8u5+eabh3TuERPA
      rb/8AX/466MQ8PDr397FH//3Dzjl3+5JQ6szkU00K55/jj17e8nNysbR14kmwUKkxsXq5S+z
      p93BtInj8Tu78UYZiIoOx2C1EhEVBWiwGQyYzGY8jiZ27NmG06XH0dGD2aDHaDARHR2FUQtt
      gT70MRZ27d1Fn0f+EgkRTKNGjeL3v//9kM4dsBPY0dlAvzENX+VG7N6rAQ0jrnArjkqjM3LZ
      DT+kpq6F8MhoYqKs1Nc1YolOIsoMrc1tGGMSSI4yUVdTi9YWR3ykBVVrwqAuQNXqKS0sxmI2
      cd3P8+jrbsOvNRJmi8CsB7PFQKpqRFecjKqDpsZmbJEJJIcbhvujC3FSMZvNJCcnD+ncARPA
      u8tfoqGuHo2ziRVfmfglTg4ajQaTNYpRow/czYNK/qjRB94DwiKiDh2bkz/60DkHHLiIWywH
      /hRtMhMVHfmVY8AEYDWhqioFow9/XwgxvA5PAGqA1R9t45lnn0TrauOam28lJWg/QQkAACAA
      SURBVDETWTXi5PPli/GXL8yDvUwf7cI+0i/6xpxsws4668gH6HRow8NOXIOECJLDRwGpKs5+
      FzabFVQVh9OJVqtHg4rZYpFKkAg5xzpQbqQnuuNJVRQ8+ypRfV8zo9pmw5iVJd/lCSLDQIUQ
      IkRJXUcIIUKUJAAhhAhRkgCEECJESQIQQogQJQlACCFClCQAIYQIUZIAhBAiREkCCHGqEqCv
      u4OAcvTpID6vB7/fR0eXHUWmjghxUpAEELJUPC47lRU7ef5fD9DlcFJTXU1XrwOXs4/GxkZ6
      erqorq6m1+Fk3VsvsqtqP399aBn7qmvptTvoszsI+H3Y7Y5jni0rhPj2kA13Q5Ti9/LKk49T
      5fBQ39CH7aVnqG3vR9+vEpcMe1o8xLj6MKUn0d9nQevdxfj4XDqrPmDFC03YYpJwuTTMn1XI
      Rzt6uP675yI7eIqj8Sk+Htr6EN3u7gHfz47MZnHhYrQauS89UeSbDlFKwMNeVxOXXXENp4+K
      pqKnikWLryUu2sDe/RbOO/s8ujThfO/664jurCJvbCnZ6WkkxJ3HtYsvxm01k2au5uVXVjJ6
      wgR0snaL+BqKorC6ZjXLK5cP+Gtdo6w8fKJJAghROr2FqfG5PPngfVTU+ZiYXMRz//gb1Ro9
      haXJWGPimJZu5v47/g9X3njC9T4+3LyTiOQw9AYTkRExTJw4g5r9BiZmx8kigUKMQFICClEa
      nZ65l3+fGf0ujEYTRr2Ws50u9GYLep0GrVbH+NE/ZY7LhdliQ0sAnwI6jQ6DXstVc6JZ9txj
      zLpyLmHG0Nq/tb+/H5/PR2Rk5HA3RQi8Xi92u52YmJjg7QksTnYadHoDkRERWMwmdHoD4ZER
      WEwGDHo9Wg34PR5sYREYdBpcLgWz0YjRqEej1WKyRHD+xd/notlTQ27p3nfeeYdHHnlkuJsh
      BAC7d+/m1ltvHdK58gQQolRVxetx0d/fj9Eajlmvoae3D7M1HINWxeHoY82TSzjluluIVnv4
      4KMGZs8pxu12YzTbMGkVFAVQVFAZ/A4yI9iCBQtQFNnbWHw7FBYW8te//nVI50oCCFWKj5ef
      eoD6LifW8AwyYy18tnMfMbFxpMfBpoou4u0NtDz/IKl5JdTXKKx4/F62dIJNm0tJVD1bm7oZ
      P3MuF54zM6Q6gY1G43A3QYhD9Ho9ev3QLuVSAgpZKl0dsSy85CYUVxer3vuIxLRcXG3d1NQa
      OH/elYRp21j3bh0lo3NpqXei6Xdw7Q3XkRZuwmCwodUZaHO6kSkA4phowGawEWYIG/CXRW8Z
      7haGHHkCCFkavL4qHnnin4TFxXPW9AnsaKhFjTKTEBWJyWoiNX0815w1muUr16KPisNsMmMy
      GIkKN9Lk7sGv+qhv6UAJtRqQGBKj1sjj5zyOog5cPtNr9Wjk79EJJVtChig14GHJ355l0uyz
      GJ2Xgs0AnR1dGMMiMRt06PQGFI8LvclEv8uDRqvHiB+9xYrP4wPVS1ePg4ioGGwWY8h1BAtx
      MpAEEKJUVaGv1441LByDXiqBQoQiSQBCCBGi5NZPCCFClCQAIYQIUZIAhBAiREkCEEKIECUJ
      QAghQpRMBAtRqqri6G5l/cYysseWYA70k5CaQUdDLah+yvdUk1c0Cau/i51VjWTkFROt6aFs
      Ty3Fk6eRHBMmY/+FGOFkGGiIUvweHrnrHvrComirbSAqNZazzpzBe2u3k2/24sDFntYk8gxl
      GEZNoW67j8T+jfTFpzHp1DOYdfpUtJIAhBjRpAQUolQlQGtvL6kZ2aSlp3LKmEReePhJCscV
      01LXiN4WRr/XTaTJxDnnzCYnPpy0ieMJM/pYV1XP1+whL4QYAaQEFKK0ehPnnXs6r334GbGj
      JjFhxjR2b+tm6rhROHZYqG1sJyk6h7j0PCx6I2m5ifTZm2lodVEyNiPkVmxpsDdQb68/7HUN
      Gorji7EZbMPQKiG+GSkBhTBVVVEUBa1W+6V6vqooqGjQajXHdHww+Xw+enp6jkvsb2JV1Spe
      3ffqYa/rtXr+cMofSA1LHYZWCfHNSAIQ3yrf1gQgxMnoKwlAZctn6+l1eQHIzCsgJz34dzZ7
      d2wjKXsUkTbz1x7bXF+NX28jPTkh6O0QQohQprvttttu+88fVd54bRl/+dPtVLY7ycrKxWvv
      oLmjG5NRS119O5pAP+3ddlSfi+07dhMdG093RzMtbe00NreTEBdHe0sDu/buJyEhkcba/bR3
      tNPn8FBXXYHeFslrjz5E4tgJuLubqaxrISE+nu6OVnbs3E1sQiIeZw9lZeWEx8Sy+ul/srmx
      j8LsZLZt20lEdBx9XS04fRq6O1pQNTqqqmtobG4hMSFehiYKIcQx+konsJYbfvL/qNjwKWde
      92Pywh385v/+wo6yjdz78NPc8sMbsFg03Hr3g/zxlz9l3IRSWt1mZo6y8H55Kw0VO3hwycPc
      fOPNTCjKRZdchLbmXfzRRax89XXOO/dMlPgcIpu3k77lU+644x7G5CZz/nev5++3/4bSklLS
      Jp3GB888yOipU9m+p5vrzykm4OljwZy55BeXUNXiYt64MHSjL6J23bOcff5iLr7kSm759a8o
      LSocnm9RCCFGoKMOA+3s7sDp6MeiM2A0xTN3Wh4N3QbGZZrwh2Xxt/vupHLPFrwBlUu+91Mm
      FuVRX1FGYsEp/OWu37J503o0qPziD7eRmpDMb356Ax5HDxqgobqc3Aln8X+33U5WvAmvOYG7
      /3IXp5ZkU2s3cP9999NdvwOXL4Crp4VufwR/u/9u2uvKcSsaVEXB53ahQSW7qIQ7fvcLufsX
      QohBGDABxMQnYLUYIaBidzqIjIlm39YP2dpu4oaLprFszV6m5pqYM/8yFl9/MwlxsYTZzMTH
      JzJ64lnEBGq58PKb+fnPfkZsYjImg4G0tFT0JjMJcbFExycx8dT5uOs+48obbsKpjWJKXgTn
      XnAJFS0uLp9bzOzZc1hw5Y0kJcSRmlPEnKmZzDlnERdc/iNOn3EWrzxyD3srWrFYbeRnjT7R
      35sQQox4XzsKKBAIoNXpDh/3raoEFGXA9w4OF9TpdEf94aqioKig02lR/x1P/+9zAoHAl4cb
      funnqQQCXx9fCCHEkckwUCGECFFH7AN459VneOfjTagBH8+/uJxXX3wJt3IimyaEEOJ4GjAB
      KH43L731Pi8ufR5FDfDZxjI2b/wCvzwrCCHESWPAtYB2f74WjyYCWndTtq/5RLdJCCHECTBg
      Alj22gouWHA+WmcJTz79rCwZKoQQJ6HDE4Dqp3TyHBZdcC4ofjy8QlRsEkY1gFGG2QshxElD
      RgEJIUSIkuqOEEKEKEkAQggRoiQBCCFEiJIEIIQQIUoSgBBChChJAEIIEaIkAQghRIiSBCCE
      EMeBqqqHlsYP9nQrVVXp6urC4XB8ozgDLgUhhBDim2ltbaWmpoZt27Yxbtw4pk6dGtT4Gzdu
      pKWlhbFjx5KYmEhmZuagY8gTgBBCHAe7du1i/fr1BAIBNm/eHPT4hYWFBAIBduzYQX19/ZBi
      yBOAEEIcBzk5OXzxxRfk5uZiMBiCHr+xsZGtW7cCYDKZmDFjxqBjSAIQQojjwGAw0NPTQ2tr
      K0lJSUGPb7fbGT9+PGazGbfbPaQYkgCEEOI42L9/P8nJycTExFBVVRX0+KWlpQDs27ePwsLC
      IcWQPgAhhDgO8vLyaGtr46OPPmLcuHFBj9/T08OaNWsICwujv79/SDHkCUAIIYJs165ddHd3
      ExYWRnh4OH19fUH/GfX19SQlJREZGUlTU9OQYsh+AEIIEWQej4etW7fidrsZNWoUVquVyMjI
      oMVXVZXm5mYef/xxAoEACxcuPFQSGgwpAQkhRJCZTCYMBgNvvfUWL7zwAhs3bgz6z2hpacHl
      chEIBHjttddYv379oGNIAhBCfCvZ7Xa6u7uHuxlDlpWVRWZmJn6/n9TU1KDH7+3tZf78+Vxx
      xRVkZmYOaa6B9AEIIYbE7/fjcDjo6uoiLCyM+Ph4NJrgbRy+f/9+1q1bxymnnEJ0dDTZ2dlB
      jX+87dq1i7Fjx5Kfn8/q1asZO3ZsUONnZ2fzxhtv4PF4GDt2LLGxsYOOIQlACDEkVVVVfPDB
      BzQ0NJCUlMQPf/hD9PrgXVKSk5OxWq2UlZWRkZFBVlbWiEoA8fHxvP7665SXl5OVlRW0uKqq
      smXLFtasWYPH40Gr1aLRaFiwYMGgY0kCEEIMSSAQYP/+/YwePfobL0o2kJ6eHrZt24bb7aav
      r4+zzz47qPHtdjsNDQ3s3r2bvLw8iouLg5pgEhMTmTFjBl988UVQEwBAUVERbW1tWCwW0tLS
      2LBhAzqdbtBxJAEIMUwCgQB9fX10dXVhNBpJS0sL6gVIURS8Xi/9/f0YDAbCwsKCGj8nJ4cp
      U6YQHR1NXFzckC5AR+N0OikqKsJgMODxeIK+omZ5eTlbtmzB6/XS2tpKUVFRUL+fbdu2sWPH
      DlRVZcOGDZSUlAQlrkajwWg0kp2dzapVq9i6dSsTJkwYUixJAGLE8vv97Nu3j7a2NlRV5bTT
      TgvqRSgQCNDR0UFHRwd6vZ78/Hy02uCNm2hqamLFihW0tbURGxvLDTfcgMViCVr8xsZG3nnn
      HWpqag6VaIK5Jk1NTQ0VFRUkJyezc+dOioqKgloCysvLo6enh7q6OlJSUoL63cOBEk17ezvj
      x4/H6/UGvbyUkJBAZ2cnpaWlKIoS1NgAUVFRmEwmHA4HPp9vSDEkAYgRq6Ojg/fee4++vj5i
      YmIoKSkhJiYmaPFbW1t55ZVX6OrqIioqipSUFMLDw4MWH6Curo6CggLsdnvQL0Aul4uamhpS
      U1Nxu91Bv4M2GAw4HA6qqqrIyMgIevsdDgfvv/8+KSkpmEwmVFUN6s+IjY0lLCwMj8dDcnJy
      0OIeFBERwbRp09izZ89xmQm8detW+vv7iYmJoaOjY0gxZBioGLEsFgt2u53c3FyMRiNmszmo
      8fV6PS0tLaSnp6PRaIL6dOHz+ejs7GTSpElMmDCB5OTkoJd/rFYrU6ZMYfbs2eTk5AT9Djo1
      NZX58+eTmprKtGnTgh7/4CJqsbGxdHd3Bz2BVVZWYrFYMBgM7Ny5M+jx9+3bR0VFBRaLhd27
      dwc1NkBSUhJJSUm0tLRgt9uHFEMSgBixdDodRqORzs5Ourq6+Pzzz4f8KPxVPp+P6upq8vLy
      GDVqFFFRUUGJe5Df72fnzp1UVFSwZcuWoNfQ7XY7L774ImvXrmX58uVDXivmaKqrq9m+fTtt
      bW188sknBAKBoMZPT0/H6XSyY8cOJk2adFxKQPX19Xz22WfH5QkmJycHj8dDdnY2BQUFQY0N
      kJubi1arpbi4mFNPPXVIMSQBiBHL5XIRFhbGueeei9lspry8nM7OzqDEDgQCNDQ00NXVRVNT
      E5mZmUGtn1ssFubPn4/VaqWnpwen0xm02ACRkZF873vfIzMzE5/Ph9frDWp8OJCAGxoayMnJ
      QaPRBP0C6vP5sNlsZGRkBLVv4SCdTkdGRgbz58/njDPOCHp8rVZLd3c3jY2Nx+X7Lysro66u
      DoANGzYMKYYkADFiWa1WFEVh7dq12Gw2bDYbJpMpKLEP/sNVFIW6urpDvw+m7u5u0tLS+MEP
      fkBnZycejyeo8dva2tBoNISHh+PxeILe/qSkJGbNmoXVamXs2LFBv0PXarX4/X6qq6upqakJ
      eokmISGBKVOmsGLFCpYtWxbU2MChzveYmBhqa2uDHt9ms9Ha2sr27duJjo4eUgxJAGLEMhgM
      xMfH09zcjMVi4cILLwxaqSYxMZFrrrmG+Ph4IiMjiYyMDPowx/j4eDo6Onj44YeJj48Peh9G
      XFwc0dHRKIqCx+MJ+h16bW0te/fupaKigh07dgS9BKTX67FYLAQCgaCV9v5ba2sr69atY/78
      +Zx//vlBj39wOej169cHbQjofysoKGDq1KnEx8eTn58/pBgyCkiMWJ2dnVRUVOD3++ns7MRg
      MATtIqfVarHb7TidToxGI42NjTidzqCu6KjRaNDr9Xi93qBf/OHAHeLBslVJSUnQE1hERASt
      ra2UlpYel1FMHo8Ht9tNaWkppaWlQY9/8O/Ljh07iIyMHNJSCkfT09PDuHHjiI2NHfIonYEc
      fBLatGkTDoeDgoICjEbjkGLJE4AYsaxWK/Hx8URHR+N0OoNe4oiIiMBut1NeXo7FYgnqGH04
      UKKJjIzkpptuor6+PugloINlqwsvvJDKykr8fn9Q40dHR5OQkIDX6yUtLe24lIDsdjuBQOBQ
      rTuY6urqKCoq4rvf/S7btm0Leompq6sLi8VyaKROMFVVVbF582a6u7txuVxDfkKSBCBGLJvN
      Rl5eHiaTiUmTJgV9jL7JZCI3N5eEhATy8vKC3hEZExNDc3Mzzz77LDabbch3cUcSHh5OS0sL
      a9euxWAwBP0CXVdXh9/vPzSiKdgJpqmpiejoaCwWCxUVFUFN8KqqkpKSwtatW3n++edJTU0N
      +hNGYWEhDQ0NrFy5kmnTpgU1ts1m46yzzuLss88mOTmZiIiIIcWRBCBGJFVV6e7uZteuXUya
      NImqqqqgrkejqirt7e309vZy+eWXs2PHjqCP1DEajcTGxtLb20t6enrQL9BWq5W0tDQSExNJ
      SkoKevyYmBhaWlrYsmULiYmJQS8xpaam0trayoYNG4I+C7uqqopPPvmEiIgI9Ho9YWFhQYt9
      0ME9gWfPnk15eXnQ4mo0GpKSkpg0aRITJ05k4sSJpKenDymWJAAxIvX29rJmzZpDyxG0t7cH
      9Q6ura2NFStWsH37dlatWkVHR0fQL3BtbW0AXHvttezcuRO32x3U+Ae3CZw+fToVFRVB70h1
      Op1MnjyZH//4x5x//vlBv4P2er0kJiYyZ84cpkyZEtTY8fHxjBo1CoPBgM1mo729nfb29qCW
      gRRFwel00tvbG/TvXlEUfD4fLS0tvPLKK7z33ntDiiOdwGJEMplMFBcXU1hYCMDkyZOxWq1B
      ix8dHc2iRYsOXRCCPdO4oaGBl19+merqalpaWggEAkFPMCkpKaxevZolS5ZQWFgY9BKWVqvl
      k08+YefOneTn5/Od73wnqJ8hOTmZKVOmsHz5clavXs1ZZ53FvHnzgvIkEBERgaIodHd3k5mZ
      yRdffEFTUxM33nhj0BLZ2LFjqaqqory8nJkzZwYlJhx4Ov3oo4/49NNPiYqK4sMPP+Tiiy8e
      UixJAGJEslgsFBUVHbf4RqPxuKwPc1BiYiLXXXfdoT8fnNUcTOHh4dx00014vV5MJlNQ79Br
      a2tZs2YNaWlphIWFodfrg/4E0NTUxKZNm5g7dy6lpaV8/vnnQb1Dt1qtxMXFYbVaycnJCXqJ
      b9euXWzYsAFVVbHZbBQXFwcttsvlwu12s2HDBn70ox9RVVU1pDiSAIQYBgaDIejLS3zVwfWL
      gj16CQ6UUAoKCqivr2fq1Kl88MEHKIoS1Dq9yWSio6ODqqoquru7g15mGj16ND6fj97eXhYs
      WIDf7w9qfLfbTVFREVqtNugzgc8880zGjh1LX18fH3/8MbNnzx5SHEkAQohBs1qtjB49ms2b
      N7NmzRoSExOD3snc2NhIbGwsVquVpqYmVFUN6s/Q6/WHVuk8HjuNlZSUEBYWRnV1NSkpKUGL
      q9FosFgsZGVloarqN9rHQKMGe/CrECIkqKqKw+Ggv7+f2NhYdDpdUC+knZ2dPPbYY3R0dLBg
      wQJOP/30EbUl5H8PWw32WkmqquJ0Ounp6WH//v3k5eUNaeN5SQBCiG8lVVUJBAIoinKoj2Ek
      JYBt27ah0WgYNWoUWq02qIsJqqrKBx98wL59++jp6SEhIYHvf//7g44jJSAhxLfSwaUyRiqf
      z8eyZctISkqipKRkyHX6I7Farezfv5/JkycPeRLeYQW13u4OampqqG9oxB/4zyNMR1srbu/X
      /5Cejja2bS/H3v/NxjR7vd5DPf4+r5vW9m++loai+Glqbv3GcYQQ4mgqKyvRaDTk5uZ+aU2m
      YFBVld7eXlpaWjj11FOJjY0d8hDlwxLAo/fdziWXXcfC8+bypweWYrfb6erq5OlH/k5FUx9O
      Rx8dXQd253H3O+no/M9OPXV7t3DaGbO4564/ccasC3C4PfS73Hg9bjweLw57H12dndjtDrq7
      u/B6fXS0t+P2+PB63Dgcdjo6u/F5+jhvwUU4XF4c9l72fbGBH/3k/+H3eWlrbcPl9mDv60NR
      VRz2PtxuFw67na7uXux9PdidrgNfUk83vX12VMDldNBSv5/LLrkSJeCjra0Nnz+4qxcKIQQc
      WCo7JSWFxMREIiIigj7HIxAI0NPTQ3NzM42NjWRnZw8pzgDPVxrGT55GeH8ltY37mTZ5Aknp
      xSTH+MnbU85Vt/yc2DAjP/jN71jypzuwRRi46Mbfc92i2bz75utcsPin3PHLa9izZy8fr3qe
      1z+vYVaOhjrjWF656wdYx5yD6mjCbtdx2tQCyvY1oOrDWTxvHP94cTWuziZu/J//5dN1H/Hy
      S8/z93vuJysljkB8Fn/535/z6Z4afMYYdN37uP3Bp7nxsov5/tXn8vSKLXQ3VDCmcBy1di93
      /+xKfnP3EjQ+N3fd/yB//PkPSU7LpE9V+e1NiylrdBCZMoYXHr57RNUVhRDffmFhYWzZsoWP
      P/4Ys9mMy+XitNNOC0psjUZDTEwMxcXFLF269NAkwvHjxw861oBjqlqbG8mYcAZ3/78fYbZY
      WPb6S0QYdewu28qEs+by3MsvkWtTqO7qIz0zm8bKA5sdaPU6+vv6Ufw+1qx+l37fgRJSwK+A
      Cl5jIsuef4Zoi4Z/PPsszbUVJCclYdO66XR4WXT1T1kwezoZmaPISs6hICOGrMkz+OMdv0JB
      xRgeRnR0JG3tnSy+6EL+8LOfkDf9PCIMOr57/Y+ZmpfKb+79G5HOTtZ+uIqb/ucefvS9C3n5
      ladxxWTxryV341cCvPfxp+TkZOPoaSOgSB+4ECL4TCYTo0ePJjk5OejLfMCB1UaLioqYMWPG
      kOcZDJgAzllwGT+58YfEx4Sj18VhNelBA0WTp7DlvRXMP/d89jv15MdHsHfvHlKyMwFYePHl
      fLbqSSZOnMTqL2qZOGY077++jAefews0EBVjw2LQAWFE2mzMmzOb2poq+jx6YsKMoNUCGtCY
      MPha2VTRQePGj/nFL/+ISQtlmz/DYXfT7/BwziWX88XGT7jiqstBAzrtgbv4A3fzGs6as4i/
      /d9PeOixFSy++kZi+hq49KqfYjXqOW/2Wewq34E1PBatVu7+hRDBV1xczOTJk0lISGDSpEnH
      JX56ejqNjY1DnrV+2DDQg3/UaDT/Ne1aAxz4vaoECCig1+tQVQWfX8Fo+M80cFVR8Pr8GI0H
      Oj38fv9Re/J9Xi96o5GvXoYDAT8arQ5UBdCi1WpQVYWAoqLX6Xjy73/i/uffZ/NnH2I8wjVc
      CQRQNRr0Oh1KIIAC6P49kcTr8WI0GaX8I4Q4LjZs2MCaNWvIzMwkPz+fU045JWixVVVlz549
      rFy5EoPBwLhx4zjzzDMHHWfEzgPoaGvBZIsk3Bb8ae5CCPFNNDc3s3LlSjweD+PGjSMpKWnI
      2zZ+laqq+Hw+3n33XaxWK8XFxVgsliHth6G77bbbbhvgR/DuGy+z8v31FBWVYDLocHY18veH
      /sX6zbuZNnU8Wo2Gmso9hEXFov3KXXRnaz0P/+tf9HkNJEQa+Oc//0Fbn0JBbiYaDVTuKuPR
      x54iLD6ZpLiYIX0JVlsYJmPwhlYJIUSw9PT04PP5iIqKOrQYXHx8fNDib9u2jfXr17N//372
      7duHoihDGgk04BNAT3Mlf7j/GS4+u4SyVh0/vnohn765lLV7+1gwdxYlY/Mg4ObySxfy89//
      lfodW7Bj5buXLsSs13H3//6UWVf9hKV/u4eY+HDOuPh63n78QW6+4y8kR1r4zQ9v4Iqf/oR7
      H3qMJ/9xf1C+ECGECAWqqqIoypeWmtBqtUMaajpgJ3B7RytZeeMpLi7F0XRghI+93w2Bfv74
      m1/T5fKDzkTRmHza93zKfqcFm7eeZW+uByAqMpp1H37Ezu1fENCF8enaj9mx7QuaOw/s2GS1
      wF/u/jNWSxgjsv4khBDD5OAqrwaD4dCvoc4zGDABREdE0d5aTWtLHYbIBOx2O1pzJNdc9wPG
      5cTT5fCi0WgxWcwE3B5S09LJTE/Hae8HYPL0GYwdnUd2/ljmzDqDksICsvLHEB9hpN/lYn+P
      l3898iiutlYCkgGEEGJYDJgAYtNHkxWl8PiytVx+0bm89sYb5Obn8sCdt2MtOIXc+AM7LxVk
      FeD//+3dd3xUVfr48c+9d3oy6ZNGCCGBJISW0ASUKiLIouDaUey7uuvufl3d7/bV3zZ3v5ZV
      17K7WLFhoykd6UWQGkpIIAkJIYH0Nplkyr2/P9Aom0QhyU1hzvsfmHNnnjmvSXKfufec85zI
      VE7sXM7SzUe58bpzCx3sIUGsXfkJ42bfTFxMOBtWf0LapGvwVRWy60AWd9w4i9///vdcfdPN
      GMQkHEEQhG7Ra2cBCYIgCB3Trt0VvK4a9h8+AYCzupytO/ahATlHD1Fd//WKNF9TPXszs/ni
      i718W5ppdFaReTS3PV0RBEEQ2qnVFVqapnFo325OFpcxZepk8rIzyS8s48rpMzhbkEXW4f1s
      P6mRMWQA1UW53HrTLazaupMd61YxZmYwdoMRh02jsu4s7y/+nMaqk4wcNZLayrNUN0g4ggyc
      qainrCiXMpdGxoBwlq3MREElLTWBnGN59I1zsHbDZkaNm4TJW8eO3QcZP2kKkWEXP9dVEARB
      aKnVBOCqOsPyVZsJkSt4pdzJxo8WcudNs/jn6++yf+tGbpwxBp/v6wVY999zG3997PeMHz6A
      qjN5rNxbwvREyHGr58VVvC6e+cdCxqUG0mSP5+zps1Tk7ad+6lVoqpd/AEJsPgAAIABJREFU
      L1jIs39/hDdffYuGmlzGzbiRnz/8CJEWF8PHT2Pjlp3cPGe6vp+IIAiCn2g1AdQ31JCZlUly
      pJ3gCB8jxo5lxqwZ7Pv3EqLiBzF71kz2v7Gl+flhcanc3D+KXz//Hi+OvgxVU2nynSvh8E2B
      kQnYpTJWfV7Mw/cP4f9WrycYFz713D4Dqqai+rx4gIKKetKqKklIjGd8xlD279tJbW6ZSAAd
      8NXycUEQBGgjAZiMNhwhdrwGC2EGCI/vi2y0MCAtndL9q/jln/5B8mUzzz3XZic2OpLrZt3C
      jgPHiO2bSPE7b/N+Nsy+9WYS4gNxh8rNtX6unz2Lbfn1hAWHEWCSMRuDkGQb8X0dWN0n+MWv
      /0ri4CFcNS6J5ZsPENsvjbqq01TXexg8NrWrPpdLVmqq+AwvVWXPPkfD/v3f+TwlIIDY//s7
      cmBgF/RK6MnanAX0zaJwF9J+sc9p7XltPuarUnQSonabILTu1IM/on7jxu98nhwURNLqVRjC
      2leGRbh0tFmms62T94VUz7zQCpv//bxveyzO+4LQM5S98CKugwdbtCvBwcQ88VfkTtz+UNBX
      791xWdCVp/4si1YVcNuNY+jczeyE3q7xyBGcW7e2aFccDlDVVl4h9FQiAfgpTfNxeMcmlm7Y
      QeKQsSRHNLJ64xFGTZ1NWHkm67ZsIV8axaDQ06zZfpCkjGu4afZo3HXlLH3vDU7VSQwfNRl3
      8Q4OnrEwZ+4cGk7uY+WW3Vw2aSZK3XEyC50k2r3kllYRnTCOpMASNmQWM27KXCaPSkLsxSMI
      3atdC8GES4CqUlJSzoCEvuxeu4qde/fgsRopPZ3P4u3HufnBewkNtHHmdBX9Ex2s27gbrwY5
      mXsoNSQzOiWGtatWsnJDLg5DBR8v+Yhln3/O/DtvZ8fiNaxbn8eIoUnsymriupkT2bFtK28v
      XEMfRyCfLF2M09s53xRXrVrFkiVLOiVWa5YvX86KFSt0i//RRx+xbt063eL3dgsWLGDPnj26
      xX/ppZfIzMzULf6zzz5LVlaWLrE1TePJJ5/kxIkT7Y4hrgD8lKp62Ze9i+DoQRh9XuwRDkw1
      jezatZdwg5eCgmKa5Ab27NpB7JjLUF0NeDQIsNpwV+RT2FSPwWgmLDiQ4JAIFEM0hdmV5BcU
      4olQMDojiI+NI8C3jbzcfHyqRFRoMAEBduLiwlE6aTQ/MTERj8fTKbFak5SUhCzr9z0pOTkZ
      i8WiW/zebtiwYURFRekWPz09vVPr9P+3kSNHEh4erlv8MWPGEBoa2u7Xi1pAfkpTfRzbu539
      +eU4osOJD7Sy70gOqWMmEOIrZ8ehbCKTRxDZWMSx09WEhCcwaeJIXCU5vPPqexRWVDDkinsY
      7Cglp7SOSdOmo1bms/mLoySPuQJzUxP94kJY/p8FFNScodE8nbuudbD7UA7Dx08lrX+smNHV
      ybpqFlBb76M4HAxYvw7ZbG5XXKHriSsAPyXJCqmjJpA66uv9n5MzRnNuvlU8CYNGfNmewrBz
      rzh3wg4OoW9KFCFSCtOvHoQjKJ0RXx4nbBi3Dfjy2ZKE6m0kflAffJVhjJtyGUlx4SQNG42Y
      ztu7KRERGOPiWraHhyF+sL2LuAIQLpqmqWhISFzYWg9N05Ak6YKnBwvt01VXAKrb3fpsH0lC
      MpnEz7kXEVcAwkWTJPmC12WIE3/XUUKCUSIjv/t5djt0YFxDNpna/VqhZxFXAIJwiVDdbvD5
      vvuJkoRkNovELIgEIAiC4K/EOgBBEAQ/JcYABOES43M2oHncLdolSUYOsnf41o/P6URrZe2F
      JMvI9o7HF7qOuAUk9EqN3kbcvq9PcpIkEWAMQJY6flFb767n/ez38ajnn+TSHemMjR3b4fgA
      Lq8Lj+/r+JIkEWgM7JSTZ/HvfkfduvUt2pXQEPp//DFKQECH4p9+9BfUt1ILyBARQf/FH3d4
      HUCJs4TlJ5ajcf6paXLcZFLDe34585M1J1l9cnWL9hkJM0gITuhwfE3TcHqcqNrXM7EUWSHA
      ePE/1xZXAKqqAhJyFxZqUVUfqgoGw4WVHfP5vICMorT8Y/d6vciyjCzLaJqK16tiNIoLnZY0
      fF4PzoZGjGYrRlmjwdWExWpDxktDoxuL1Ybk8+Bq8mALCECR5R4zzXvh0YW8ffTt5sdWo5WF
      MxYSFdDxVaP1nnr+dfBfNPoaz2u/e/DdnZYAXtj/Ap/kftL8OMgcxHuz3sNu6viWp2pDA2pN
      TYt2SZb51s25LzS+09lqfF8nzQ4qqS/hxQMvtkgAkbbITksAJfUlrMj/usTHlfFX0j+4f6fE
      Pll7khcPvNiiPTk0uVMSAMBDGx4irzqv+fEwxzBeuPKFi47T4sz476f+gK3/ldx54xTg3Jxv
      VaXVk+1XNE1DVVUURWHBP/7MqBn3kJ4ag8+nYlBkXnjid0yZ/wvS+gShqhqKcu5EX3Yqixfe
      XMeMoQ7W5Fbx+5/9sPmYT1WRZQnVpyLLCqDh8517j/cXPE1d+Gju+/5kFFlufn9ZUXj2j4+Q
      cvWP+N64gZTmH+GRP7/E26+/fNEfzKVOU31s+OhDNh8+RlBIX/rHuNiVWUbq6OmEnd1JZlUj
      EdHDCK48xLEKJ1NvuIOpowbTUwpzu7wuqpqqmh83+ZpQ6T2VKBs8Def1X9VUxMV41ymqL+K5
      fc81P463x3daAugKtU215/3+1Lnr2hWnRQJw1tVCw7lL68qSPO686x5qGjUefvgXvPn+Mq6/
      fABH6+w0ndjOPY89z5A4Ow/Ov4XTtV6mXzOHF595ivEnVEKajnMw/xTTr5vLk39/jqN1Fupz
      PqfSLXPbvQ9z25ypLHlvAf98dgl9Hv0RH7z7PuveX8gTL73C//30JuqD05ia3pfNO/Yzc94P
      qM3aQmZuERmTrqOv7GLBi3/i9X/8gTfe+YC//erH5BSUc9sD/4Ozvp66yjNcP/PHeLwS7mD9
      6nz0apqGW3IRHxfN4QPHiIsegNkm01hxkq2FKr/7/UO8/ds/U2EPQTaZqahv/O6YgiD0Kt96
      w3TrmpXEj7yaZ3/7Q/6zeD3q2SO8+v4S1i3/gM8Pl5AcGwqaRnV1DeWVVcjGYEZnjObee+YR
      5IgkPNDCniOnuSo9lXvvuYeqqioqq2tocp07mUyYeDXjp36PtMQIps7+PndfN46sEyc5XlTP
      0g9f5d3X3mZgSiIfv/sxdQ21FJ2uwON1gwY33fEzxgyO54vPVnCkzMbaT97g+eeewatq5Bw9
      SG1gH/7+xP9yAbOi/ZKqejmWl0NxZS0+3FRWlGH0eSksryHB2sAb/1pAbXR/muwe8DaQfboU
      8f1UuFTIkoxFsWBWzJgVc6eMHfVGrd4cf/eN5ziwYzGDEpPYuXYpZYeDufzK+cQMDeCFlcfI
      cFRjTZmB2SDja/Lgky2kJTnYuGMTwRYjiz9+n/WLFzN58iTyGt1EWM189PGHYApiYLSNLbu2
      cfet12A0Wzh6YDu5Y/thsRiQDOduL4REhmO3BjJo6AAMRgsjxw2gsXAfo0eksXrtZh6YlYbR
      ZEWWZUJiBtBQ8jw/f/Qx0keORZGriY3rR9lrr/LUU/UYEIWpWiMbLNz/g0cor23EFmgjwCBT
      WlFNWGQMJho5U1ZJRFQsksdJaXkdUbF9esjNn3OGRAzhhuQbmh+bZBM2g63T4psUEz7t/K8P
      itx5W+OMjBp53t00q8GKURE7acG5k7NJMZ03yPlVe2cZEj6EpdctbX4cZum87TFlScYot/xZ
      dmb/pydMZ3jD8ObH8fb4dsVpMQuotKSIopJSAOL6JtFUX0p5XRPDhw6hsbaK0toGzIqK0RpE
      RGgwAGUlReQWlDB46DBctWWU1TRgM4BbldAwEGZTKGvwEmFTyC8qY1j6MGwWE6rPw8EDB4mO
      ikE1GLDIHjSjncqyEgYOTKGhtppDWdkMGjIcyVPP0excBqYOBnc9PmMA7roqgsOicTdUciL/
      NOkjMqgsLcISEoWzvIi6Rg2z2UhiQkI7P2bBH3lVL2edZ1uMKdiNdkIsId3UqwtXtWgRrsxD
      LdrlgAAiH/k5cgfLT1e89RZNWcdaxrfbiXr0EaQObgnZ5G2izFXWYhA4zBxGgKljM5i6gsvr
      otxV3qI9whqB1WDthh61TUwDFQRB8FOtXpM0NdSweuWnFJyt7Or+CIIgCF2k1QSw8JV/45YU
      /t/vHuvq/giCIAhdpNUEcN9PHsVTms8ZtypmfgiCIFyiWk0An2/bzjW33s9gaz2VDd6u7pMg
      CILQBVqdBlpXmsevfv4RZkcaIdbOm/omCIL+GrOy8JaVtWiXjEZso0cjGTpWGsV15Ai+ioqW
      8U0mbGPGnCs50d7Yh49w5o9/bH3HMSD8B/cTNH16u+ML52v1N2H69+9k2pzbkWRZVPa7RGma
      yqmis0REOrCaZIpLSgkKDcdu7flz0Wuaanh086O4vK7z2q/qdxV3Dr6zm3rVc5QvWEDdylUt
      2pWwUJLWrkUJDOxY/BdfpH5Dy60nDQ4HSevXIXWgGJzqrKfx0KE2axb5KsXElM7U5lcBWRHf
      /C9pqpclH3xAv9RUMjLSWbd8CYHRSWRkDKNPsMShI3nED0yjT2Rwd/e0Ba/q5VD5IZwe53nt
      aeFp3dSjXqKzBvTaiCPGC3sfUSbTj/lcBRQWmcj+IhNVKqfKDfn7dxEU4aGg0kpCoZcHbp3g
      17sGFRUVIUkSffr00SV+YWEhRqORmJgYXeIL3y4nJweHw0FoaKgu8Y8dO0ZMTAzBwZ3/RUrT
      NI4dO0ZcXBx2e/uqyPrz37af0zAEpXHV9DmYgtzUufoz/crriUu0ERiTTGSgRvGJbJp6T4FN
      XWzcuJEtW7boFn/t2rXs3LlTt/jCt3vvvffIycnRLf7ChQvJy8v77ie202uvvcapU6fa/Xpx
      BeC3ZGICPbz+/D9wjBzNsD42rIFGHBExlJWUcfZ0BdFDB6H4+RDQHXfcoWv8++67T9f4wrd7
      7DF91zr99a9/1S22JEk8+eSTHYohEoCfkhQjN979AN9X1fMG+5P73fb1/gqy0mM2gPkmRVZI
      Ck5qMQjssIrS34JwMUQC8GeS1OpgvyRJzRvz9EQh5hDemfVOd3ejxwqbP7/VqZKSydThQnAA
      4fffR/B117aMbzZ3eIqpbLViSkxscxaQHBTUofjC+UQxOEEQBD8lBoEFQRD8lEgAgiAIfkok
      AEEQBD8lBoEFoQtpXi/e8vK2BzkDA1HauahHEC6WSABCr1P32Wc4P9/Vol0yGgn/wf0YQnru
      to3uU6c4edPNaB5Pq8fD770Xx08e6uJeXZyqDz6k6fjxFu1yYCCOH/+owzOBhLZpmkbFv/+D
      t5VifMbYWMLvvuui4omflJ/SVC/bdh4gbdhQwu2tF+/SNI1jRzKRgxNI7hvcYzaFb9i7j6q3
      3mrRLlmthN52K/TgBICqoTU1obndrR7WvJ1Tft2reqluqm4u0BNgDMBq7Jz9aOs3bqR+Y8ti
      cIrDQcQDPxQJAHj76NuccZ5pfhwVEMUdaZ2wqFDTqFm2DHd+fotDlmHDRAIQLpCm8sXm5WzZ
      uobxk68lOcrA0k/XkTJiAkPi7SxZvop+g8bgObuPbYeXkz5mPFePS2X50uUEx6Rw9dTR7Nu4
      lEOlRuZc+z1iwwN75KIxf3W6/jS3r7wdj3ruSuNnGT/j1kG3dnOvLs6yE8vIq8kjzBLGHWl3
      IEu9Z8hyRd4KDlccbn6cFp7WOQmgk4kE4Mdko5nLxk/ji1VL+EyqZ9rMOzi4ZAkbpGomzLqL
      wrXLOYOB1CHj8eRs5s38TUSnXIfv6AbePFVCnauJKekhLPlgNQ888H0Ml2AG2Lp1K7Isc/nl
      l3d3Vy6Kqqk4Pc7mBPDVv73J+oL1bCraRP+g/swbNE+XBPDxxx8zfPhwBgwY0Omxe4Pek1KF
      TifLdswmK5rFg8utIRvNaKESDT6QDBYIlfEZQukbm4KjfwRltW40xYIcotCk+JAUA0aDjKZd
      uhXjJElC7sAGJ0L7WY1W7CY7AcYAJJ1uQPr7z1ZcAfgrSWHsqEF8vmk9yZNv4JYwH0tXfErU
      qKu4oX8gS5d/ij31Cm6IC8UaGgQRo0kYOp0d69ZQH53G3VePZ/snS9iSmc+cG29HuQS//QNc
      ccUV3d2Fdgkxh3DPkHtQv0zOQyOGdnOPLt4fxv4Bj+pBkRTdbv/MnTtXl7gWg4UAQ0DzY6vS
      OeMvnU0kAD8lyQpjJk5j9MRpzW0/Tc5o/v+Pfzb43PO+OrHHjQMgLTmluX3WrV/uviXp9f2s
      dZLRiGRt+QclWy2IgYhzQi2hPJShz2wiyWxu/fPvhDpD3xRo6tjOZd3puSnP4dW+HtBXpM6r
      rSVZLK1+/pLl4ndiE7WAhF7H53SiuVwtD0gSSkgIUg8uZOetqKDitdfA52v1uG3cOOyTJnVx
      ry6Or7a29VlMsowSGiq2kdWRpmn4qqtb//0xGC56CrRIAIIgCH7Kv0dABEEQ/JhIAIIgCH5K
      JABBEAQ/JWYBCb2O5vOhtTGIKhmNYhBSZ5rXi6a2XPshSRIYDOLz15G7qAjXvn1tHrdddhnG
      qKgLjicSgHCBNFRVQ5Kkbv8Dr3xzIdVLlrRoly1m4v75T4zR0d3QK/9x9om/4dy9u0W7ITSU
      vq8sQDKZuqFX/sG1bx/F//vLNo/H/etlkQCEC6GhqRpenw9ZUZDQ8PlUFMUAqPh86rl2TcOn
      qiiyl90bj5ExZTgmpWvn/f83b3k57laqUUpWa6cVUxPa5ikubvXz9zkcbZa5FnomkQD8lKaq
      fLFxFUs+20FK+ljCGwrYXVDF8NFXEVSVybYjJ+k3ZAbRjYf4PPcME6aO5YPXV/JQ6p8ZHhfW
      3d3vMuqXtzr0Khng8/l0LTehd3y99fbPp6d//j2zV4LuVG8jn2cd4b6Hfs7QODMbshr4yY/v
      Jm/tUk5VqCQmhrHr4CGKswsxWQPwGoOZMHYWqdE9pyx0V3jvvff48MMPdYv/5ptvsmzZMt3i
      L1iwgNWrV+sWX29PP/0027dv1y3+E088wZ49e3SL//jjj5OZmalb/I4SVwB+SpIV7KrCto2f
      UVdWSqC3mo3rP6MxJISsQ7volz4Ub7UT5+BQLHV1bMk+SZ/iIgrOjCW5T7jfVFyYNGmSrmMe
      06ZNw2g06hZ/xowZWFspG9BbXH/99YSGhuoW/6abbsLhcOgWf968ecTExOgWv6NEAvBTssHM
      jXfMY19mNn2nTsPqriQrr4gJ067FVVZAcaWLSVOiCbG4OZ5XStrwdNzlJzGYem6ZBT3ExcXp
      Gj8+Pl7X+AkJCbrG15veZZqTk5N1jZ+amqpr/I4SCcBvSQSGxjBx0lffTsKJ7jfw3H8jwkj6
      xjPjE7/8JXYM68oOtskYF4d15MgW7ZLZLGagdAHTgAFYa2tbtCshIaIYXy8jagEJvc53/cp2
      9zTVS534/LuPp6yMppycNo9bBg3CEHbhkzREAhAEQfBTYhaQIAiCnxIJQBAEwU+JQWBBuIS4
      T59Gra9v87ikKJj69+/Rm+YIXUckAEG4hJQ+9TR169e3eVwJCSFpxacoQUHtfg9PSQmq09lK
      cAVTv35IPXTVq9CSSAB+TlN91NVUERAcjiJLaJpGXV0dRrMNq7ntXw+fuxGnqwl7UJCY9XGR
      KlwVPL//ebzq+XWLpvadypX9ruxQbM3rBY+n7Sd4PB2u13Pmib/h3LSpRbsSEUHSqpVI5ovf
      m1boHiIB+C0Nt8tJQWE+m5YtZu6Dj+KsKMMeGsaGlZ9gciQzbmQKYXYLxcXFmO1hBFsVqior
      0AwBGGoLWbp2J1fOnE1sn2gaa8upqvMQFRNFk7OW6no3drNCkyYRERpE6Zkz2EIdhAUF+v1U
      cafHyae5n+JWz99Xt09gnw4ngC7h8bS6J7D2bYlH6JFEAvBTqtfD4oWvc7ymgaJT1QR+sIjD
      hSVYjUaCAurJz8wka0sYKYP7sf3ACQINHgYNS+DgoRMYm2DOzbPYuvcLSovL6D94ItV5mymr
      c9JnyExOZn6CbDLQ2BiE6vUwOi2KzBNF9BuYwu13zcdm7LxbBLW1taiqSshFboZ9oWpqagAI
      Dg7WJb7w7SoqKrBardhsNl3il5WVERgYqFu5jNLSUoKCgrBYLJ0eW9M0ysrKCA4OxtzOqy5x
      s85Pqb5Gjtaf4tZ5dzEhJYxDRw8RFZeI7PbhlPow56Yf06evwpqNm7BHxWOTjZwu8jFi9F3M
      uCKRukYfU66YyC03Xk1p3nFq3WZCwiROl1cTFxXNTTMy6HvV9xiXFIdmtBNotVBU56TR0/pG
      Lu21bNkyFi1a1Kkxv+nDDz9kSSt7Dwhd47nnnmPnzp26xX/qqafYu3evbvH/8pe/cPjwYd3i
      P/7442RnZ7f79eIKwE/JBiujwhN47flnULwKl41IZ+eRLJSQMFLsGkvf+BfW+EiunzWNddsO
      Um8zMyIuAmuQmQDCcBlNBNkCMFmsmE1eTpXkEeANhoB67GGBmCx2wpVAbDYLp301VLob8dU4
      8XbyssNbbrnlO1emdsT8+fPFGEc3+u1vf4ui44ylP/7xj7rG//vf/65rsb9nnnmmQ/FFAvBT
      smJg1u33MdHpwmwyYzIqTHE6MZhtGBWY63KhmKxYTApjJ05DMlqwmAwgyUhaDEgyGekjUGSZ
      +36WRlOTC2QDBoMBRQJFkemPjDQyASRocDoxmK1YLZ37K6fnHxeASYfaQrIkE2IJwe07/z66
      xdD5twl6u/be2ugp8fW49fMVSZI6HF8kAL8loRhMhAR/fYILCv76PrrR+HW7Pfi/76+fu3P4
      1TcnWVEwmlqeiGUA5dxzg3S6R98bxQbG8smcT9A4/8rFKOubzDpL8HXXYk0f3qJdttnE+oJe
      RiQAQehisiRjM+ozqBl0zUwsKSltHpcslg5P0wyaMaNDrxd6DlEMThAEwU+JWUCCIAh+SiQA
      P6d6Gzm6dzuNXvVbn1dTfpY6Zy1bd2fjVcVFoyBcCsQYgJ/SNI3Swmw+3bCFvGO53Bsew46t
      WxkwdCwxgR72HckjIc7B4aPHGTrqCrYtfokBk+ey4oOV5B0fQvqIkRjQSIyLoqC4nIEDk1Bk
      MV2yu9Vt3IS7sKDN47LZTPDcuciiXIOASAB+S/W4eGvRItJGT+R0bg5LP3qL5PRp7Fj0IS6L
      TEh8f/as38Y1d85l+Stv0zclCkdEKLLHR1yImQ3r1+KscnLFFSkcqQonOTnpu99U0F314sXU
      r1vX5nElJISgmTOhAwmgbtMmPEWnW7TLVivBc64TM4F0pGkatZ9+iq+m5ZachogIgmZcfVHx
      RALwV5qKy+umT2w8p+0BnHI3ERkXT0GEQnlVKBOTh1N8NIu4vn2xqE3Y7JEgGwgMyCAjYzD7
      Kpq4LNLJ66+t5X+f/FuXL5Y6VHaIrMqs5scG2cCMhBm6za4Rvlb9/gfUb9zYol1xOAj63iyR
      APSkaZS/9DLu/PwWhyzDhokEIFwY2WTjhqum8PH7bxETk8iNIxL55KM3iRh6GTPCg4juF8v1
      M0bx5ov/Jv171xJnLuNobhEjJiZisgWTnjyAJIODhL5WkhyBdPXNnw2nNvDKoVeaH9sMNsbF
      jutVCeBA6QHyavIwKSauTri616wDEC4dIgH4KUmSSR09jd+MuhJJkgGNwSMuR5Kk5m/zWtxs
      MqZ+71x9d00j49wLkYAp6VbefuctJt9+HWbl0p1LcPjwYWRZJi0trdNjr8hbwaLsRYSYQ5jS
      d4pIAK3YuXMnffr0IT4+Xpf427ZtIzExkdjYWF3ib968mdTUVKKionSJ31GX7l+u8J0kSUKW
      ZSTpm///8uSv+jh19CCNPtA8TjL3F6BB8zd9gzmI2+98gMlp8Zd0eef8/HxOnjypS2xJkpCQ
      kCXxZ9iWo0ePUlZWplv8Q4cOUVFRoVv8gwcPUlVVpVv8jhJXAH5K01SKC3PJPnaUmJQxxIcZ
      2bRlBwmDRxJp9nA46zhHNq7mqh88hFpXzdkqlbB8N4dz8unTfyixNhef7zvK0HETiXcEX7JJ
      YPbs2brFvn/o/dyUchOKpGA16FOOuLe79957dY3/4IMP6hr/pz/9qa7xO0okAH+leln63rs4
      koez953X8bncEBbFplUbiO4fhRoQh1xzin889U/m3XsL2zcUUGjbhZoynu2vryLWc5AaRz+U
      gCDipk5E6eIMMG/QPK7pf03zYwmJCEtEl/ahoxw2Bw6bo7u7IfgxkQD8mM8bTdqQ0RTlHCa/
      rJIxwy/DLjfS0GBn/MRJZJ1ej6nEh6xquBtV7MEGRk6awM6SbQQ7RqGUn+WzY7lMnTyhy9cA
      RFgjiLD2rhP+pSLqN78m4icPtWiXDAYknauz+j1JIu6Ff6I2NbU4JLdjUxtRC8hPaT43T//l
      cXLK3aRPmsa4KJnFqzcTnDictFgH/QYOoXLfCsIGDWbHvlwwxDDImEfS9O+TveMoDa4sNn1+
      nEHjZ3LHtVdgEIvAeoSmggLUL3cxa5ViwJKSjGQQ3/0EkQD8lubzsHjRGsZcNZk+jgAkQPX5
      kL4xEPztATR8qtpcElpsmiIIvY9IAH5K0zRUnw9ZUcTJWxD8lEgAgiAIfkrcCBSEb1CbmmjK
      zkZTW6+OanA4MPXp0/74jY3n4rfxvcsYFYUxJqbd8fXmczpxnzjRdv9jYzFGRnZxr4T2EglA
      EL7BW1ZGwZ13oTU2tno8dP58on/9q3bH9xQXUzD/TjS3u9Xj4T/8AZH/8z/tjg9fJpncXPiv
      k7QxKgqDo2PTTptOnKDgtnnQRoKM/OUvCb/rzg69h9B1RAIQhG/SOHfibPPOaAfvmH5X/E64
      Ies+dYqTt9wKHs957Y5HHyHivvs6Fvw7+y/uKPcmIgH4KU1TOXFwN+8uX8Pw8ZOxq3WkX3YF
      B7duQdYa2Lz7KMMnzCWs6TifHchlcPpV9DcWsGbXUa664XbGpCVIC/nXAAAHIElEQVSIweOe
      TJyIhQsgipD4KdXTyLuvvkNUXBLr3/mIXZlH2LR+BVuKGqmpaGRQcgSr1u/i2P6dzL5lDrl7
      jrFrxUaMtiDqqis644tqp1i9ejVLly7t7m4IOnnllVfYs2ePbvFffvllMjMzdYv/3HPPcezY
      MV1ia5rG008/TW5ubrtjiATgpyRJwh7mICg0lOQxKVw3JYP3XlvO1FED2b1tMy4pAK3Ri9Vk
      JsoRSVyYFfvowUTaG1n8xQF8PWRbyISEBJKSxGY0l6ohQ4boWklz2LBhRETot6I8IyOD0NBQ
      3eKPGDGC4ODgdr9e3ALyU5LBwt0/vIVP1mxj6NgZJA+J47HfhpA4dBC2O24gq7iW788dRv/Q
      sYRZAxk3Ywya+zSbdmbz4DVX95iVv6mpqd3dBUFHY8eO1TX+5Zdfrmv8iRMn6hZbkiSmTJnS
      oRgiAfgpSZIIiRnIHXcNbH48dPwYAEZOvIaRnL+6d0BKXzQtjgFDLmt+vtAzGSMjiX7sDy1m
      6liHD++mHgk9lVgIJgjf4Kuvp3bFCjSfr9XjlpQUbCNHtj9+TQ21q1a1uc7AMngwth58ovaW
      l1O7bl2bg8y2ESOwiKuyXkMkAEEQBD8lBoEFQRD8lEgAgiAIfkokAEEQBD8lEoAgCIKfEgnA
      b2l4PS6qa+tRv1zUpWkaPp8Pn7eJ6tpavD1ksZcgCPoQ6wD8lKb5WL/oZfY7o3hg3hxMioyi
      Odm86jj2wFxW7i3joR/fj90oY7ZY0Hwe3F4fFosFn6cJryphsZiRxXoAQei1xDRQP+V1VfGH
      B35I8PBraCw7jbOhgnGTR7Jk+X5izOVo4SMJN7qorD3D5ddcT8HenZyqLGXUmMspPrKNM14H
      M+fcwsSM+G5dFOb1etE0DaNOm5F7PB4kScKg0x66Iv63c7vdKIrSvPWoiP81TdNwu90YjUZk
      uX03c8QtID+lWIIYNepKLh83kKAIC1ZfPQ2mCKaPm8nVU2cyecIQAkMUwi0SWfu2UhOZwB9+
      8xuiDLUcPyuREK5yvOAE3X2X6K233uI///mPbvFfffVV3njjDd3iv/TSSyxatEi3+M8884yu
      xfKeeOIJVq1apVv8xx9/nA0bNugW/1e/+hXbt2/XLf7DDz/M3r17dYv/0EMPcejQoXa/XlwB
      +CvNx7KX38KWYOWd1XvpSyUx42dTs303fdIGEuIIYNmWHSTYfGiRKcgVFRgDFOwhDs7mHMcQ
      bCJt4i3MnTqkW28D1dfXo2kadrtdl/h1dXVIkkRgYKAu8Wtra1EUhYCAAF3i19TUYDQasdls
      vTJ+dXU1ZrMZq9WqS/yqqiqsVisWi0WX+JWVlQQEBGA2mzs9tqZpVFZWYrfbMZlM7YohEoC/
      0jQa6pzIRoXys2fAaCIwOARvfQ2yKQCrxUR1RSkeSSEwKBiDz0V5TSMxMdE4q8qoa1KJjY3F
      bNTn0lkQBP2JBCAIguCnxBiAIAiCnxIJQBAEwU+JBCAIguCnRAIQBEHwUyIBCIIg+ClRCkIQ
      hIuiaRoqLXc0k5HFVqG9jEgAgiBclJO1J/nT539C1c5PArcPup1p/aZ1U6+E9hAJwE9pmkZD
      bTmHcwoJDY8gOjSAY9nHCYlNwBEgU1R4Emt4PxL7RomCb8J5GjwN7Du7D592/r7J0/tN76Ye
      Ce0lEoCf0nxNLHr9dbxB0RzYt4/xwzOoqK/hTOEKklPDqGw0ITvXc939D5Pk0GeZf2coKSnB
      5/MRFxenS/zTp08jSRKxsbG6xD916hRGo5Ho6Ghd4hcUFGC1WomMjNQlvt5yc3MJDQ0lLCxM
      l/gnTpwgIiKCkJAQXeLn5OQQHR1NUFBQp8fWNI3s7Gzi4uLaXapEDAL7KdXrodxdxbTp04iP
      1Sh3FWMOMOOtr6bBFcaoMbOJirBRXNHQ3V39Vlu2bGH9+vW6xd+wYQObN2/WLf6aNWt0LUb2
      6aefsnv3bt3i6+2DDz7g8OHDusV/5513yM7O1i3+G2+8QW5urm7xX331VQoLC9v9elEKwk+p
      Pg/rPnqLdQdzqc6vYPSEAeQWO1EkDxF2C/uyz5IyMoOf3jOfEEvPvVD86tdXr8FHEb+lI+VH
      mLdyXotbQL8e82tuG3Rbp70PgKqqSJKk2+fTm+NrmoamaR2K33P/sgVdSYBT9aEZzKRecSXz
      75uLgooiS6xbtpqJ14whY1CEbnXSO4ves05E/JYsBgspoSktEkCoObTT36u9de79IX5nJBZx
      BeCnNE1D9bqpczZiCwzEqChI0pfbQno9SLIBRRF3CIWWNE1rcfIHkCUZWRK/M72JSACCIAh+
      SqRrQRAEPyXGAIQvaWiqBjoOiF0In8+Hy+XqtvcXBH8iEoDQTNM0JKRzI8TdxOv1UllZ2X0d
      EAQ/IsYABEEQ/JQYAxAEQfBTIgEIgiD4KZEABEEQ/NT/B+YQ6IjCfdjHAAAAAElFTkSuQmCC
    </thumbnail>
  </thumbnails>
</workbook>
